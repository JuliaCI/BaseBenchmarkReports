cset: moving following pidspec: 638
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.567478863 seconds)
loading group "shootout"... done (took 1.205846828 seconds)
loading group "string"... done (took 0.402953857 seconds)
loading group "linalg"... done (took 7.566588542 seconds)
loading group "parallel"... done (took 0.14441863 seconds)
loading group "find"... done (took 1.260617444 seconds)
loading group "tuple"... done (took 1.819479516 seconds)
loading group "union"... done (took 11.924247632 seconds)
loading group "dates"... done (took 1.24492475 seconds)
loading group "micro"... done (took 0.190380023 seconds)
loading group "simd"... done (took 4.117488763 seconds)
loading group "io"... done (took 0.979096691 seconds)
loading group "random"... done (took 8.121602214 seconds)
loading group "problem"... done (took 1.424213648 seconds)
loading group "array"... done (took 18.551852244 seconds)
loading group "misc"... done (took 1.439859955 seconds)
loading group "scalar"... done (took 37.543058827 seconds)
loading group "sort"... done (took 2.86985111 seconds)
loading group "sparse"... done (took 11.234065978 seconds)
loading group "collection"... done (took 16.461584701 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480961549 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122867255 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126853627 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11569558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.141302078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118800537 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12233446 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083538007 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.93219912 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138019469 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110126749 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.425184827 seconds)
done (took 5.250038966 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.159776185 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083789976 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074511419 seconds)
  done (took 1.283709071 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060928728 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126107895 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062759235 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062944181 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063125151 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062569042 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062597494 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063075842 seconds)
  done (took 1.629206523 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.06788604 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064442995 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062553821 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064076569 seconds)
  done (took 1.386363397 seconds)
done (took 5.665143858 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.230036162 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098656945 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.281749684 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.385838473 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.449870888 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087607776 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071012782 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066761625 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125875667 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330654331 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101886991 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.177069894 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085517916 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.17474247 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.996436148 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113595308 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080699789 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117305853 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088139576 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126386327 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.40304061 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074424329 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069387973 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066938326 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063971853 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.661534569 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670353422 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.122629786 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079225883 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097744068 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112656316 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.645814376 seconds)
  done (took 10.41439443 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089002988 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086865922 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064289061 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121441849 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09101436 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066170377 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071117339 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06341374 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087889853 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.122195974 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089301107 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096743185 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063231538 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065570147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072965719 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195259315 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077361062 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077384483 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064663062 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076393281 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103963141 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075602399 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075543202 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075700612 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125321948 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167007892 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09462968 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093075054 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064211344 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.076941795 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111179318 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123547607 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063222209 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062113644 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.116475383 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092313022 seconds)
  done (took 4.440287511 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.920906652 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.106433124 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08674601 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098768683 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.603987185 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061938619 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148707177 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236991346 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069310067 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.35225467 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.140421883 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110335954 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.138041319 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.108609272 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064648381 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.204018555 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.111553497 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.359161686 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064645223 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063311488 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062362642 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065439487 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064279237 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.05994885 seconds)
    (24/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059976999 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06599246 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088675454 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.059640072 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083095683 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.162393101 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.918521616 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.245540131 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064261918 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16199063 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082587325 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.371701969 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066683708 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079834388 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.393762774 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.116947875 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062801103 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167487908 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.113599229 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06203648 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113309111 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075073811 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065677371 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067752474 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064506604 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066516045 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074069928 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098590093 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065261524 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061512183 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158904351 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061787327 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062452218 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063903688 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14583152 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061875902 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13763887 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061108923 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064887477 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09573619 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064566671 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087172851 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.09770056 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.327989376 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.025522735 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062844802 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.901331622 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073318349 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.060889698 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.0672239 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062593903 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063909409 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065235037 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071253106 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066692495 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065043714 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105178931 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06375272 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065997328 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063261537 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067916355 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096346398 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062021079 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.459532294 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092565571 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062844265 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.07381808 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102281771 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064476645 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069611429 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063685509 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063630147 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06288653 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063730166 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.178379781 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090415944 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066118493 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110343961 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.03776052 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063614271 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.059375246 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063280262 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068363567 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066595941 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065065017 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06372874 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06650204 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064569291 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061885574 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.110308487 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064025086 seconds)
  done (took 20.960715949 seconds)
done (took 37.862280835 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.2436187 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076508208 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076852764 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076910463 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078583802 seconds)
  done (took 1.77210479 seconds)
done (took 2.984005488 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.102971795 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060772098 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097161124 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095674998 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.066054379 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060336053 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09377477 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060442438 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094048561 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095718154 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097792885 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097141919 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060311923 seconds)
  done (took 2.299205061 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064581202 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076204668 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077573012 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057461458 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067524996 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077267077 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058523644 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076997595 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082810282 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077758227 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07815978 seconds)
  done (took 2.000040347 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064661252 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.075721197 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07824197 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058037112 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069905021 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077610987 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058838341 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077626163 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.0809299 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077705802 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077724163 seconds)
  done (took 1.991466111 seconds)
done (took 7.491116218 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063863335 seconds)
  done (took 1.243275939 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.515395037 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.589033117 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065048564 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083975144 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181564007 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096481846 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.22463781 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068820275 seconds)
  done (took 8.17738958 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090555484 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063937639 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06925929 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065236027 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065032705 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066374505 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06614039 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066210813 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065534103 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065765911 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06677064 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067089265 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06638695 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065942505 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06628728 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064732673 seconds)
  done (took 2.363172433 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092704524 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09145254 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070118631 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070931252 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069056544 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068400045 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070685465 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070114026 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067053237 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068519469 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071417374 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069481224 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06910113 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060404564 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070775019 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072192818 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066821035 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070223811 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070867751 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072133974 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071434627 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060411432 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069090064 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070717619 seconds)
  done (took 3.007431706 seconds)
done (took 15.988691326 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108258429 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071522844 seconds)
  done (took 1.369025126 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066241375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067169961 seconds)
  done (took 1.337772352 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07399147 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057642147 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079630052 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070204282 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059035524 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058554566 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078689645 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059093593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058749709 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058974903 seconds)
  done (took 1.860053143 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059963052 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067153687 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066135719 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.06794934 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065900783 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060510396 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063742072 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06047873 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06862991 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059569509 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064293566 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079079106 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063822263 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081027779 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063619776 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064577221 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066895216 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063618709 seconds)
  done (took 2.392833998 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057602177 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059773331 seconds)
  done (took 1.331499973 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061903421 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058640578 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063126393 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062896409 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059704854 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058911517 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059660977 seconds)
  done (took 1.630475688 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398859761 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11587413 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334368838 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066452755 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076267938 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244034123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060431889 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065425498 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065687405 seconds)
  done (took 2.675282546 seconds)
done (took 13.814401488 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075764077 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.079139762 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.08679076 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415923593 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089807253 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063896452 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108726129 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17781355 seconds)
done (took 2.325635979 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209280328 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.400884094 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.946439619 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063692023 seconds)
  done (took 3.627476767 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315978227 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07966208 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07377967 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064179484 seconds)
  done (took 1.758859622 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06023195 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06749845 seconds)
  done (took 1.347460781 seconds)
done (took 8.172543431 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08507893 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060671365 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059988651 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060520217 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060883799 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060433657 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.060690784 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060218089 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060387641 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060042369 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060104962 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.059929674 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060815077 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060465395 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060389275 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061217575 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060058388 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060121856 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06094624 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060353681 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060443834 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060407404 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060469331 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060303999 seconds)
  done (took 2.721470228 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076447027 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062392814 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064975932 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064633994 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064824891 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064713833 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064531742 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062866106 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065071096 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062400306 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065037345 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06521554 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062426137 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064687134 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062621571 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065074303 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064117615 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062726326 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062297353 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064633606 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064341393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062915826 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064641899 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064050397 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064767044 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064832874 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062353685 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062677507 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064351714 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064861681 seconds)
  done (took 3.160817294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060232894 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056399704 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057492831 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066685894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057886533 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058023424 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058311483 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056899853 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057828081 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058783514 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057859037 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056980497 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058474609 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056912453 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057306512 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.05803025 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061231141 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074774991 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058023015 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057388227 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060900439 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057581471 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056974058 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057037183 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057671796 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057230911 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056898073 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058212501 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057436398 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058745236 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057588595 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061356946 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061511329 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057350045 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066579498 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061577277 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057669209 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061072875 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.05876902 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057446393 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056966702 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057371109 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057566494 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057245482 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066224484 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057834613 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058599015 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.05796583 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058039817 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057208145 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057182079 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059608361 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062181986 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058795733 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055813418 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057357 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056707046 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058377793 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057035898 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057110348 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057283575 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060294841 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059270048 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058269569 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074567381 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059493954 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066435569 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057451452 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060669221 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060558 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058086508 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07266573 seconds)
  done (took 5.508754828 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082366268 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08350089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061149564 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061069686 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057767437 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058606725 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065954319 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058220876 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062433277 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076950504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058662735 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062043214 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06198217 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061881548 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058356123 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062234709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066447782 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058646019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05831697 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0619782 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058544531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065614701 seconds)
  done (took 2.651065477 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134468735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063170355 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098595828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07450331 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066581251 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074575025 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063668837 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063899624 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063834007 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064258734 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064129202 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06362526 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066385206 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064611798 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06418975 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064011772 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063950923 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064640899 seconds)
  done (took 2.520496516 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073261348 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062528911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082499793 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06257828 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061580557 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062842289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067823987 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068203173 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062750678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062970944 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068301288 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06274582 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063130066 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06300273 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062783478 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062942329 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062483768 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062926817 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068169395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067021708 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067737777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068164557 seconds)
  done (took 2.685337619 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071084956 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0612039 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074495762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063936455 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058192231 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058064067 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063288102 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062488599 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06314783 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061720107 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062144378 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057826056 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064165044 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062167663 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064426515 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06237039 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061908485 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062277618 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062011574 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057804284 seconds)
  done (took 2.493912084 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083492708 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059645504 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061038715 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079563493 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061327014 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060816895 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079480441 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060742156 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060950347 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082343178 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06205953 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062062167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079116656 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078923841 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061439682 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079010364 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079034445 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079333091 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060868914 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061237312 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08186203 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061284933 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079686849 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061406059 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061034225 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061463124 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060852189 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078900023 seconds)
  done (took 3.178972372 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0685321 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059337458 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061012428 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060540435 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060842996 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060712766 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060724495 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060957294 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061716212 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060784587 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060244899 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06059111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060534987 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060198449 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060589346 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060445464 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060461282 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061195039 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060829497 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060794811 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060784037 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060837948 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060283488 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061428146 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060801236 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060804363 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061164564 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061034415 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06013183 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060828187 seconds)
  done (took 3.073948957 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070067287 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067992294 seconds)
  done (took 1.383072392 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059203344 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072731787 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.05654014 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066035943 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066781782 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061010574 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067493155 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066775845 seconds)
  done (took 1.7571037 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064824231 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085379111 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059164916 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06096453 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063377319 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114706325 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073287322 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068748225 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073637058 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060618091 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060564324 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070901049 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059386118 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070314082 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06149308 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066612081 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064894896 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069159248 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070205451 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057722744 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070624575 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060565837 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058207204 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0608242 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059493382 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064824193 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07272816 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069540691 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06629705 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057055501 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07618433 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058665172 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059941258 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066638682 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063417507 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058435956 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092246646 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.05893609 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064534407 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058446617 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069735826 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077235541 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070970743 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074654322 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060215684 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060057472 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058156252 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060732783 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061505672 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06622521 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058205674 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064421151 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057262568 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060292113 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067533397 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058679286 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064736052 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066555404 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069435597 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066967955 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065360219 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071658675 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065621726 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067721145 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059148098 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075717537 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060110601 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069019873 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070732191 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.05971431 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071048921 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057840489 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057411339 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058507881 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088054742 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059837986 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059468102 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058382576 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058676397 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060394915 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06645311 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064976781 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064283306 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062766483 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072688001 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06660853 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058548269 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066719916 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075151652 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061139955 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058344551 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074040217 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060924569 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058619155 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074955016 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066489448 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060288114 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059198281 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060760202 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070661499 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059634571 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057094026 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065098133 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059970547 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061225597 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063655424 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064737618 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058198098 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066909713 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064059585 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.06043239 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057266991 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061567036 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059313162 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057043163 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066514583 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058130959 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071428533 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062679784 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069967624 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069892405 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066793376 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071513108 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057151815 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056525974 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073565497 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200618803 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062350007 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077367239 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059761343 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069236803 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.05980591 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061409065 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.06769003 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058773287 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061459296 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060040162 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06581363 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060815208 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061121194 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06210121 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065656881 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070299182 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060274956 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066245899 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059401945 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072955669 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067735196 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062603273 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063788816 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059686082 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069799526 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064172994 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067020541 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058915676 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060222038 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058837359 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06810796 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067069082 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061096087 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068351519 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062841965 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059805929 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058843389 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060301358 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061350053 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063501752 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060183874 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065241296 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066349072 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072741464 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070786478 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066271982 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058967601 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058549565 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060617322 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057696147 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060356387 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066381738 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072165218 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069275148 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076925247 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058720872 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066729846 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06020463 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073965158 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069900881 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059915204 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064228653 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05761732 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060629256 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066649925 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069273206 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071634561 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071739203 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062258215 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062087985 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058531268 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071824593 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059073889 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065489498 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066800831 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064333671 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058715784 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060727715 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066620979 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061474165 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057556803 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070856636 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065408565 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058468206 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07086221 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058921176 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068190071 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058554603 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060823637 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062332007 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061112808 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066665458 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072184317 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057461821 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059174247 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072610742 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060752637 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060700549 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065085968 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071407349 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062319557 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064825454 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068038807 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066922724 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061643085 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066318453 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.0595811 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066125469 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061541576 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068358229 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057951241 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07469492 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057149116 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07114636 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058491451 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067598304 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058791271 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06615397 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059005065 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073166353 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059973233 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058905362 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067850291 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056261921 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065059654 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.056805457 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061260423 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062688446 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.06551729 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059413921 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.203279815 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061089951 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066889234 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063263656 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067438114 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068232494 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063258956 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.05874259 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065782026 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069391761 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066307423 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060860617 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061213159 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059834602 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067552793 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060703665 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060788818 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06545626 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062641239 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063430996 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061435935 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061200625 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061511124 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066412436 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067060603 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075792127 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065988385 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065117787 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067227639 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058390791 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073839221 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058569188 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064930552 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.05768951 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06652326 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066013823 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059098246 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076518813 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060825348 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065924315 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071726164 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065792724 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061441124 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076307768 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063325201 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065761174 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065959597 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062807528 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064061891 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061202345 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065510948 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065550469 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066493276 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058900843 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064412312 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065998852 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061067978 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068126812 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060639318 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064193998 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059475973 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056471684 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061504114 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069296657 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062206014 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062576243 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058972456 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057476669 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058984364 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067016806 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063307189 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065850764 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072099757 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057736401 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059841766 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058559338 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063105449 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075256375 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067269876 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064861026 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062481307 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05768454 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.05950624 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.05972627 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057455905 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061321773 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056304478 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056923351 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066333502 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060439933 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062282691 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0588732 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059955011 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066264188 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064547492 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059271772 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064255795 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058359473 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062279593 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057606066 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060410065 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062320084 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057888474 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061075837 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067550959 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073260191 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064199387 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065725099 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059507389 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064953433 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072224457 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067067279 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059750268 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066231036 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057557388 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074363682 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066596559 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064607272 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066475522 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.05901 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073320573 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061608396 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066475319 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071234735 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059203051 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064947425 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057058785 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070785191 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060144647 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056513549 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064305922 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063365803 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.203436945 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068657478 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059632831 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065152715 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064807914 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062524927 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.06179963 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061294339 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066559744 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073918467 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060457079 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064331896 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065784044 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06554284 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062744716 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070141376 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06590903 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060845076 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060981114 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061020367 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060178826 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069882742 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059623759 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062310053 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062575481 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059368049 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064278378 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073227548 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066724413 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067549841 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058904104 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057742205 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07541623 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060980316 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064143404 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065577954 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066882886 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070107607 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066864693 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074194338 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059712704 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064215382 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070065749 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060425838 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059096951 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06105196 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060223164 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065558051 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065625858 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063894203 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059327986 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063049758 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068501914 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058624921 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061005563 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062899793 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058026247 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.065891433 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.063917231 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064677936 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.05889104 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.056738129 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.059757937 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064584196 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063209298 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.064857814 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059510333 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067066814 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071978748 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064564705 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062570364 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058638081 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062923715 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066044626 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064616504 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058772312 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062345549 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060922161 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067331537 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066910775 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06218996 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058369273 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073370238 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065930187 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067059748 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060792896 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061084127 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059301242 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058385468 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068813194 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058356678 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060720024 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062350254 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061884807 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074641267 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065922256 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072611091 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059513041 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062076766 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058116666 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066642878 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062160856 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058628168 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067343507 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05769035 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072380484 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069613091 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067180798 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058809715 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062427743 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065614416 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071000697 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065774604 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065955557 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062413056 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066794019 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060731367 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066482705 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056889998 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055893267 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065427348 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063445401 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069111002 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057998946 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066839513 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059392207 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063688571 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0640751 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059488258 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059216478 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059305944 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.206345745 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062144758 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067015236 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061828296 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072434013 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060017912 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069763314 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06657293 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069198249 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070802704 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070996457 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066728478 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060032517 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065362426 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066191721 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060911374 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062834434 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062998559 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079483195 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061213632 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060912459 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072693701 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067085883 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059366383 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067240292 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062558206 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068013563 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059856108 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067465367 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06396706 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060427632 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06223045 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06250965 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057329725 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.05914196 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058994749 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067689033 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063398752 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059254788 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076604453 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061420988 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066525931 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069095241 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064631404 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061927535 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05769977 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060140248 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069304499 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07251238 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060294051 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065040399 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060454343 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065953832 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056103312 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064291075 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.063793255 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064256724 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058117451 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05898915 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071114075 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072233991 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061297156 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065303003 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065272276 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.058966732 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077420887 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064439009 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059852363 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068889392 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061479429 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058024196 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057669198 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060669844 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069610472 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058562526 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062535437 seconds)
  done (took 40.066412537 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09747121 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058429404 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057435492 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059140433 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070645613 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059884964 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058651139 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060301772 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059787146 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061549686 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058738165 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058596335 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070827224 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073736227 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070324905 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063407752 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058908636 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059553923 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059331064 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060811154 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069633025 seconds)
  done (took 2.701868146 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06601881 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07304708 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069371213 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074182144 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066914801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063656203 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071246739 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064190402 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071829185 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069122691 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071885017 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064103293 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068986672 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06884964 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069008235 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063751104 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071313137 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067014899 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06399238 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070924881 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064073433 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071367056 seconds)
  done (took 2.83283131 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059238968 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058144749 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064848069 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056828125 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056794631 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060459615 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057099374 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061600495 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061207707 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061296486 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065207354 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059008587 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.05785795 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062444033 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05734505 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058807511 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.101212536 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059284631 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059240602 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057869093 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063423623 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066187497 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058022458 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058532818 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061240487 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061888388 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058027503 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061130734 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058997274 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061202857 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058952241 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057826857 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065544278 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064808676 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0614141 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061380437 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060079295 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059299208 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058376465 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.05793475 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065382691 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059847985 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058194276 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059469619 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066009891 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058158462 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057765408 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066161681 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057711571 seconds)
  done (took 4.331889018 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07023501 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105543223 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.062837084 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086082779 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071144385 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064728135 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062610615 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088405715 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059774112 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060433938 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074403607 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07423018 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062004746 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063462009 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.063962169 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061629666 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062567544 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061962985 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065300689 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061012115 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065200764 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065626876 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072387675 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073283685 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063116578 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06099115 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061564915 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063450981 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073102324 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066156848 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063552389 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064484967 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07341088 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066402588 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061251431 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061640476 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073550947 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06096608 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060366233 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059861585 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061345871 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062387922 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064868226 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073862377 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062208918 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066395517 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061860136 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059332188 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072615919 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060660655 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064839724 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072598229 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062145389 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062042971 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064045397 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073314578 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062349178 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060336219 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061959622 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0731116 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060263614 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06293557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073858986 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061076049 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065893566 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07443744 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066366281 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062240691 seconds)
  done (took 5.988115114 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06787942 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087571068 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069622094 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069401265 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069022887 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070220579 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070286756 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069854062 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069813819 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070444547 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069183972 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105991168 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063701168 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07319853 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.06777681 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06786114 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068398252 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069485534 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06990219 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069887487 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069568397 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07081784 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069643381 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07049352 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072934721 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065575026 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069510011 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069746161 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07030299 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069389077 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073015601 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0694686 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069696755 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070281901 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071989324 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069737001 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059310125 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069406527 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069043711 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067561646 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063592244 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068476506 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067795788 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063500386 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068176028 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067730393 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068544324 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070941277 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076335312 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068820852 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068334638 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06913789 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067875274 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069735782 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070654612 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078418389 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070766646 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070432005 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069929469 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071046056 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070969957 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077601085 seconds)
  done (took 5.729639794 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07357951 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065610622 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077225685 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059589999 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057907784 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068703058 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058224085 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05828619 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067105545 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066962224 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068948186 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068199363 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070868241 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069215571 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068118607 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071090795 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068629712 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068602518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066918035 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066927681 seconds)
  done (took 2.700104411 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.06917476 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074834034 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063410075 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066814824 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062523715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066616155 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062074151 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063746638 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06400424 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063985338 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068805485 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068311511 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063231562 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06705973 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068088363 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066876808 seconds)
  done (took 2.405600744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064099942 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066338457 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065970218 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058926095 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061499954 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057974265 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058239984 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056697659 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.057325434 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.070728117 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058363084 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069365183 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058604306 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057915788 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059086649 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065385731 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058633887 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.05968714 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059643335 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065362235 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066234758 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06066224 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063256507 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059615103 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065092959 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066972092 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061262435 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062871122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059548804 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060176871 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065065253 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066486046 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059370191 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06024959 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.05856682 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059499376 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059329863 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060118432 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065269254 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059575948 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058128987 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064416924 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059965027 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060455972 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058931107 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060491887 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05867436 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065323676 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060007197 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064146319 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058664393 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060414197 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.058754463 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065980712 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061992067 seconds)
  done (took 4.73177392 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072178294 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062362133 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057826584 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057128238 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062056104 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063864187 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063874924 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063640743 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064364742 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058304754 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063853308 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062933641 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063549081 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063434737 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064505594 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063365631 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057992068 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06340336 seconds)
  done (took 2.489141451 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068221121 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062426969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068416194 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063444549 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063180677 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062696042 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058706388 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05836307 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05834058 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063050504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062887826 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062322621 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058659511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062480047 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062859854 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06298389 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062658636 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05887857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062963644 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058736524 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062652352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058521637 seconds)
  done (took 2.713263128 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083338039 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078786796 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.116258135 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07453225 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082422742 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068538363 seconds)
  done (took 1.854037367 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085781433 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098516017 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062180539 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06299595 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074289683 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067267136 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067065018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067046972 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073862036 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071854795 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066978617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074089404 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073955029 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069965526 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074033576 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077351364 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067109448 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067324106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06324493 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07702438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067310461 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073963585 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067189429 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066816696 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066940946 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086486163 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077689186 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072224692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068932196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074000798 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078238214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067733739 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074022683 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07231279 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063467598 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074700015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066701496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075813721 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074002355 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067911031 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062215007 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074471918 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07347498 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06754689 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076201284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066377207 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068620149 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067333856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067680699 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080199841 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074393963 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069338226 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074739987 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078018499 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077829439 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079835324 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072405931 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068707095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073598997 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072355023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069301296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074353437 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06938513 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071974159 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077709029 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069833518 seconds)
  done (took 6.112395658 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093996893 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06244965 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066301873 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070947172 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067882788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065554322 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065785074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065369283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065330376 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062229209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099079614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066112442 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067592603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06780625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065897239 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065629554 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065427505 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06747403 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062825573 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077857838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065710888 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067670894 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067630999 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067469378 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070270311 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075237465 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065810258 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065682327 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065873799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066524935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069229096 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067583452 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069361729 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063878272 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069503362 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067378419 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066989234 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069412814 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066975553 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073002382 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067717474 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075329246 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06555868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065367559 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070583119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066201981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065850282 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062280826 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066585126 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063748812 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072226672 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072403902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072160373 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069896226 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067889115 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067688556 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067705867 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067359492 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067890128 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077575601 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069520359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067109233 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079863161 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065455565 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065735932 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068664662 seconds)
  done (took 5.919105196 seconds)
done (took 122.931293278 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203289875 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.178957718 seconds)
  done (took 1.723751981 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069456683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091800023 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070970554 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128687309 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066296069 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100084836 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099003497 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070332514 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065652996 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065834046 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067756401 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070323805 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133611236 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065968422 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065780437 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068677969 seconds)
  done (took 2.657990338 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100073986 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.175439037 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105707373 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065613021 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101537987 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07334028 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065136784 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076181192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069320489 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068679262 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073161676 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071598762 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068570771 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071890439 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069507277 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073516576 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068244737 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072856629 seconds)
  done (took 2.83248816 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088643855 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081873704 seconds)
  done (took 1.537137175 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.149786826 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099676726 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138893924 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.315934967 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.130474852 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.269888317 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125985108 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126901642 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10937497 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1199511 seconds)
  done (took 2.947086329 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095681324 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160483074 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291469923 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11187081 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.069621185 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08158325 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114123869 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.075415626 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075654833 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074562313 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.074479093 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073928722 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091376985 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071067655 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07112427 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071372883 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.094608914 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070343784 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070396373 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07107564 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094821808 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064506006 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071815617 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070510285 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074618291 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074693002 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067646396 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065605187 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072729512 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071821041 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075170952 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.080716336 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074400711 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099151012 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068319755 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098549166 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069295326 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068490467 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070645436 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068722136 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072285082 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071868362 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072294816 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071011652 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065301973 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.06959152 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065521857 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.063997037 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073977752 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065167915 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074031052 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07318761 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097737546 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065166486 seconds)
  done (took 5.799623059 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103264476 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102954328 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065722963 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108071019 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098515223 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065733489 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100661541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093416177 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101099627 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064135863 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063979087 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063784469 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072466222 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075002501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110492438 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102469944 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066743706 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064267804 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102435749 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105142401 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065284145 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101384899 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093751231 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103986237 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06293355 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065890139 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064511315 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065211358 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071930362 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073154095 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06523131 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074229002 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082424396 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073743861 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064443907 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06440419 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064772031 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07357839 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073551788 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072520246 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070718338 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063118031 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062902037 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064027368 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065629519 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064110715 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072587596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072646111 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070522678 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063311131 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064258837 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.062888662 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063668738 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071196754 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.071400784 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074577406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073157455 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063793903 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064441088 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066570469 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07436564 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075123174 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072859336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065008076 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07506016 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064386677 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07401667 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076205579 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063075382 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063664264 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063188063 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.062998117 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06485188 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072210379 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072186732 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065150424 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064795604 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064323711 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074669638 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072735114 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064785818 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071658876 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064141236 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064643744 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06522565 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06517692 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072215239 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074320186 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066132316 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064690141 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065045746 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064839106 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063825693 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072117548 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073709902 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.072374156 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.071178658 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064758426 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073107598 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072773524 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065384054 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.0725961 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064394067 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06469848 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064764594 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071628928 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07077081 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072631008 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064003765 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063624155 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071051001 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.208566755 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064900592 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071890574 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073942552 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072663357 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063737372 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07741237 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064105612 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073169875 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064664361 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074080522 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064195854 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071783749 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063808721 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063032473 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065093274 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074010704 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06617154 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065243654 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065453304 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065932944 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073838083 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077413185 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067179284 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0737556 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074184448 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066139398 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073673734 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065299134 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074172487 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065714621 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065215187 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064852015 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076362969 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065478042 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06534187 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065508403 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0762954 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065766786 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075343484 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073395092 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064640847 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079972221 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07621643 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07067002 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073595256 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064222179 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063432774 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063668366 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065703181 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072219635 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073868401 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070319428 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064967922 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072310085 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074829361 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064662109 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072763173 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072810125 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072936726 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065734326 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064759901 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076224839 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075365006 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073242993 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073029488 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073855786 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065176047 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072578453 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072983982 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064847165 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077335774 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063350214 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07666542 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073482168 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072534197 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073798379 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074701391 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075233001 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075817502 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07500435 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062947207 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063022046 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071389671 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064955541 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065241947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073139142 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066064084 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065570788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078598891 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063854876 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073447421 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064545927 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074320843 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064657219 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065698124 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077999526 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065577666 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065499726 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07298155 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065512509 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072505205 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076057632 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072064847 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064658952 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065333683 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072701611 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07270618 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063909831 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063580106 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06413857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071180228 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.070660745 seconds)
  done (took 17.462871433 seconds)
done (took 36.338713926 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.200901609 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151555062 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18448611 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110522834 seconds)
  done (took 2.112607191 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093415971 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09289803 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074611687 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.05995026 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.08041712 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060376917 seconds)
  done (took 1.87000971 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27060061 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192678795 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170007291 seconds)
  done (took 2.036438184 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208247641 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188397054 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449394484 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281248084 seconds)
  done (took 2.625622568 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.127984898 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076299422 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059951072 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070569439 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.108698244 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.140779251 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086820767 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.109984464 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070429319 seconds)
  done (took 2.313273654 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128783377 seconds)
done (took 12.52539121 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107169755 seconds)
    (2/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.243973285 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.0917183 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.080263671 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.189226449 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063669038 seconds)
    (7/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.193181734 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114621323 seconds)
    (9/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074712466 seconds)
    (10/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072003463 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073521537 seconds)
    (12/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070498001 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075297028 seconds)
    (14/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.167644566 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.211586455 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068487459 seconds)
    (17/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073079859 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.368791764 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.232847422 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087417659 seconds)
    (21/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.06069401 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067610296 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069063085 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120813461 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070577058 seconds)
    (26/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074314894 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073608637 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071655328 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071765664 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.189615957 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098619523 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121957113 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071991589 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077363256 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071352104 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.081132068 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.135232785 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06230504 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.068957555 seconds)
    (40/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.068635428 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175284995 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059514653 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.061737782 seconds)
    (44/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.136958645 seconds)
    (45/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.084636305 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074407402 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.150239975 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071672944 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088808497 seconds)
    (50/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.117005196 seconds)
    (51/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.203130001 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.061652641 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214720359 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199456917 seconds)
    (55/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071288449 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074467729 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061511984 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07092689 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.081226149 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122633508 seconds)
    (61/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079669443 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079215233 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060971957 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069836927 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.166953751 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068786075 seconds)
    (67/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200155218 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071459466 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18325826 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076887154 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07303729 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084740409 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072041574 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.060978853 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.191680708 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12476625 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087739504 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062627981 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070983868 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191279883 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068141333 seconds)
    (82/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063002029 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062845554 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060483029 seconds)
    (85/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.229741529 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062627351 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068521079 seconds)
    (88/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.13138552 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.285341839 seconds)
    (90/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.174076641 seconds)
    (91/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06636404 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07246627 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15360511 seconds)
    (94/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062572852 seconds)
    (95/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.205592795 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156529032 seconds)
    (97/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.177962126 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.172350411 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062046075 seconds)
    (100/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.164428765 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16157919 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06188203 seconds)
    (103/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062691205 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068682059 seconds)
    (105/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.161608587 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170576997 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061698746 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061728632 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063476022 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.061466846 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150392651 seconds)
    (112/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072906684 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061796598 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.127109226 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.135123079 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118198171 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062645906 seconds)
    (118/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.136716421 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08695852 seconds)
    (120/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.167854853 seconds)
    (121/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132457987 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157457864 seconds)
    (123/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.065569328 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.179961878 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.157775734 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.060339448 seconds)
    (127/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06096265 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071626679 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061076134 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069132708 seconds)
    (131/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065562404 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070464052 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072796957 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067720793 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082117312 seconds)
    (136/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.062470812 seconds)
    (137/309) benchmarking ("sort", Float64, false)...
    done (took 0.12578315 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064514625 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116210645 seconds)
    (140/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069673052 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060186767 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.161902028 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072673415 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074440207 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.090826476 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06145862 seconds)
    (147/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.136282083 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072597722 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061367072 seconds)
    (150/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061901661 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08188699 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068362279 seconds)
    (153/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.207382461 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06066492 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086862528 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111843914 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061237689 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.059944349 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.175790337 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059329065 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.177986711 seconds)
    (162/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159561174 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06089526 seconds)
    (164/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.06671464 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.204702566 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149352434 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.060261959 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086434627 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06188933 seconds)
    (170/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.061569576 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143635482 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.059885264 seconds)
    (173/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.131706557 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.210518147 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068734905 seconds)
    (176/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.072517568 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070414166 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059646813 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062133119 seconds)
    (180/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.060880885 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.067355556 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.062995019 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134217651 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078864492 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123244125 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.158677649 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.081982822 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.060258508 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062107045 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060546026 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060903968 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.221558338 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085833337 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115014132 seconds)
    (195/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063658367 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061935868 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065378384 seconds)
    (198/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065971129 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064455113 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065041778 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075595066 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087527923 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144915917 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062651811 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.076378428 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062305597 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061822118 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107181387 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071048164 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06217963 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064403315 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069872756 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068547602 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199543011 seconds)
    (215/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063643494 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.1866491 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07119257 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063652389 seconds)
    (219/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.062128949 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061346026 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069390201 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.062361804 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062547288 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07526674 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063195272 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130202183 seconds)
    (227/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063654717 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073054468 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073961978 seconds)
    (230/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.062555461 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130056826 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136124448 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084551249 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090048312 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071119316 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069741064 seconds)
    (237/309) benchmarking ("sort", Float32, false)...
    done (took 0.128419154 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150823989 seconds)
    (239/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.068152311 seconds)
    (240/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061341801 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.060788758 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.060499738 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.081302262 seconds)
    (244/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063261595 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062486093 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086647678 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.060597675 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07434998 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.061443571 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.061245119 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08655205 seconds)
    (252/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064738641 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063255416 seconds)
    (254/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063084282 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063870773 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08762989 seconds)
    (257/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.062255685 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061361437 seconds)
    (259/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062051907 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070728086 seconds)
    (261/309) benchmarking ("sort", BigInt, false)...
    done (took 0.236734503 seconds)
    (262/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061883526 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115218387 seconds)
    (264/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063944899 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116861077 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069369697 seconds)
    (267/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.061788845 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066210313 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.060343958 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135523981 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.068771277 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062097516 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064567476 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115090597 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060990324 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061637947 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.132462784 seconds)
    (278/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062491556 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068651051 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.126529914 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062005524 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061427492 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.062245574 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062658296 seconds)
    (285/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066232812 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140880312 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062396158 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088221854 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.061798233 seconds)
    (290/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064312155 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062250068 seconds)
    (292/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070333109 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072857027 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063803301 seconds)
    (295/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.06961984 seconds)
    (296/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090107594 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068984033 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061486942 seconds)
    (299/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063121083 seconds)
    (300/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061225465 seconds)
    (301/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063286547 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.108513397 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06163549 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 0.165578439 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062960766 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061628578 seconds)
    (307/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062491674 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061095359 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.061982844 seconds)
  done (took 31.345345893 seconds)
done (took 32.767701358 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082765336 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085868954 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069029303 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.081157831 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07715743 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091298578 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069138123 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073615814 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076203218 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075401763 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074213257 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067124631 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070089947 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070375863 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068092305 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083526943 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074677474 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0692913 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.068783971 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060184788 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.06873495 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.060784076 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060382797 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.066864377 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.071614042 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.067459478 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071158399 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071827015 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062659821 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062381002 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066733589 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070890561 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064601889 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075072526 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071475425 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071171919 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072095101 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075239098 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061736528 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062746157 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07168231 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062086194 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07026025 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069098095 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067418525 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069256062 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070554381 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.0746405 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084214135 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06507506 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07120064 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072904215 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074204145 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067152812 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065609008 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.06856624 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.066680655 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082841175 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.068917995 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06437588 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.069958297 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069696226 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067023241 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068708666 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.068851186 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071176906 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073403693 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067150196 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070884989 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067429587 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.060195071 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.068823413 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065660021 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.060570008 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073946654 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074986287 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061683982 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066413931 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070294001 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070454761 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062451738 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066257184 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061802902 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066612145 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064505805 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068475076 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067438588 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069090443 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060323062 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.06927793 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068310268 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068419609 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061527367 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075432153 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062202367 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068464132 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062503819 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062752841 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061816761 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067334443 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06205288 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065119373 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.068944061 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.059751343 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065589353 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.073465538 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060247154 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.067569759 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060157232 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060818249 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072234248 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.070689025 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062346874 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066401693 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061768007 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067787443 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061885295 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061638995 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061659933 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062077554 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066852349 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061205499 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064558467 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06725672 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074149635 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060197399 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065288178 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064617444 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060402504 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068447588 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062497818 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062097229 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060387767 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074677372 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063708105 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.059736966 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066262211 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064258407 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067608419 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060148818 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0700962 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067290696 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.207209583 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068499993 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060598713 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072305675 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064673621 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065335273 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060812289 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061065547 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060576174 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.060687687 seconds)
done (took 12.005163286 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061912825 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089878278 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069084895 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.07726823 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.072960787 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.061401179 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065870307 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079276568 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064059554 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.079913041 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.081291297 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.080464326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.087588678 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06003463 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06189778 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063606049 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061021467 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068399876 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076536387 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.081121066 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.089277807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.060648356 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070960834 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077303621 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072242634 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080330614 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063574778 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064155213 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065682104 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.077483435 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083721372 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061250129 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063237357 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077501041 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076834701 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070143112 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062813955 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066479545 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062993653 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062863187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064444748 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077925964 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.066905313 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071427601 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063610986 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062822769 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062299239 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.06526509 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.073939557 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.066883432 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069765537 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073210143 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063311543 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061065574 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.059929676 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065458699 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061274236 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.061885116 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061200088 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062103557 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061125541 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063231581 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062042943 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.061503421 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.064292096 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064355418 seconds)
  done (took 6.018954541 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079005841 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088665948 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077758274 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077602721 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061377761 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061644731 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062433599 seconds)
  done (took 2.023220689 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062665356 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074039422 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077783285 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077000052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070816628 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079591606 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.061718598 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090260422 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060899016 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073463744 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106352343 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078253033 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064505006 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072412853 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061566346 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069484511 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061461926 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0694012 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07226139 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079031541 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065716491 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087154292 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074599848 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.061789973 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082023221 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.06678517 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061802642 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063186059 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064135996 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063632994 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064099707 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101912549 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067713058 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075775323 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063388388 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.061381696 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067696178 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0654996 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065948997 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0676889 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067135224 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063230037 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060425623 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.062986281 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064220594 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066589377 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060672836 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.062654445 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062611123 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073604003 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.060850056 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067206768 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.064857121 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06650904 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067079599 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066319863 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.06924796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.062839282 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073521049 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.06918184 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062919274 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070553049 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070115268 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067290068 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070425148 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.065586622 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.065860851 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067295634 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062394656 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063513045 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063261723 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070272353 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061516998 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063668197 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064964145 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063190723 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065666776 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078010086 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.07788366 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.073499777 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063409338 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063300554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065841814 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.077759267 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066145247 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06268076 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065159346 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06058064 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066574848 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063001953 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06885151 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064603939 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071565405 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065716341 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066890341 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071689302 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061211318 seconds)
  done (took 8.141150459 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.063527073 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.062677541 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.063860204 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.062934679 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062929266 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.062446516 seconds)
  done (took 1.928102879 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085347109 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062675234 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075445043 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.062570282 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.095990651 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070148599 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070209753 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071737076 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.074963501 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074322265 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.069918243 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072452891 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.06928279 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065963028 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071796195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065298194 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.07164656 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068024128 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075984281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06611693 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077235771 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.065708683 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064635181 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073699074 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065257934 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06374329 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064038318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075582156 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075657433 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075457576 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.065778779 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067045162 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071519013 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072654602 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071704693 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071268553 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064051246 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070081978 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066073207 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066776142 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074208521 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066281398 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066896736 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069603335 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072919243 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071349227 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070236883 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067837256 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.07123927 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069542425 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.067950578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063311703 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.064978951 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.067859587 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070187926 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070707622 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068025828 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.06998682 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06456899 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069621331 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062598465 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066646361 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072721372 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066917163 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068272964 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070130239 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07171968 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06606018 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066088442 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064295539 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069808087 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064123014 seconds)
  done (took 6.527432549 seconds)
done (took 26.145594083 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.980042838 seconds)
  done (took 2.476240938 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.556085749 seconds)
  done (took 2.092031017 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.659409441 seconds)
  done (took 8.187007871 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.296040677 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.340581724 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.712103669 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128345025 seconds)
  done (took 3.0408689 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715293507 seconds)
  done (took 2.254542714 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228922342 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222560798 seconds)
  done (took 2.00467109 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34357263 seconds)
  done (took 1.878042295 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.076396572 seconds)
  done (took 2.60567443 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.226865153 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155123246 seconds)
  done (took 1.921227914 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447962997 seconds)
  done (took 1.981897211 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.270367704 seconds)
  done (took 5.811369362 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231298151 seconds)
  done (took 1.81280922 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.229044555 seconds)
  done (took 1.768182114 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.693326418 seconds)
  done (took 3.226879164 seconds)
done (took 42.60439513 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07799501 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080459945 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079518249 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076376442 seconds)
  done (took 1.826197415 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069655544 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066111488 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.07019253 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072108056 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069721133 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070466428 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071222194 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067433035 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.06863411 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06721154 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066203007 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067260284 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070508892 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067328902 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069645319 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071203618 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067846193 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.06742971 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070250849 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067067524 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070159488 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067322962 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065155905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066255027 seconds)
  done (took 3.181038162 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073741583 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068452029 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070995723 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066849248 seconds)
  done (took 1.825004501 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07207043 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082002806 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083803258 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088260082 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.071978373 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072553938 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080113712 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080762083 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.060823909 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08396994 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063063783 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.061663611 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.061780968 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082862263 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079709262 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058643782 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060204293 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072589668 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071495318 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074314486 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063190299 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062777025 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073980931 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073431374 seconds)
  done (took 3.277343743 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075635602 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06205561 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076486746 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089866063 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091338038 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063334867 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078763093 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091327387 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138111064 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062744714 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068350066 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062644607 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104059522 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062860994 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079547435 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109174076 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112347425 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066760031 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096085419 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062771553 seconds)
  done (took 3.208763416 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072631673 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.064940983 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066701428 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063241938 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074031266 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070743108 seconds)
  done (took 1.968574885 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.063853621 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.062801918 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063232226 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062507917 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069376159 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06424491 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062296681 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064416977 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064264297 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063833397 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063662507 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06262904 seconds)
  done (took 2.315609102 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.15556373 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06389967 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065548712 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063083387 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066852665 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061443239 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077091915 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065538854 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082908664 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063534223 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063676913 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066242349 seconds)
  done (took 2.44632869 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097087023 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126577112 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092682356 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069480278 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167085157 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092331923 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.088883533 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.120533911 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091631642 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067263212 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091140171 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133528108 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0937308 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097018167 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080742427 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123591331 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108589123 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085747652 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111568248 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080598222 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069125222 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130559767 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067010673 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089871013 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098080201 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.09408805 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105598139 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128609474 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080340371 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085841561 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078641339 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070552754 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100651756 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080065224 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094016199 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091485939 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096648309 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083552561 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.084922192 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118625422 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149506466 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096198655 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095841075 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129080899 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074525415 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.10363252 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077314911 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094923594 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100106677 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089517313 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071818004 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088311485 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105069217 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100842257 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.08081695 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080213829 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116504874 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.096986859 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093646064 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077790952 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10471851 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084177448 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104247949 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263600422 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137582436 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101603859 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13653652 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123667707 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094963276 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088398419 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.091222903 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074570131 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109756659 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098300176 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134971409 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1090722 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099169433 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095413922 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081515675 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107207508 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11382571 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093997759 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093801039 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144480349 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105526541 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087885318 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087734987 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.141390918 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069862739 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143966942 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086387806 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117537474 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093222702 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13415118 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088594255 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080237404 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103422104 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100775955 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088513176 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100143658 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080611613 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109611468 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088780007 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096967698 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.077817051 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086908775 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08313478 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093438435 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071603188 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102466991 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114201104 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112096207 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07371676 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107447205 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084953908 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.07597801 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091362245 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138336842 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082557638 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073973563 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146738352 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091308146 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114702947 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107855294 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081496523 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264492977 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13434191 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090739554 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087116181 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075810894 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151742039 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072879976 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115412509 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080736146 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102104277 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104135368 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130060457 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137490192 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095035709 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076792122 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09156727 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.104757029 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08677517 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084640464 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076056841 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108784752 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122358632 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.096536259 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07762474 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089373098 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066088057 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110514125 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072721123 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080478444 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092436585 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.083884003 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086493311 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138044056 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.08085205 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105756233 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096330249 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065993977 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09107731 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15170904 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081633395 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107023434 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11295672 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080358651 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064883579 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092531285 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.069685354 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10499152 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089038805 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103205322 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074987383 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1033697 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065496845 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071242857 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125992367 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098019432 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085592277 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.128526005 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10076592 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.084554823 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099346919 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093209026 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091261535 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097341688 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.25503258 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103110313 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071551507 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12880601 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091192504 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077564072 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086711634 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077114331 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075312447 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097896661 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1123411 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087186015 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097328199 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099799113 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087618739 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.10632228 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0862443 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07598979 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128762978 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073412524 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0714508 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084644967 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102899249 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085462128 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130060957 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.07682024 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132443799 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089017789 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078014608 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112110966 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.065594812 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066868422 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078345227 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088376372 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112139893 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075673848 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074454556 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114079504 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127874891 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094324349 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099357919 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06558448 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087192061 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132312186 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.11232531 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080382305 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107760055 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081589522 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12581213 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094024256 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11678923 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102807835 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107407968 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088167134 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.077960297 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070604802 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08467838 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106933639 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083156767 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07862654 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065136784 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071373937 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088839066 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087638232 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107155871 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083613197 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129601874 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.06910749 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096373105 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252243764 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105140201 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0875895 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09282358 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089561827 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089569785 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088679672 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089144496 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070405149 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123668775 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099606354 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075895665 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086290919 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092622035 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103768106 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106072994 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106151838 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089991188 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103929148 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119018113 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096055607 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079035595 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080880094 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090797098 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081929637 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078874964 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100841056 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109257763 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095217483 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105383824 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.092040558 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.089612442 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103290466 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089864895 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085678612 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.114244679 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148772593 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098545413 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100521631 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082122889 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10368216 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102305307 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109387558 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107438054 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10560279 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067565313 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072371534 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067616435 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103240769 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076500765 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11404681 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073263276 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103375146 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093127358 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076777224 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06395792 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098547777 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089830283 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078838724 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119608605 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110441268 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.069986753 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08721903 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103688784 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080149726 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118976379 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097686917 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09610772 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.067936581 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086411035 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.069462356 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259013558 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099182687 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075134464 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07402859 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067623233 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104497459 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081463495 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106884478 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08629761 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09716488 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11722193 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13157404 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084332464 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094163132 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115430393 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110209205 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.078835192 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109284045 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132215367 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.117358193 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078444615 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081589443 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103710535 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103458402 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098561452 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074251204 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076500458 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10609178 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110552959 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.064944441 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08139275 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067816295 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081014169 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109134304 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091856635 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079020586 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11493051 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07218827 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104442012 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092217345 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119061658 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118728807 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140615497 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094343195 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082914277 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073861327 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120625779 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068043169 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113874578 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109390341 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084529522 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.065470246 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080729597 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092740681 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624465993 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105709213 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072796754 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131973702 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083894174 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111294915 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08112668 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113615566 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085872904 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098211885 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08664577 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278006004 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080593156 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108306423 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.173754047 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108585511 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.105196891 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07142423 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083601154 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070735301 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.075821193 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078438448 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084326849 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106277422 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082564903 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10287071 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077439117 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104044553 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088629879 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08617158 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095641274 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077308393 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135652868 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086664974 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121567633 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104112498 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07602136 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072024822 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083399485 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097696234 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078968438 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09104282 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076044722 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.072996231 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148190101 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098982596 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082128681 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099061875 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088630966 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084607304 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089000795 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113642508 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106767806 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070048933 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084369062 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10041289 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076328015 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072057599 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093705624 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066514689 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086121357 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095595739 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092697151 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086900503 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099726261 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075207633 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083966678 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106546025 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082701659 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074319697 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073666626 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073633807 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073600872 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100250795 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105190221 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109672149 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104723749 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086795764 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089891162 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.075309651 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.217543291 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230881193 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095029746 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102204538 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073484683 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128530991 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087910054 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088513503 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094597372 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097829732 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149605341 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071135565 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106270192 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090918443 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107224895 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08368428 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104382036 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092639194 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090232111 seconds)
  done (took 49.165896132 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089767732 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.142553916 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15083861 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078536283 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090782175 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115421144 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204589453 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188300752 seconds)
  done (took 2.727218049 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063037767 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.076773904 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098972788 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078197099 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062011933 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063034875 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198913337 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076486093 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061277748 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098503613 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071327203 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063268396 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.406261982 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061013264 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062074424 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07014605 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062025392 seconds)
  done (took 3.323639457 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.357303275 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603549394 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.338165753 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070336329 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.931020293 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08423929 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.282023891 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13133224 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076275278 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555465837 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367002733 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127162713 seconds)
  done (took 18.586081229 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.070873434 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069315879 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074133711 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073284863 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069000675 seconds)
  done (took 2.012467048 seconds)
done (took 97.442064941 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076518772 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.160345824 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.062911943 seconds)
  done (took 1.914091165 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078781828 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076849659 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076862442 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074967957 seconds)
  done (took 1.971253328 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069046093 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.070968078 seconds)
  done (took 1.796388296 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240088059 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158532771 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087996655 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078318141 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07558484 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076237311 seconds)
  done (took 1.899790061 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067465861 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067167333 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067765916 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068240564 seconds)
  done (took 1.928234737 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063268752 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06176147 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064063296 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066516447 seconds)
  done (took 1.915522747 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.079117392 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079138018 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073733815 seconds)
  done (took 1.891216507 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.090637816 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091989506 seconds)
  done (took 1.842330112 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075807447 seconds)
  done (took 1.7357325 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084145048 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094724249 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.148602826 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107804049 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146702998 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130580405 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073815262 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074864889 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069288308 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067924642 seconds)
  done (took 2.658371809 seconds)
done (took 21.772284752 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073967704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360294947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35466881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081044291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66544951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.351738434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.964407512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085941253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093724966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063622567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.078846406 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644199748 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954878399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318489669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.942602061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318614624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646094634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06323858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06221286 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063399756 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948608064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062645969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063483346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063189734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675262323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367932377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.063911401 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315406855 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063097144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066170067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.350878193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064661913 seconds)
  done (took 15.932668248 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065208143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115239947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068204014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.07907038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065909045 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064574136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.065938147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063692036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103387381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063750929 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079986498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062915193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067318999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065110479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.082944521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064110961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066209476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064368576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064071667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066840465 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081495271 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063176475 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064445538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064486479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064489966 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07711153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065088596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063758351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063751882 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066074329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067317063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066126386 seconds)
  done (took 3.922694493 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116071694 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121065333 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068629569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102228625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114476524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065314105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143315095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08661701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108346159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063883632 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079693988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063157608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097334838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065364567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083716931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064381181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065491353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064526694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063828089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064774591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08172624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063606469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065119534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06420107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064867293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078344098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064997183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063851818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06398911 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066469951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06776663 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065517248 seconds)
  done (took 4.193465714 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065281126 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068147627 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076292141 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076317555 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.061991002 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064994102 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.06624436 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063060587 seconds)
  done (took 2.226247347 seconds)
done (took 27.953413196 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073067894 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063419922 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066756898 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082455376 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069068358 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.065596574 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060400111 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069174648 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.066762223 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066901007 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068098999 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.061694238 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06544636 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060422215 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.067190796 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.061876375 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068689243 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068669294 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.06942062 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069596732 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066173565 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068089626 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.06961329 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.066841422 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067038033 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067262034 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07353684 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069188747 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064498901 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067263457 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066784563 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075874151 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071399119 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07140933 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063908798 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064193148 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068546145 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066136928 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070574127 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073180481 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066045686 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07392794 seconds)
  done (took 4.507637875 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079518057 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.083963972 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.076967664 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075975846 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094511308 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077311653 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.080991086 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073624204 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.071997277 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.080506354 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068217426 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074934106 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07296152 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067380584 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.071612606 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069002922 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.074142038 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069264553 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072389572 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.072834971 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08147109 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067626285 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074317618 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074341035 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069125761 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074966723 seconds)
  done (took 3.639736339 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.06834994 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.079376534 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086452718 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141947736 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10775261 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074736288 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07531431 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088604974 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092678351 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06346869 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067054295 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088230753 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087093184 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069245812 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10259036 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.078729541 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07814807 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066422377 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071683792 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094113094 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08427812 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080384825 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.088975969 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078904409 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062114221 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065006007 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068925245 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076055718 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069215229 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07385942 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067138201 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066003811 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063209251 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073262534 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.066734102 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06175649 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085892698 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07388257 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075122924 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103828087 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071442966 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.063672673 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089949745 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122360195 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.062098268 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066103175 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.065572932 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074033381 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064964105 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091126032 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076235107 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062367817 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063225099 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063300135 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06382822 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077330701 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064092387 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064399369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073170485 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068176828 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084114899 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067351155 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080645416 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062100679 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07250109 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063620436 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.063505348 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.061252462 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092565677 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068781715 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109593511 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063153005 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.060899746 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074263732 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072344514 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068141798 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062150078 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079332322 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072866493 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.065890283 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07344533 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065040864 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065598007 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092983064 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062807931 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06225792 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061595156 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066108148 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065130215 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063216537 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.075383988 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.061763715 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.064969221 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.07626465 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062321469 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063025251 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065520619 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064617713 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.061985015 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07438375 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066142739 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063190047 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07353586 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063161962 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065101933 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075492511 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.068988397 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.061574266 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.06406329 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.06532886 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.063899727 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066319271 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.065452355 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065161107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069190397 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070163128 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.067606383 seconds)
  done (took 10.231453899 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156636697 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.1461736 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06491455 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.139933593 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070676923 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068292326 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.142335136 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082120134 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063304772 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064039373 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063693694 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094117436 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090480144 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102410127 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070399292 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064150337 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087582673 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097582212 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.144028504 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.137967856 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086341767 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.069732788 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06499144 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06412846 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.064693206 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071267057 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078483758 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.070964603 seconds)
  done (took 4.244408295 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072628482 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087426856 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067237639 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.074698272 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08213566 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063572651 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.064657109 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.064849233 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077473135 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072256783 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063547989 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.067369359 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.066921228 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.065700774 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.063890973 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.069369072 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069561098 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.062645592 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.066822515 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068424046 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073122605 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090249642 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069068945 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064702881 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067026741 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064758222 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074195945 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077056726 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064702171 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080369907 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062957012 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.06932228 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079061841 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065584531 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064656106 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065450684 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065301983 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06499605 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065118443 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062660871 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062446308 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068720112 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062583356 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071833569 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076466343 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069858067 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.064839926 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.065501481 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.06579962 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060665254 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.065619191 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067399951 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067068668 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071373254 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066564422 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.065739267 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066000735 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08746553 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069089132 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062238627 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062246936 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.061717507 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065511622 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072463367 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079059081 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065483536 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.061523961 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063011877 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069008631 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076840442 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062446633 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067431005 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.060950692 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064501304 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066194564 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06674674 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064299274 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.061766476 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.062626544 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063045293 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063295212 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.062745064 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062861102 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.065223803 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06142949 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062058275 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.062939328 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064900669 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072119015 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062350153 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066435223 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.063930706 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.061647094 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.065554575 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.067991317 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.065757265 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077488117 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.073688856 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.063483966 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061631271 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07556405 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065395936 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062378112 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.068482296 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.066715347 seconds)
  done (took 8.82151806 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.084983198 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.064917391 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.07875903 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.08575282 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073044311 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070753132 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07590889 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066378372 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081057325 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064137564 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073634047 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064421471 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076576819 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07529398 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066610982 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075174503 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067897367 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081867747 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.07971312 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064367827 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074059215 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076701856 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076838346 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079658534 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077899638 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080141019 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076824366 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067299091 seconds)
  done (took 3.812453403 seconds)
done (took 36.933250273 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.768926295 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.930701297 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.756296074 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.94311745 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.798807036 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.8783511 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.86286789 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.74729256 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.995852043 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.810125705 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.033148306 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.246082579 seconds)
done (took 65.514010373 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.810803083 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.925599364 seconds)
    (2/2) benchmarking "String"...
    done (took 2.010791276 seconds)
  done (took 5.622360138 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.999235666 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.543661798 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.007610577 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.74472951 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.749813536 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.174122949 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.536861269 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.200483907 seconds)
  done (took 30.643559866 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.860464465 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.977516217 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.404800344 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.43957144 seconds)
  done (took 15.415560588 seconds)
done (took 63.266792927 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.784578573 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.746066277 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.781618822 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.775697878 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.754205315 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.74792635 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.749876809 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.748997586 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.769153417 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.969248868 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.754321218 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.76063518 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.755930946 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.789580985 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.289392299 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.810233719 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.772531536 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.752759871 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.762220179 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.788250136 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.761032592 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.754774515 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.22045417 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.924464245 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.353097593 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.063544126 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.229581072 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.151817533 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.754211711 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.752377851 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.819797119 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.123729655 seconds)
  done (took 203.657150753 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.75214516 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.513295373 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.610352271 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.754902378 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.99302989 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.933020703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.84958532 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.114634787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.754009883 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.753940697 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.892500405 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.753226947 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.925489499 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.698232184 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.787536952 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.782786151 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.883036103 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.9535251 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.79083914 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.913443509 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.759140395 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.695748167 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.645588356 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.887536671 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.771218194 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.835145724 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.758052078 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.765059867 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.940469368 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.855614441 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.758874777 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.763099961 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.896467421 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.622009952 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.766521912 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.770877766 seconds)
  done (took 167.592860716 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.951494911 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.753605962 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.756935553 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.752265513 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.808374142 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.87477336 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.753754134 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.38662448 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.763888937 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.206054089 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.759890677 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.752453815 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.752261825 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.754022966 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.765246724 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.829465693 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.756979531 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.768392824 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.754967289 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.778829672 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.756652731 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.753413408 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.752379477 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.753867917 seconds)
    (24/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.754106294 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.754000832 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.754733504 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.752975153 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.75292909 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.972933979 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.993703474 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.754943595 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.75595512 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.809602803 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.770152085 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.770846971 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.760848979 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.846098467 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.811130763 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.87672212 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.756546154 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.972536351 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.826447156 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.756040993 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.755121737 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.820367449 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.768371016 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.758554349 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.76131343 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.76361033 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.822881743 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.00553545 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.75926397 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.877080504 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.249688228 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.762603939 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.757734389 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.757818343 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.357576947 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.760458931 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.758382856 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.764496794 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.763788837 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.759496376 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.758304767 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.146959879 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.829273386 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.836316511 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.989787392 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.759834573 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.837042322 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.880933438 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.757475563 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.759451801 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.758739997 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.760810267 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.76042145 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.761860259 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.879402951 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.767060975 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.887156828 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.842736211 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.879394516 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.762519022 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.769244685 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.58956804 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.831581486 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.796176082 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.592977726 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.76322734 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.135085165 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.540999107 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.763620186 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.759520014 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.770406018 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.759262627 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.759151738 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.761673041 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.84145381 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.760464594 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.880985311 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.481535236 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.226607855 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.951577388 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.759873337 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.759881726 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.76876953 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.853203537 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.922329013 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.760167501 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.826774349 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.766933575 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.762371873 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.908906473 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.761675573 seconds)
  done (took 398.646863035 seconds)
done (took 773.594484733 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.349468524 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.325253596 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.436030609 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.340851916 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.319861891 seconds)
  done (took 13.471169583 seconds)
done (took 15.170794348 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.776624451 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.767731354 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.826006984 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.850162981 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.780970721 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.783681994 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.849544203 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.784602352 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.814497093 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.819210345 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.85084504 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.852825684 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.788949545 seconds)
  done (took 25.245788208 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.771019281 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.926136523 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.012714767 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.80453379 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.773044575 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.998774295 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.828531083 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.917106272 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.914737134 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.997655477 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.005605567 seconds)
  done (took 22.652712648 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.771395196 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.922255936 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.996822732 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.807613433 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.772103664 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.009124648 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.838880824 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.917525853 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.920694367 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.998097172 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.013858291 seconds)
  done (took 22.68035283 seconds)
done (took 72.279449379 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.766091139 seconds)
  done (took 3.467980498 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.791224774 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.931867119 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.765949984 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.764876857 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.766467939 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.767278863 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.764687472 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.766142957 seconds)
  done (took 16.021023339 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.7654426 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.766320629 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.765817703 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.765692828 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.765577404 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.765849095 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.768100896 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.766518457 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.766100486 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.766108627 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.766687693 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.766467809 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.766580615 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.765854989 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.766176173 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766165969 seconds)
  done (took 29.961553906 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.769289706 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.76547223 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.767306643 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.768592607 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.767929795 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.768685932 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.770499565 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.767269626 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.768548734 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.767967506 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.768082102 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.769222394 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.768473193 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.76838952 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.768694256 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767977428 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.768228894 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.769065515 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.772523475 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.768169955 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.767273571 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.768729893 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.768493984 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.769783065 seconds)
  done (took 44.149870131 seconds)
done (took 95.311870951 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.560384051 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.627636955 seconds)
  done (took 9.892509725 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.767660345 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.76944714 seconds)
  done (took 5.246221599 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.770410354 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.769003835 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.769032505 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.768923597 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.769543748 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.769565928 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.769477686 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.769515042 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.768427723 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.768765787 seconds)
  done (took 19.398051916 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.76905138 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.769295991 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.769178795 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.769187053 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.768699868 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.769382971 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.77013276 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.770042121 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.770790343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.770426573 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.769808374 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.769966189 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.770783053 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.769570825 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770051972 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.769381988 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.769840743 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.770168441 seconds)
  done (took 33.561746204 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.769002821 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.770082035 seconds)
  done (took 5.245473774 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.76945045 seconds)
    (2/7) benchmarking "second"...
    done (took 1.771622444 seconds)
    (3/7) benchmarking "month"...
    done (took 1.770699548 seconds)
    (4/7) benchmarking "year"...
    done (took 1.770136364 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.7710743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.770842336 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.770845223 seconds)
  done (took 14.100227507 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.771738383 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.92866112 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.990631487 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.625665345 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.772789045 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.772903731 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.094566194 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.774468385 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.775904144 seconds)
  done (took 20.215129129 seconds)
done (took 109.364078206 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.612962713 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.772355274 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.033372932 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.8409119 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.802158805 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.070994404 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.777013437 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.050427428 seconds)
done (took 42.668104085 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.797733546 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.769944349 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.798460169 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.79995796 seconds)
  done (took 22.076410324 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.771484765 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.13462216 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.794114265 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.618823655 seconds)
  done (took 22.041105214 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.153519261 seconds)
    (2/2) benchmarking "read"...
    done (took 2.122612863 seconds)
  done (took 5.9890243 seconds)
done (took 58.614429934 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.771689507 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772425003 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.772842098 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.770945144 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772119902 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.772070031 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.771387662 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.772056409 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.771158185 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773011106 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.772142349 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.77290106 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.772630076 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771420824 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771857076 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772460027 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771158876 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.771721449 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.772026771 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772823931 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772766599 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771652828 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.773198491 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.773691664 seconds)
  done (took 44.242138137 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.772627599 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.773997193 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.772793296 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.773839204 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.773049733 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.773631088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.77358645 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.773408251 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772186011 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.773497052 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773630593 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.77348082 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.772739435 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.773235341 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773388723 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.7734897 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773984687 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774246215 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773807399 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.774246222 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.773758526 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774721474 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.774176077 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773980438 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.774517895 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773703101 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.773780011 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.773803635 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775225596 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.774455936 seconds)
  done (took 54.920730166 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.773984699 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.774135419 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.774374366 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.775788989 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774239842 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.775055393 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.775330345 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.775926487 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.776257998 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.775847648 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.775006004 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.774882082 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.775796759 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.775893502 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.77717342 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.77612646 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.774655714 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.774820966 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.775475985 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.776222733 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.775120191 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.776351741 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.775516065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.776177634 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.776376256 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.776980679 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.776500009 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.777251913 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.776916606 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.776770595 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.776328048 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.776926482 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.776435622 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.776766777 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.775703989 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.77680124 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.777451349 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.776897098 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.777850485 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.776761831 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.776941782 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.778026074 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.778510386 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.777028336 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.776335977 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.77700061 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776519996 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.777680678 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.777817128 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.777362629 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.777022882 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.778413409 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.777507828 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.779214428 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.778469571 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.777900163 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.777805626 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.777457327 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.779310782 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.778492966 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.777954068 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.777565657 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.778513689 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.778458522 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.779052292 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.778709121 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.777863731 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.778607076 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.777703996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.778770276 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.778522516 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.779003502 seconds)
  done (took 129.647924684 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.777883348 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.778715705 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.778907627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.778306661 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778206315 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779479592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.778527166 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779376028 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778280336 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.778403588 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778747 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.77879114 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779111083 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780404723 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780120579 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.780115459 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.779155689 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78020908 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.780472179 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780879761 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78171058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.77949159 seconds)
  done (took 40.860874513 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780091575 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781038029 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.779723164 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779409468 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779717248 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.77947827 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779060634 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.780046367 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77997667 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779511143 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780039556 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779847951 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779569728 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781751651 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781370825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780294143 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780146299 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78057572 seconds)
  done (took 33.758089255 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.782110993 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.780222039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.781038353 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77974217 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.78153821 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.7805336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780912051 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.781095771 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.780521767 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.780889647 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.781913492 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783032487 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.781421119 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7808915 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781416896 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781887967 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.782360884 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782040202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781871295 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781485182 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781866484 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781805406 seconds)
  done (took 40.907847256 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78142055 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781902249 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781991996 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.782632559 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.781548105 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.784097644 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.781595527 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.782067696 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.782259217 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.782240167 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781830597 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.783642071 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.782256807 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782904147 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.783640239 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782838682 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783784041 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781993252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784862913 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.782757997 seconds)
  done (took 37.370024421 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783145016 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784004767 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782632664 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784898191 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784279851 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.783458994 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782716285 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.783355512 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783893943 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783843028 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78390579 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783540065 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783357488 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.784002159 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782735502 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78374221 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783157847 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78366402 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786343146 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783028982 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784040166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784178217 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783672873 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.783933441 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78392978 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784225863 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784375871 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.784814895 seconds)
  done (took 51.666777855 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784036049 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784065889 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.782945889 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.784517796 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.785011891 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.783859789 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.785839964 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.784595144 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783317063 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78511091 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.784695513 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.785570282 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785831223 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.785161491 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784902184 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.78563648 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784627324 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.786212589 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785400684 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785060835 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.784936692 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785756443 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.785559847 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786313009 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784825562 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.785940474 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786522944 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786171662 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787014726 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.785044573 seconds)
  done (took 55.275980822 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.806857684 seconds)
    (2/2) benchmarking "in"...
    done (took 1.806316133 seconds)
  done (took 5.334063018 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.787533636 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785332016 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.786901704 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.785901946 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.785657507 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.788077266 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786476546 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786529728 seconds)
  done (took 16.014110653 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.785600852 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.786567979 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.78380046 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.783335623 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.784411772 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790735565 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785056878 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.785239495 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.785512286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.7850441 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.7879542 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.787043188 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.791455065 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.79068206 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.783796897 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.784342227 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784812156 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786953556 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.784374643 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.783727758 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787864305 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784336829 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.784919119 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785225879 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.785131973 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.785970939 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793525302 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.785866669 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786256713 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.784185065 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.794535642 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.785362218 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.785083322 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786299531 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.785752147 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.786517613 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.792695613 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.785516498 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.78582855 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.784982836 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788689763 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788334095 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788373453 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.793799543 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.785725304 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.785869442 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.785434161 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.786450799 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.787185382 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.789476001 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.792509916 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787136452 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787086646 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.7869276 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.788710186 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.78596353 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.787166875 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.788590156 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794944269 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.792523662 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.790331025 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.805101644 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.794955112 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.787662684 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.78784217 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795868093 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.808556266 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.788270294 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.789689978 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.787765528 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79498112 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.787953771 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.787301342 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.787308133 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799318767 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.796142251 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.790468469 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.786896821 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.787315717 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.787295738 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789957172 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.7877825 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788157987 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.788872739 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796859786 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.810623376 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.790118603 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.788642935 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.790297677 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.789190031 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.793011165 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.792329343 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.79017781 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.788883359 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.790304926 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.790199347 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.789297335 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.79187893 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.78894893 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.798889882 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.789276863 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.78906615 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792972542 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.798006707 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.78946083 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.788526471 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790392673 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.789663587 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.796638453 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.789495511 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.789539844 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.790063172 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.790111943 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.794253142 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.791978018 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793556002 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.797603107 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.797185701 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.791933201 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.793438614 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.794003044 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.792075975 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798291105 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.811915617 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.790056933 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.79489582 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.795511175 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.801242456 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.794640436 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790327928 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.792414124 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.793714924 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.791166016 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.792411985 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.791123088 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.790358986 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.792294711 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.791581177 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.790662129 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.791496774 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.792606962 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.79378051 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794580992 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.792899544 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.794748213 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.791682838 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794636722 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.799899583 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.79348506 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.791228307 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.790536751 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.794492042 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.792586464 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793200039 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.791668195 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.791791495 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.791805177 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.792743661 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.795769576 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.791964634 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.792082538 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.793268917 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.795801107 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.792718858 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.79422199 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.793304669 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.792739672 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.793559529 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793557798 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.79400063 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.795665396 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.793390481 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796431746 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.793109421 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.792793717 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.792633991 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.792560841 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.792876914 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.797108178 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.803812326 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.796835685 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.804326053 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.792656202 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.801012046 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.794116432 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.795096279 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.794798969 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.793994813 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.794428252 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.79364236 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.793131499 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.797948677 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814151689 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.804295404 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.79674297 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.796766836 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.799817116 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.797116596 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.80096037 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.794656798 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795448761 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.796839462 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.795367987 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.795811189 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.79601925 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.797365335 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.794253962 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.794063771 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.800008836 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.797261703 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.794180473 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.795228276 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.795334942 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.798157023 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.796480909 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.795369065 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.795539711 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.795403781 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.803222781 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798507894 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.796073296 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.796080551 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798311135 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.796057049 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.795060992 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.797942401 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.800262869 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.795356844 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.796882877 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803134037 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.796138373 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.798505498 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.796250667 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.796445691 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.798808029 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.796293756 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.799933536 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.80311684 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.799585296 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.796471475 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.801111998 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.79643281 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.798723556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.797178048 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797469789 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.7965318 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.7975103 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.797293491 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.798760961 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.804647572 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797585902 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.799242268 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.797758227 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.799663124 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.799374105 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.799208266 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.798212253 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800505369 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805425488 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.802995601 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.799358494 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.800034629 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.799833914 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.799930546 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.800633746 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.798893595 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809621317 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.80693065 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.798126681 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.797789991 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.79846198 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.800415533 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.797991431 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.798945694 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806216726 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.7996651 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.799564068 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.802563499 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.799560569 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.799478033 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805208507 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8036028 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.804121855 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80041894 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799720395 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799217816 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.798615058 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801782339 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.799389413 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.801393181 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.801951027 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798818518 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.801061904 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.800371117 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.808638353 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.801392059 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.800745138 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806997717 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801945115 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.800286579 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.802319568 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.799133838 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.80112114 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.800986895 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799156694 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.801016359 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.800696688 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.803560519 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.809903876 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.804701197 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.808448784 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.804334781 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809718906 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.801216394 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.802348881 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.801268124 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.804821219 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.808410105 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.80147248 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.800786546 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.810043272 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.801768475 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.803162664 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.804801953 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.801974906 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.80245946 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.800973104 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.802596479 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.80576731 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.804327625 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.801684226 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.802674031 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.800696432 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.801345404 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.804865402 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.802746757 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.802433172 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.801682309 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.802054835 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.802503314 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.802796686 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.802770043 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.802015407 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.801758416 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.802118541 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809400163 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.803626315 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.804035521 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806908557 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.802225538 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.809694155 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.802669784 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.802249019 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.804063858 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.801861116 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.804055949 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.801464463 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.803299021 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.803174871 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.802924086 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.804003373 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.814774631 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.810326922 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.80501044 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.805634982 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.804162715 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.804932007 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812016456 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.826830537 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803369163 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.80672244 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.807893711 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.812526908 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.806357516 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809624732 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808079005 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.811781808 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.80517425 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.802628559 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.806698985 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.817273573 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805614591 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.802907564 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.803954307 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.808950813 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805518985 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.805719829 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.805675744 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80687192 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.804749664 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.814905151 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.804317888 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.805784932 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805168243 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.804718313 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.805374413 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.805052786 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.807272172 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.807091382 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.804864587 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.805890689 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.805629548 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.809248518 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.804218998 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808232519 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.814353061 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805966852 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.805803664 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.806539106 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.804740909 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.807765306 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80645278 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.804527195 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.806878973 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.806186979 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.807022865 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809136146 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.815864409 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807379065 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.806266111 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.807292113 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.81087117 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.806248252 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.806290293 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807276205 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.814950987 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80989726 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.81734189 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.816090286 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.806901419 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.807817816 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813761987 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.81395897 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.807475223 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.806511497 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.806759232 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.810865954 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.80937507 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.807513607 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806985775 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.807997494 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.812329234 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.80665038 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808150993 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.807572038 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.808148332 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.810213031 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.809498317 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.813827178 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.807822565 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.808185024 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.806680551 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.809635199 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.809792726 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.811487769 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808347311 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.808485819 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.810468931 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.809743992 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.812515625 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.808785692 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.807646947 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.809696932 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.807244862 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.810449499 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.808294115 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.808342054 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.80701968 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.812429718 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.816633094 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.808804782 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.809984558 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.808969099 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.811229683 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.810088078 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.809339166 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809439435 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.809367986 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.817634371 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.809886881 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.810692913 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.81066428 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.80952817 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.814637466 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.812044006 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.815306529 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811358392 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.810108065 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.810266699 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813523616 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.818655154 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.814313306 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.813086109 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.818227777 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.814987515 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.812260868 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.809719699 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.810643065 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.811389965 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812159313 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.814551395 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811138495 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.813773265 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.810561244 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.812430615 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.810585374 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.813112692 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.809497914 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.81105738 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.813342131 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820316679 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.819976753 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.810659653 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.813126087 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.812456347 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.814283253 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.820323333 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.812612397 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.810984457 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.812213092 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813663085 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.812921935 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.819051254 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.819310695 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.816355736 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.811541962 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.815753892 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.82845606 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.815260647 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820812866 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841204966 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.815305969 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.812723357 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813405167 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.813261524 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.813017925 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.814803064 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.813232856 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.82115569 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.813010504 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.812613323 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.820949608 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.812084428 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.811968479 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.81393456 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.813364906 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.818250459 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.814564781 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.819684958 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.813685609 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.812403242 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.812784931 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.815041862 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.812384781 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.813851142 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.81338975 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.815718118 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.813258676 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.813892959 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.822813487 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.814365294 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.815582923 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825618041 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.824166576 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.814977677 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.814051786 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.814147422 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.818384445 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.817622562 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.812782805 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816187854 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.821136656 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.818625243 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.821887442 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815848538 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.815080107 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815268808 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.814536231 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815004711 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.82650194 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.826136995 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.815010361 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.816337126 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.821549697 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.814756567 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.82244102 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.820551271 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815419804 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.818038817 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815962246 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.816739702 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.816351821 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.81601295 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.820501765 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.823503981 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.816044009 seconds)
  done (took 1075.839695259 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.816804525 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816357396 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816852198 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815679237 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81736306 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815967076 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816335703 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816384417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.816427364 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816356968 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817054465 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815820268 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816281101 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816604773 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816039727 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.817483224 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.817721579 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816451056 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816281915 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816347349 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816641219 seconds)
  done (took 39.898367864 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.818422711 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.81747691 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.81674989 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81712384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81743285 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816276125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.818180782 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816466232 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816763229 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816734738 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.817964749 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817243064 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.816749389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.817182642 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817327874 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817566385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816573886 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816743038 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.816777083 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817575937 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817573124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.81897128 seconds)
  done (took 41.732587333 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.818629662 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.8192542 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.819659029 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.819095987 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.8189004 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.820374204 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.818429021 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.819680534 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.818029141 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.820459778 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.827163749 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.826854816 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.820006022 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.821647342 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.819570965 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.819519205 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965592813 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.819166369 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.819527751 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.818978665 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.818807828 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.827554956 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.81970161 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.818402468 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.818829548 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.819313651 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.819639516 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.820079069 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.819451026 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.821369222 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.82364196 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.8199021 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820744609 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.823151079 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.819424038 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.821156266 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.823937641 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.820944341 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.822787334 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.820431892 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.82964591 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.842758983 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.821362141 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.820562572 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.828848959 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.821631563 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.82155097 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.825020261 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.828097541 seconds)
  done (took 91.164304315 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.820815044 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.821477773 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.820497707 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823918146 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.822364957 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.821315873 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.820758555 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820435693 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821114267 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.821240052 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.820300579 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.821257247 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.820821736 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.821694792 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.820767927 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82112595 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821039579 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821910267 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.820865213 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821685728 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.821261036 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.822597258 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.821541296 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.821401096 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.820707967 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.822321768 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821569835 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.821283826 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.821691631 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.823065403 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.823099537 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821507779 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.822174246 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.822248532 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.822934644 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.821805909 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.822557238 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.823648844 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822786272 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.822205076 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.823385804 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823546235 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.822403922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.822479821 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.822955917 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.823158541 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823732089 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.823057963 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.823556289 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.823010905 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.822966793 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.823815581 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824326639 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.823855467 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824986149 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.823403279 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.823628278 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.823059031 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.824621389 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.823463437 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.824005189 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.824368961 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.82367592 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.824124146 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.823636669 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.824041684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.823951965 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.82452906 seconds)
  done (took 125.68674207 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825231402 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.826626478 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825080795 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824841195 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825165877 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.825665971 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824731319 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.825812762 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824796195 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824530085 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824633225 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.825921042 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.825398241 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.824982204 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826647536 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.82548372 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824712734 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825944356 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.825913805 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825420769 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.825954574 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826441539 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.826806503 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.825724748 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825584919 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825584038 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.825018309 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826099775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825542617 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.825570136 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827032418 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.825584688 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825805791 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.825990912 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.828050992 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.82576417 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826258756 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82685231 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.826731033 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.826515761 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826280059 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826361014 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826389707 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.826413901 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826840528 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826302598 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826141656 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.82697012 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827180702 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826683207 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.827814505 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827148437 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826522939 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.82680798 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.827477773 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.827231521 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826945502 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828037663 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827624819 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.827188284 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827859172 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.827625666 seconds)
  done (took 114.98490417 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825964755 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.827124078 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.828102505 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.826635497 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.828866821 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.827710519 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826825286 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.828224989 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.826984223 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.827687034 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827100218 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828573281 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829230868 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827852008 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827888857 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828787302 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827989714 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827427645 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827868232 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.827896277 seconds)
  done (took 38.316670333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827644033 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829097605 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.82915206 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827979096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.828133892 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.827911031 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828219011 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829131446 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829070043 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829597719 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.828339173 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.829008668 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830456244 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829074634 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.829067867 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828566342 seconds)
  done (took 31.024317556 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.82945145 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830129628 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.829729351 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829855163 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.829193015 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.829975173 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.830176702 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.829554579 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.831043751 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.830045227 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831690963 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830148308 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.831005087 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.829634269 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.829969772 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.83014103 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.830480551 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829886074 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.82986623 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.830767934 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.830690554 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.830648048 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.829794525 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.830197407 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.829738233 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.831023807 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.831326142 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.829360069 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.829936255 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.830994947 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.831807489 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.831100419 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.831214948 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.830824572 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.831322275 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.830883857 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.831413976 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.831031206 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.830382959 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.83030446 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.830760301 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.831772853 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.831092937 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.831949844 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.830840162 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.83102331 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.831283893 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.831553479 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.831750992 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.830806903 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.832036156 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.83223919 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.831712336 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.83221101 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.832237855 seconds)
  done (took 102.456406972 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831762142 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832064421 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.832521358 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832566059 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.832601484 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.832764496 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832723294 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83224566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83368591 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.833154299 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832480113 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832748365 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832745018 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83302892 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832760486 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831750943 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832332969 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.831986693 seconds)
  done (took 34.752255856 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.832318124 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83298897 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.832950862 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.832510241 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.832210815 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.832769449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833530625 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.833830899 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832455662 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833183193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832349054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.832859754 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833877574 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.832969955 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833353197 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833397055 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.832781167 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835225841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.833678606 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834465029 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833044435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833313209 seconds)
  done (took 42.098073908 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834438569 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.833703703 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.847853244 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.85428502 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.854206137 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.865935831 seconds)
  done (took 12.859104727 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834205792 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834389782 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834561911 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834749133 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834982279 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834104423 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834503702 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835418871 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834164714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835298683 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833959795 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834450066 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834214118 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835826593 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835625644 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835230211 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835124402 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834451234 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834918658 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835851477 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836370163 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835248291 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835226288 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835104514 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835404491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835927919 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836090508 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835826398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836026077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835345507 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835287532 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836513824 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834335684 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837667636 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836942464 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836703203 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835909012 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836636925 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837790707 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837168544 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836804286 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837131282 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836939999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835763408 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836274713 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837374186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836817387 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836686777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836594669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837009836 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83697832 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837325334 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836654972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838065947 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836993094 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837989967 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837996708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837315585 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838683216 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83794141 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837048914 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837040588 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83787887 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838611289 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83699806 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83816775 seconds)
  done (took 122.956963047 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838696694 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83905005 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838689697 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838201652 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839008379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838532338 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839072542 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839943813 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840180294 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839721158 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839220721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838540622 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838620894 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839664925 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838726836 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838821706 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839247005 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838862398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838564069 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840373584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839088594 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839054675 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838771101 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839433991 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840782201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839357731 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839062366 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838291363 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839380784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84011267 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839921607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840286091 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839989302 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839196723 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839746715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839672898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84101996 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840573023 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841126168 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840862353 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84118924 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839845828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840034423 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840558434 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841239099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841188882 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840140553 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841787004 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841623608 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84187429 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841515875 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843728667 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842232273 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842077557 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841730057 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841223769 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842763199 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842312525 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840709052 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841343503 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842158116 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841365594 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841492372 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841485054 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841625033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841077643 seconds)
  done (took 123.23052097 seconds)
done (took 2508.711945226 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.881825902 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.844594732 seconds)
  done (took 15.501642514 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.006324412 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958681973 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.843819763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.845859034 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.844452268 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.870979405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.866628894 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.844891256 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.845301541 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.845187533 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.843794135 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.027696741 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.895934756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.845686834 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.8457844 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.93697908 seconds)
  done (took 51.946248455 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.850313568 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.85030539 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.861219542 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.852155889 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.850715655 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.862691709 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.88489122 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.854765712 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.885288868 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.865650273 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.919927485 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.86157694 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.850424686 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.901625642 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.868551428 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.865718491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.94758001 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.932018167 seconds)
  done (took 35.542876777 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.928761473 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.861403645 seconds)
  done (took 10.573037773 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.878911138 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.859284091 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.842416786 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.847554173 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.86741286 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.854111132 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846268746 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.88211376 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.86306501 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.871502124 seconds)
  done (took 70.393206951 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.854487039 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.852428828 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.851692852 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.848056143 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.845882522 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.850795088 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.849450617 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.849247492 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.526478875 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.885848363 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.85886326 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.857647648 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.849104223 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.850686154 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.845156823 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.874556708 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.9902205 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.845738243 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.845401548 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.855439782 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.849912792 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.901475557 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.864437497 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.85103054 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.881339404 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529951157 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.860009833 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.855378477 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.958477767 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.844838884 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.850077496 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.059398653 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.854008226 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.311854074 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.122765873 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.855222938 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.861551448 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.857748654 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.845817694 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.96896868 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.850805181 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.85580793 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.84626464 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.095308799 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.943086461 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.899476464 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.188388676 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.853605517 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.85074725 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.885839311 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.855203173 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.850985449 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.868347545 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.371361011 seconds)
  done (took 131.866800824 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.848265069 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.192631998 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013561494 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.848900776 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131750381 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052434016 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.850473319 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891959958 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.849094455 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075029104 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.103007447 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9554491 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.849391674 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.849452142 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850151132 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84634241 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000904961 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918797942 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.851153838 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.84638671 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875343682 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088278685 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.969071403 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849480502 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.873031405 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05668038 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.967673972 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952626609 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.643128545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.845307482 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907941165 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849289148 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.844990646 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845400043 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002402361 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940907781 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928311478 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.848032898 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847751749 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846572968 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.505244682 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047155375 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941172501 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.97662085 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099155106 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052583858 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.62770283 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.846339285 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.57931092 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008198564 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.075804841 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.077581173 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.967436893 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851940694 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.094477187 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.847280217 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846862495 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096462977 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067132507 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.947171994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850053805 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848567487 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848233285 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086675595 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.852648526 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942752776 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851199888 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848841834 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944224889 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951375031 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.078692481 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059694887 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880465149 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.186046365 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.346784726 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093645717 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913760819 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098481015 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.852942536 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848439549 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925862277 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.693399909 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099958232 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092965691 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.092000057 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882698417 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.569748047 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.848571881 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.074642997 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.068395405 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108342575 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094514787 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.084054336 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.166973552 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.849163254 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.849442223 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.06724979 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973148813 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852537405 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.197797739 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080427737 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.407128747 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.875672772 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153635016 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979567687 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.852313373 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.477089429 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848795509 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.078139323 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.890840594 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.85425093 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852203714 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.067694402 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834506929 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84968874 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.714779698 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.910354465 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854655891 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081299271 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.855018859 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120699398 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853911043 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082050935 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.050309896 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881343549 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.02406657 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.096895443 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.854160319 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094765041 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092436676 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965434451 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121647985 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.735614851 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.852624199 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136268558 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854971886 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.851850265 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.019722541 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.858768241 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.989476051 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851675928 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136238525 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864777566 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07669034 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843670343 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.093290802 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.87398969 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890787677 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84350348 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965638083 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843555377 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.672145846 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.991563554 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843609204 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.835403355 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.383909681 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.834587049 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98758337 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.063290528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852883605 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.90555997 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.494902235 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.83263891 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911341388 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856808947 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.226013182 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.83143727 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.077755551 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.831943142 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.829621897 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.827366376 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.058639598 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.061667855 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830515039 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.825530779 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.725177645 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.821568684 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.819256211 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.00085653 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.169242397 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817963442 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01579993 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819430489 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941434709 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.818204245 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.892944633 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.143487271 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.812278404 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.809555011 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.812477869 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.806418942 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.808135359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011052238 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.828336559 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.334908529 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938632228 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078315081 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.10896716 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.039110638 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.843658784 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.806430721 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051177111 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803107514 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.859353621 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.801013951 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.817557563 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029312744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80250739 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.058063424 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067206222 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.669423793 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844773819 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.801741501 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.799068187 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.798282366 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.944175795 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886511885 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.801952099 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.798748054 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.912664548 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.919215874 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008558439 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.802128945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.867327036 seconds)
  done (took 896.504128763 seconds)
done (took 1214.104280137 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.798802113 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.799731419 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.8025951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.803552976 seconds)
  done (took 28.940374668 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.802139086 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.802265969 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.801628458 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.801076613 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.802440534 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.801383026 seconds)
  done (took 12.546440275 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.966718311 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.801001897 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.802170533 seconds)
  done (took 21.306739681 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.881852275 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.209220555 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.941749476 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.239803298 seconds)
  done (took 10.010479192 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.802341079 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.803553526 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.802027492 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.803522503 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.804075144 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.804448392 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.804100467 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.803083681 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.807337601 seconds)
  done (took 17.972950142 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.55420931 seconds)
done (took 97.067796264 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.864697737 seconds)
    (2/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.890923881 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.929756281 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.183017847 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.972569099 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.994816816 seconds)
    (7/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.614256681 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.731347884 seconds)
    (9/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.864586692 seconds)
    (10/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.985691631 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.873943476 seconds)
    (12/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.935570417 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.950744609 seconds)
    (14/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.935149697 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.88250156 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.923934114 seconds)
    (17/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.863240929 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.993115948 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.254646816 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.623172912 seconds)
    (21/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.235144726 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.119863904 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.024468612 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.992790747 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.880713761 seconds)
    (26/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.989507183 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.859126466 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.908507197 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.948955854 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.345809594 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.49931628 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.994904053 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.883463675 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.174514365 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.884915928 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.202167678 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.962697863 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.261331109 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.031914433 seconds)
    (40/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.456038309 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.070953275 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.965145163 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.859913383 seconds)
    (44/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.765571022 seconds)
    (45/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.551428004 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.277836907 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.078358581 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.874315028 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.21357669 seconds)
    (50/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.899679036 seconds)
    (51/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.16639399 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.533278205 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.864902203 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160783193 seconds)
    (55/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.993972497 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.127226182 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.01396889 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.881605273 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.862294311 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.967979731 seconds)
    (61/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.740641032 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.12713916 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.956178295 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.939315986 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.044381517 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.178758269 seconds)
    (67/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.192952252 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.867621649 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.8639262 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.373725157 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.888189388 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.802305372 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.465490459 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.110206157 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.252418824 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.965759857 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.468019475 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.871859435 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.442343782 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.966853441 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.096831682 seconds)
    (82/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.177838583 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.112136134 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.965268671 seconds)
    (85/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.272685534 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.865594584 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.960779586 seconds)
    (88/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.945285831 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.982764655 seconds)
    (90/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.958862844 seconds)
    (91/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.119678372 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.44155803 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.074046446 seconds)
    (94/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.498525143 seconds)
    (95/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.193734642 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.130206622 seconds)
    (97/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.068334324 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.117517508 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.224807881 seconds)
    (100/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.751500083 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.024545204 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.009423979 seconds)
    (103/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.382131714 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.977849864 seconds)
    (105/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.313921247 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.867318965 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.030909976 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.954412334 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.19915811 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.347408762 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.007796926 seconds)
    (112/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.887447836 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.865056783 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.04475754 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.965089946 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.871256444 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.910990314 seconds)
    (118/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.951873306 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.912210789 seconds)
    (120/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.873667831 seconds)
    (121/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.341932894 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.123021375 seconds)
    (123/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.954446489 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.043006193 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.865826737 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.182702948 seconds)
    (127/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.058609664 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.178268233 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.157682509 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.885100952 seconds)
    (131/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.954620398 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.471330558 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.234625885 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.134884146 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.924078927 seconds)
    (136/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.877786305 seconds)
    (137/309) benchmarking ("sort", Float64, false)...
    done (took 7.673893455 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.931207374 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.984648854 seconds)
    (140/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.88228773 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114437272 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.869568758 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.89511607 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.139135401 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.913735615 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.975617623 seconds)
    (147/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.778440224 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.178096791 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.250495029 seconds)
    (150/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.267614431 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.689599522 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.88829164 seconds)
    (153/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.642244118 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.860541603 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.583452966 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.997920544 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.085775101 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.000431848 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.151881328 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.866618073 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.165707811 seconds)
    (162/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.063258677 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.436252283 seconds)
    (164/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.963817012 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.182623579 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.049204563 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.148484032 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.883083367 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.863095679 seconds)
    (170/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.655123427 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.870330093 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.056522826 seconds)
    (173/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.169634802 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.877110762 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.591203219 seconds)
    (176/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.033310901 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.863111155 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.026665928 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.222146441 seconds)
    (180/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.675495204 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.877562866 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.861982132 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.426916637 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.384561974 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.911904354 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.862363425 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.765166358 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.868286065 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.072702131 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.17202167 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.176280536 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.261234802 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.020564866 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.865438956 seconds)
    (195/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.256563411 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.11956384 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.923153359 seconds)
    (198/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.934870224 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.454674652 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.955622696 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.5420114 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.792123437 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.862912677 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.070480144 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.256162557 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.001652475 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.053367771 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.981695763 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.950997931 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.967515748 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.352325386 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.08905293 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.949342162 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.191328706 seconds)
    (215/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.281299871 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.815371965 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.998267976 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.135480334 seconds)
    (219/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.082999076 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.947549109 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.102907288 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.143331236 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.040444534 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.440206044 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.879930768 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.884927086 seconds)
    (227/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.390394926 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.528114239 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.187268703 seconds)
    (230/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.993634351 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.864848802 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.86401732 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.820468797 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.648951298 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.993815638 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.886504039 seconds)
    (237/309) benchmarking ("sort", Float32, false)...
    done (took 5.554847238 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.986765557 seconds)
    (239/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.263858984 seconds)
    (240/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.969522509 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.264315263 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.268645355 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.030161281 seconds)
    (244/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.961393752 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.848868605 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.717132056 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.204180787 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.712666199 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.169274361 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.865357816 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.52796567 seconds)
    (252/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.933367599 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.144037615 seconds)
    (254/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.145969468 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.108585663 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.884125297 seconds)
    (257/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.251116105 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.956736841 seconds)
    (259/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.608919679 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.881165321 seconds)
    (261/309) benchmarking ("sort", BigInt, false)...
    done (took 6.855619493 seconds)
    (262/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.763038582 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.687426638 seconds)
    (264/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.903624102 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.86197714 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.87696567 seconds)
    (267/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.004789458 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.872908255 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.009558265 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.861452524 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.866255507 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.25166189 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.860683389 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 9.346250567 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.068035918 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.269811934 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.011816173 seconds)
    (278/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.997598662 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.872978681 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.881937225 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.170374626 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.175055912 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.866157168 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 9.900144021 seconds)
    (285/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.030518332 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.858540594 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.856797895 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.962174743 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.217618436 seconds)
    (290/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.862936629 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.211856723 seconds)
    (292/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.88573273 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.703792985 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.144531896 seconds)
    (295/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.877795349 seconds)
    (296/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.881781031 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.886823602 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.03761217 seconds)
    (299/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.013013367 seconds)
    (300/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.338972845 seconds)
    (301/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.070301776 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.001649113 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.129145243 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 4.739934747 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.943219775 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.074181807 seconds)
    (307/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.010956533 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.871652202 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.86017331 seconds)
  done (took 1012.820567288 seconds)
done (took 1014.691664044 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.893726462 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881490239 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.869894538 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.89144226 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.982795569 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.908870486 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.883857276 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.874058754 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.920732563 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.92080163 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.869146744 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.906382968 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.871727555 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.871727004 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.870757169 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882233064 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.181300529 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.904350059 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.890251826 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.883629295 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.889425743 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.86934755 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.920705058 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.906152414 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.8748686 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.876927571 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.874764781 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.891874511 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.985304302 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.875489183 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.877710752 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.886108724 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.181777408 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904049471 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.870423706 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.894688582 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.885505102 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.884950037 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.876733744 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.905686732 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.333232508 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.87882495 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.872714407 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.872821839 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.872167771 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.878632292 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.873231836 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.882144049 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881195277 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.882377111 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.327002839 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.896677554 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.877112544 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.873035322 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.887296564 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.872948848 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.878112542 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883454688 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.893356734 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883582823 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.171283537 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.914279357 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.879560744 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.892281166 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.883309597 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.359420504 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.879793276 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.881084968 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334809154 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.889365813 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.36243396 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.891759728 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.876031811 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.889583352 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907517696 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.183878291 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.904174157 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.874895693 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.884534012 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.872957249 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.887170739 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883910048 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.879089783 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.874488325 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886856131 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.912873642 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.88763815 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.87551748 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.886932741 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.895559373 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.884251454 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.887963107 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.880126639 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.876755643 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.888172018 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.880205138 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.878017737 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.879807008 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.880456225 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.889360569 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.333969513 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893968192 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.872911305 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.873641508 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.876523203 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.890716834 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334589596 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.884565147 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.898467394 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.927111409 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.878310976 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.174011397 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.912799175 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886761037 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.887938303 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.87887561 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.875494956 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.175248554 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.361516432 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.898834338 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.877068215 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.875323811 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887453253 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.878522384 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.875389242 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.186050424 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.912316519 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887193707 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.00041489 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.891480033 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.909655747 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.875010482 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.881437229 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.917737623 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889119731 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.910382412 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.880675021 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887852857 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.894735326 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.875392604 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.890481155 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.890715202 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.877669992 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.887731725 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.875931635 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.919192356 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887550448 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886974166 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.899682069 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.00156546 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.877898218 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.17452264 seconds)
done (took 295.055499221 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.947477255 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.867050604 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.983948069 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.864575565 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.952399431 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.939243641 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.86341149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.863901753 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.863141967 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.363591838 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.863153506 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.866711762 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.858402888 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.859048237 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.929241432 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.859265612 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.858781416 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.305020418 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.860059273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.940080387 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.859389682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.8604456 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.859543448 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.390930324 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.860974697 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.859421586 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.939129415 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.860054295 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.311662238 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.859277961 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.860434833 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.3249683 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.938825001 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.887580448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.867938429 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.865741725 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.948775938 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.872122016 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.927292173 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.9270813 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.979798714 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.893473505 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.859056232 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.862509487 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.864556878 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.861755835 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.861007601 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.892477195 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.861790478 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.866760531 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.306090626 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.867715479 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.866228769 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.86266803 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.860825786 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.888974421 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.86156763 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.862620472 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.94032379 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.865382252 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.925144344 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.396068312 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.368534544 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.85805403 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.860611327 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.855241774 seconds)
  done (took 184.842008201 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.918110338 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.926143472 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.918353371 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.858881748 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.901871275 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.920368609 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.858541302 seconds)
  done (took 15.091635112 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.857652787 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.851291397 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.90113652 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.900409396 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.850992187 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.027493285 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.863016923 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.856634023 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.878441593 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.852263318 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.488445173 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.90087592 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.858242502 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.850701844 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.863731424 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.907954975 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.854502397 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.852953426 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.9674913 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.001573055 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856595684 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.859384467 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.878639 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.86395934 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.851588851 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.852770555 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.852484139 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.85998274 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.852496371 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.852930389 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853474773 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.904346976 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.854677976 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.852622273 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.853548229 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.852170399 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.851297878 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.851080071 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.85259315 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.853499131 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.846956743 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.847518629 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.848651456 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.844296588 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.84406364 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.866775435 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.84442482 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.844878583 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.841904706 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.841624798 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.86809336 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.842355403 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.841702969 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.846935616 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.885146147 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.84835649 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.841934629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.841760581 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.842004888 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.841851293 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843397957 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.989335316 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.89045809 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.84259798 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.891645456 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.996371667 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.842311002 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.841050431 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.841447318 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.930884466 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.841128805 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.892306818 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.841490805 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.955479543 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.841725166 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.021649454 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.865724125 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.84661191 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.845795213 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.84342804 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.85001593 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.843107003 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.846469806 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.850107227 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848077396 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.842109806 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.843201767 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.845261143 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.850583664 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.844302063 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.891987767 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.843154026 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.843540719 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.988065927 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.844296302 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.958926874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.871031315 seconds)
  done (took 203.713088026 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.85185026 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.850893141 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.845494469 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.859559049 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.846505029 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.843540602 seconds)
  done (took 12.874208194 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.847222553 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.848259604 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.843147906 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.843184865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.845101496 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.845130381 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.844093485 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.846177272 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.849139328 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.844110951 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.844939786 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.846917088 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.845665518 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.845118559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.844489535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.844412199 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.845067028 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.844702267 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.844720345 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845480436 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.050246483 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.845340088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844964805 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.849552492 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.850461563 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.845729014 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.857842867 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.847483335 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.845861698 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.854240363 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.850172322 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.847107221 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.850298259 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.852881686 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.849646365 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.850198311 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851018709 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.848078978 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.846446927 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.846528001 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.847107226 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.846230084 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.846463769 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.847645036 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.847527164 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.853697387 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.852114292 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.859175692 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.845755206 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.84781643 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.847722636 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.846241454 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.847102055 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.848164915 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.852178013 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853102109 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.852336644 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.84709656 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.847002051 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.851312588 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.850129305 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.847813187 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.848988071 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.851881602 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.854785405 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.8490074 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.851815752 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.851670091 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848708731 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.847156841 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.849357985 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.848043204 seconds)
  done (took 136.056034459 seconds)
done (took 554.395801789 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.874450096 seconds)
  done (took 8.654670228 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.010928251 seconds)
  done (took 8.877449456 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.712608394 seconds)
  done (took 10.492972597 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.851762854 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.878592967 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.856677072 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.852672497 seconds)
  done (took 29.233211492 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.153521744 seconds)
  done (took 8.934178894 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.861777908 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.865771969 seconds)
  done (took 15.578514797 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.99352305 seconds)
  done (took 8.775657843 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.188706616 seconds)
  done (took 8.985804819 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.864199048 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.875438513 seconds)
  done (took 15.541258773 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.85133372 seconds)
  done (took 8.632795678 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.104044628 seconds)
  done (took 9.963690075 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.86399404 seconds)
  done (took 8.689090009 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.896967881 seconds)
  done (took 8.679168801 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.938775392 seconds)
  done (took 8.720483002 seconds)
done (took 161.538955216 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.8572091 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.847929955 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.847737244 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.847160699 seconds)
  done (took 29.181614223 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.883659431 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.8843071 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.892426176 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.883553609 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.874125629 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.87586148 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.884625628 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.885941596 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.874954147 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.882070075 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.886397461 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.881923367 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.885458238 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.894009943 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.894503872 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.883136434 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.886272729 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.88491292 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.875382604 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.893961223 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.882055647 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.885368503 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.850525165 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.850820785 seconds)
  done (took 46.938360814 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.041438089 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.922257828 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.004949923 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.903009729 seconds)
  done (took 9.654919501 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.850186356 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.914777458 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.9017078 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.89774532 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.901695449 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.953497234 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.903659745 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.989231315 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.978670588 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.977098205 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.858919567 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.871693487 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.875260085 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.898092512 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.956085575 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.85128282 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.851247143 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.967255969 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.914144149 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.030739987 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.850845818 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.905474092 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.903914302 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.904762137 seconds)
  done (took 47.6923129 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.852114987 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.859883619 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.859650836 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.852509136 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.853309938 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.85355929 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.858896055 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.854644096 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.874829068 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.855566373 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.853315357 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.854526738 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.860023953 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.854482319 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.853859562 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.866696311 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.867637568 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.85368198 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.857694328 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.86096508 seconds)
  done (took 38.942945643 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.852498247 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.698791995 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.19767965 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.105701548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.85918623 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.850615177 seconds)
  done (took 31.350075041 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.865547808 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.860562655 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.853127973 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.912438657 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.996241883 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.861360979 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.853483007 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.865380525 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.902931256 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921184572 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.87554082 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.883587599 seconds)
  done (took 24.43654226 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.85371882 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.855826357 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.854742117 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.869028435 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.864538258 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.863606196 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.860956538 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.851916515 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.868092676 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.874364113 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.862925159 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.864962927 seconds)
  done (took 44.135126501 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.560073659 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928767769 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852857392 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.727031295 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315360042 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404944302 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.746892981 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.501539601 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331321185 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.788337079 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064438489 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.862524391 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945512309 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.863767883 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133909112 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.163643627 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04955913 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105987502 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.736258528 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903133492 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.065258581 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079447919 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.152428263 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862935612 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865863597 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.875340941 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.500553962 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.576948699 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897622218 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.423145854 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117937168 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.821658957 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919404651 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.868325243 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.877600926 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867481445 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869389631 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135926312 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.870751133 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997729208 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938762013 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11268988 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869601184 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286410698 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.568458134 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.095245025 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.972313903 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865192923 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867876855 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864731399 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791936517 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948265677 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.867318152 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871214147 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.565756924 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86479895 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939429226 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.865829752 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068585844 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.671735333 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551358247 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.867186056 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867587504 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414534801 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.913525755 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.976704716 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.538111058 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237273131 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.2827722 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.963280533 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.867403391 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867900672 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227378451 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842110551 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.586763195 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903460165 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002908493 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.884808995 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507197255 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153700013 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.225178768 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.419342606 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786257535 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141436176 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.779878698 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8647381 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08390715 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.697095618 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792177375 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082139512 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900097403 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870592812 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.130689871 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536676507 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976389006 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.880210542 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302325311 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886675237 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873160115 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870333275 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081184005 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48537876 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908205821 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990497227 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884409734 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.950830905 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794195053 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.883382721 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.869071986 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.947878989 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874900868 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868577178 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.907193798 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.750876316 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919601858 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.809203043 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871960408 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918211176 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908997854 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.818371312 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116944782 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.163091188 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.522054695 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89823622 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.992364091 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.174632672 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090025538 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873673524 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083013555 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397121387 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.2381268 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909335636 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149635426 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924034812 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152324492 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297219706 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948200049 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.601172639 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.494967552 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.086095734 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883877507 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.871657516 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874742575 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875967177 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805244245 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.552066981 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.179085823 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.033247434 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084991807 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.439557451 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.872220146 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.872437939 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170859054 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007258773 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.85857891 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.513821403 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.507212963 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.649956248 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.897026236 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.241942168 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287436035 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.84568907 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886082742 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948245497 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888570904 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.876854284 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.189090389 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.228266264 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.87374385 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.873408446 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.826137031 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879887222 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.87534648 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.40601297 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842717593 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878669115 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.88591059 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.748008019 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947286613 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875806518 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.875306716 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.410374142 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.380127322 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.87891689 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.555282523 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.88136228 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957003631 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135705213 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.172233073 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995744065 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.573719217 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.242588603 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97997192 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.574289917 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801487441 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.874503102 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.813463784 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876840647 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877993591 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878647326 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.061933233 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142353877 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171605762 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.319549658 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934640024 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077835419 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.593819141 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828499183 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.877238861 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880930314 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.878752679 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876508744 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.38815655 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.176768914 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94511659 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905517079 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883230461 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005084624 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.895450595 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80279556 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877309107 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878952808 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.513071997 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913234944 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.832461723 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.120666248 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.709020795 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995968108 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924300447 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.888163607 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8824494 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.548484322 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.91898773 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803712169 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.518179512 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923974793 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.599495123 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364874635 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438392863 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171860113 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183387022 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.191481244 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.941961858 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.092014614 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964115343 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934603353 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968066815 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816857149 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.805689986 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.519928585 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205451672 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147613279 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888394112 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09522852 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544542386 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107786715 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909579804 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.789421124 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184802452 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85312413 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896088105 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.438142179 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994653935 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96180349 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882620541 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.829214389 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214457347 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919041753 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.579694449 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894060461 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.231721531 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.529947429 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.958483578 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.194817721 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083788568 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.888960239 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224911638 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303805264 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929804258 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888332854 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.87483433 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.099075521 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464229177 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.743762473 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889325017 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.253475617 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176251474 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.78304037 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.885507459 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257439149 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150680426 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885197233 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.168067981 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241011963 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.98730019 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94266641 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109725227 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.841214405 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189252579 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.433127086 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.373900451 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891885931 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.810313359 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.58383105 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.087001335 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887297449 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.85154258 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096440152 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118715147 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564847394 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106260013 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128031955 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.896472663 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.145846658 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953680441 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.982139175 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.134292496 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.304385944 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.134536117 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111739288 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425446375 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103143539 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347027321 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.051311356 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.887842154 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090405987 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102497502 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.100416828 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.201595772 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050489853 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.595193936 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.890499232 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.092699524 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168392493 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94364276 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.196851344 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.050885375 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.970671623 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893349974 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95070927 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.89191461 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895994653 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.200658913 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.412039401 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.90217223 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964727554 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.989120624 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.395089997 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.892044208 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.893132027 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148785949 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229603848 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207259731 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868219724 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.888406997 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891886952 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016203159 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.814428912 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893948796 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159889886 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.8909234 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500333159 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.047075962 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905813081 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.140366734 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271844276 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760694939 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.859372598 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893230669 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105190997 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192559018 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28502802 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010279014 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160471134 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222986579 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.922481913 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.209284053 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126234212 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892528752 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.765087812 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893704269 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017876867 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.093880771 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154607828 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.391935871 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.616395184 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155631337 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738489651 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.89333766 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.562478846 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160718294 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153457762 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937638051 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954886717 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895760498 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.529981459 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.67265002 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0229514 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.750639255 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816540255 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.926864411 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.111196712 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.13240458 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.601126726 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894308096 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159552374 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190523098 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155005502 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.939252427 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.823541824 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106782275 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894254501 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.897507802 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172408862 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107683444 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138653946 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895727297 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898274165 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.700368134 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818540222 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.893536631 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947071758 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119199533 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912542527 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.406550084 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.591677603 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169100338 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941060758 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89569323 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15576625 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.393732514 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.444868408 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898768742 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106313842 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.924604638 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180255473 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.896215673 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.533497238 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203694277 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.89469268 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.632112605 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.146814889 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162273707 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826496883 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903466062 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10725674 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.862961611 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895267288 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.877149883 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.575900817 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133807989 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.627700948 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450415796 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.896554786 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.897279788 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.531163397 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934006298 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.54170584 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931925919 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911545199 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414845418 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.605626842 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.182136316 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137878583 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.633530522 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.55131327 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.896660733 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.895204578 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897142884 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.813597726 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07877809 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.083605334 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176144672 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927484448 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.543704799 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937813476 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.223602972 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00579531 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275449135 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94140173 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.415991382 seconds)
  done (took 1668.234308069 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912664988 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.916992188 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.9047996 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.920455685 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.907488909 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.915958722 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.973090748 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.911707377 seconds)
  done (took 57.190661869 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.902452878 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.911180247 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.901057098 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.89676382 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.900861943 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.896154059 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.058462816 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.908986695 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.905020541 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.902208278 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.898242193 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.897282529 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.179513736 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.91871967 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.897729699 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.897209056 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.900061208 seconds)
  done (took 74.603407631 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.901203967 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.152885476 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.960493547 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.900649298 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.860780081 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.908260074 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.913358444 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.898364766 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.906465793 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.148301483 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.198008299 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.947682992 seconds)
  done (took 90.52629034 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.903550809 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.898474288 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.898298247 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.899076533 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.899039364 seconds)
  done (took 11.332515946 seconds)
done (took 2176.0676474 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.128876988 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.958146464 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.001235831 seconds)
  done (took 5.789159564 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.046737342 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.091493381 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.204037827 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.964912331 seconds)
  done (took 10.144704111 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.203555612 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.280818998 seconds)
  done (took 6.315138381 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.272572341 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.91068747 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.28179838 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.899901449 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.903751456 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.903806102 seconds)
  done (took 22.542457137 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.899968531 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.900072099 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.899810569 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.899939912 seconds)
  done (took 9.430807134 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.900226296 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.613662005 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.902229029 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.91195689 seconds)
  done (took 21.15861442 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.048951286 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.034407147 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.043139994 seconds)
  done (took 7.959020709 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.04150952 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.73632693 seconds)
  done (took 6.609455481 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.046206259 seconds)
  done (took 3.87653463 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.928368461 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.16994157 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.394141135 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.433307431 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.553705685 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.712000293 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.222934824 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.148046656 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.318234563 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.345084349 seconds)
  done (took 25.057337106 seconds)
done (took 134.307441862 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.247272135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.924192774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.099825194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.261673809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.124284657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.099151018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.121094119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.255100194 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.934029791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.92146798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.258690428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.122905002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.067064812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.912296967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.073881525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.911539392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.123992405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.257469938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.942519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.158534394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.129834058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.906623297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.10369331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.917325397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.12692634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.05019392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.450090695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913208573 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.085338914 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.460036037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.051403423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.303988327 seconds)
  done (took 169.147660027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.901833196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.902873245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.903833388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.901692336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.49153882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.901960754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.905049575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.903071447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.375760506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.350302057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.903575631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.469210113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.903955819 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.903560153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.904863252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.90343288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.547831664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.904150416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.902117447 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.904013726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.903088757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.311457621 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.904171892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.339434875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.542198929 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.903956583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.903865101 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90295956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.903950676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.909412803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908777716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.904746143 seconds)
  done (took 210.958208217 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.912317021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.904253677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.904964561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.905051062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.904964278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.905098752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.906783651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.905226011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.734040302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.724176994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.907999081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.904324762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.908351568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.905834674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.911337249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.90544719 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.911184622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.910345074 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905846205 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.911497788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904930939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.577080776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.904321498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.598507622 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.910023974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.911512792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.906056587 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906165026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.90565018 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.907038793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.906117269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.905731412 seconds)
  done (took 221.873421672 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.144201993 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.906967281 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.907992456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.902919147 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.908014447 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.908134304 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.887764327 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.152885537 seconds)
  done (took 19.555451014 seconds)
done (took 623.380883925 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.306506385 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.136798194 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.087104021 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.932309255 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.186221449 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.976005814 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.927540383 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.992181406 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.767578969 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.004461862 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.561388837 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.950554929 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.660465981 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.956539676 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.05532546 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.986624209 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.499136355 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.59184982 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.072441418 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.001153252 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.105584231 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.86823437 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.009921374 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.804746591 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.581957397 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.919730493 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.955850972 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.503921024 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.941204947 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.089453911 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.676509363 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.229624384 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.946159391 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.929104398 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.983149146 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.963895708 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.15566757 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.94156424 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.053412751 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.661301482 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.003249165 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.668680044 seconds)
  done (took 104.483551111 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.919494764 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.914993764 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.914854462 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.915719758 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.924422981 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.916787591 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.91560457 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.915948941 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.91555119 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.915701841 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.915876177 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.925051293 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.916096616 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.925141405 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.915810131 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.915383902 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.916238785 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.925412397 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.916458524 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.916782985 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.91759824 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.917211041 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.911235034 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.916230866 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.916310229 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.916699679 seconds)
  done (took 51.705532329 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.911296612 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.081697554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.158939314 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.932766366 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.912052153 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.914868003 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.929836234 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.918032517 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.913818178 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.913769134 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.013265441 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.918368886 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.929097897 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.156900972 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.929127468 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.912508069 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.912578075 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.913304139 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.090019498 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927931199 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.931464846 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.916760791 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.931856074 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.925995353 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.913951983 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913362879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.916846514 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.355595207 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.921627533 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.013958443 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.956879255 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.9353984 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.295782046 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.166412085 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.967586573 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.919874605 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.913104669 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.02158607 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.918266668 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.913981841 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.93125575 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.919537874 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.161354107 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.441120252 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.929242128 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.913305254 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.365985955 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.030899135 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.955867944 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924863574 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.16675931 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.931984555 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.915764537 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.916121056 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.950270831 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.925372627 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.913417551 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.224945356 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.927905674 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.932102321 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.919664889 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.915443704 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.095845315 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.923895611 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.082444246 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.924697807 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.920053754 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.915480282 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.165186044 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.931822327 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.459794286 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.929732385 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.91475059 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.01751008 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.088935913 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.390994791 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.927874861 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.097823361 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.313203926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.938471404 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.923993314 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.345418356 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.94441705 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.923185635 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.916681647 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.917191646 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.916486433 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.960672229 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.932138158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.367889677 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.45200173 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242278107 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.942325839 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.927090228 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.916412996 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.224325739 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.924631465 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.91798895 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.154128302 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.462888967 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.931497139 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.923132322 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.437235207 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.932577671 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.935895018 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.925520441 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.173004403 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.934576228 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.961546571 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.916755249 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.924283798 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.92023615 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.937873521 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.924134815 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.916709994 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.424667071 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.038594883 seconds)
  done (took 237.607750421 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.917853087 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.91586542 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.915422061 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.915293024 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.915831939 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.916946125 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.915224207 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.915739846 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.917532987 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.915945524 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.916655134 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.918087403 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.917165839 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.921018235 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.95941439 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.917909304 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.520297396 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.917822711 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.916605228 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.917550396 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.558308585 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.922651454 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.915885798 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.91757052 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.916266288 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.917716188 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.924350732 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.956203603 seconds)
  done (took 168.862210535 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.917875251 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.03124145 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.937671592 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.948071508 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.926960137 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.919934372 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.014463114 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.936360173 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.924513848 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.918837267 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.91969928 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.979384916 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.930800877 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.015696719 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.951216232 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.026779954 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022554436 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.927397542 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.91964673 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.919788031 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.947583445 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.928747219 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.980676047 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.043311123 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.938032099 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.032389004 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.9398073 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.919799988 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.92033511 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.031638726 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.939134704 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.980651882 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.949574657 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.939374291 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037645956 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.034708889 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.024192448 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.023652071 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.927253876 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.920509229 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.921748408 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.923873611 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.034015115 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.94044788 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.922837893 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.038799551 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.939331004 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.921907514 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.922865743 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.921645364 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.934445433 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.93917527 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.985892307 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.049984116 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.957574121 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.945648966 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.018820551 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.050738981 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.922245891 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.017402994 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.931288959 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.034655955 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.941035186 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.924058151 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.923416645 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.925344138 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.95137425 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.026938906 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.02548119 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.929941447 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.019094106 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.958088929 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.929824959 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.922706223 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.923342914 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.035351511 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.038654614 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.959352881 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.96056592 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.952087284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.932837354 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.922013975 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.925122173 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.939737529 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.927804289 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.035980211 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.038395527 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.930059025 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.923377549 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.924250675 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.924971532 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.948864789 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.043155009 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.959877795 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.029050699 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.99043308 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.997430811 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.937202584 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.938368999 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.928544222 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.986987136 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.937083282 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.93494931 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.235132754 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.984127796 seconds)
  done (took 208.297601796 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.324708077 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.972040026 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.980330646 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.24098535 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.283929916 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.885201672 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.969180937 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.978068284 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.005524152 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.193992515 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.045695477 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.992124398 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.959353869 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.946422252 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.971325433 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.005466655 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.979813184 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.311854072 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.170572383 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.458421219 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.962017669 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.24069115 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.291607739 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.547093522 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.020201839 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.396103712 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.589945979 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.134926967 seconds)
  done (took 64.717387959 seconds)
done (took 837.5112048 seconds)
SAVING RESULT...
DONE!
