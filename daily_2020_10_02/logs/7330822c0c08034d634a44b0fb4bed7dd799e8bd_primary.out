cset: moving following pidspec: 31809
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.785897338 seconds)
loading group "shootout"... done (took 1.191106476 seconds)
loading group "string"... done (took 0.43169189 seconds)
loading group "linalg"... done (took 8.219268905 seconds)
loading group "parallel"... done (took 0.161318194 seconds)
loading group "find"... done (took 1.378190098 seconds)
loading group "tuple"... done (took 1.997127996 seconds)
loading group "union"... done (took 13.004270123 seconds)
loading group "dates"... done (took 1.380088129 seconds)
loading group "micro"... done (took 0.210160049 seconds)
loading group "simd"... done (took 4.562887696 seconds)
loading group "io"... done (took 1.046054321 seconds)
loading group "random"... done (took 8.957144791 seconds)
loading group "problem"... done (took 1.560821764 seconds)
loading group "array"... done (took 20.19549161 seconds)
loading group "misc"... done (took 1.545337839 seconds)
loading group "scalar"... done (took 41.497365462 seconds)
loading group "sort"... done (took 3.310043996 seconds)
loading group "sparse"... done (took 12.112241466 seconds)
loading group "collection"... done (took 17.580715983 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52147653 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121907899 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126638405 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11965567 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18146433 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118329957 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126186509 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083930024 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834055424 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139655059 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113975059 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427413767 seconds)
done (took 5.252046633 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.1661667 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091081318 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081765091 seconds)
  done (took 1.303244564 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064757154 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133821596 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065322172 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065465383 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06599351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065166098 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065074991 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065030394 seconds)
  done (took 1.657173589 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070633158 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066639389 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064672275 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066534571 seconds)
  done (took 1.401566109 seconds)
done (took 5.739889804 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238598221 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099205142 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.286858958 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.442288369 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.604806525 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091427376 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073497258 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069161058 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.128666465 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328228739 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103928491 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.180360546 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090241239 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.164044355 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.01694154 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119450315 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085152923 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121949109 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094064023 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130723316 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.386294702 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076464367 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074546624 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069006999 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066765653 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645727746 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658498223 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.121683112 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084948814 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160681378 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115139053 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.639858252 seconds)
  done (took 10.734604235 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090913057 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088634055 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067483323 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122663285 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091756364 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068365017 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074221959 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066064061 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086328615 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.122200931 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087991453 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096834108 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065081605 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067649104 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072186626 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194139141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079200283 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079414503 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066857549 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079585484 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104419801 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076868767 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076764409 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076183324 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127289888 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167787903 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095277646 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096866913 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069639029 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08029675 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113962516 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123879988 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065429799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064265509 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117591994 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093413666 seconds)
  done (took 4.491635166 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.964210085 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093201214 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098433891 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.62717472 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065194001 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148408128 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238596865 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071841717 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.334900727 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.14728595 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139385692 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146024938 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115238766 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067957424 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.239935747 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.116043522 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513858987 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067015443 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065332632 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063977668 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066992094 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066602793 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0619533 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067428516 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094222943 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086426873 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.158214236 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.953215674 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.289399747 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070076321 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158344288 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084422389 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.353207795 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068450562 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081207075 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.444452097 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122194101 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064968806 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168447006 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115859713 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063888395 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118808068 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076880178 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083017967 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068146837 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06333655 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06777449 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066746353 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070415542 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077555451 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100077385 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06676842 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064855939 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169561908 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0637794 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065324871 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066334003 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148350525 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063006765 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13958118 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063827901 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06884159 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.102880251 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069364639 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.084926126 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.092745098 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.327288652 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.037893336 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068807516 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.899237294 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077405739 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065942692 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071528354 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065277153 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066775579 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066136836 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070959002 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069112002 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067578102 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107601037 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065706796 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069607937 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066180721 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070833281 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096006823 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064327827 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.501490641 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095975522 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065099327 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074623885 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103735673 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0656719 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070046771 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066327823 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063095301 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065777578 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065354238 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066182721 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068164663 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095327332 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0627512 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111127296 seconds)
    (102/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069874816 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.137408782 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068277552 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065835564 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073859324 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068213906 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06943532 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065793804 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068387068 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067380122 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064136994 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.104953748 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066533784 seconds)
  done (took 21.57117067 seconds)
done (took 38.891830776 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327786444 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076655382 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076564276 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076659214 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076430884 seconds)
  done (took 1.853278976 seconds)
done (took 3.058530185 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108160095 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06291091 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.099579745 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098172662 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063522699 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062792171 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09668849 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063106507 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097140968 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099126673 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099619044 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099972614 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063242116 seconds)
  done (took 2.329619351 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068934032 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080233423 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081780362 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060884547 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070509484 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080926917 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060785473 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080112667 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085920412 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080886148 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081016298 seconds)
  done (took 2.034722233 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071294418 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080731501 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082139588 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060520042 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071980862 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080870787 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06099404 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080346989 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082562187 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080640436 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080708063 seconds)
  done (took 2.028417837 seconds)
done (took 7.587114188 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064970897 seconds)
  done (took 1.244119295 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.515767385 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.121650245 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066463362 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083900194 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189066472 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.090060897 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.194147402 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069154076 seconds)
  done (took 7.680885363 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095777417 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068863805 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071026326 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067145458 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068118083 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067640887 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066862119 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066057117 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067014368 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066503523 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06711861 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068212281 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066379848 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066727052 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0677825 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06678007 seconds)
  done (took 2.391008756 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098652925 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096596956 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071027757 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071678595 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069672418 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069055316 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071614575 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071055855 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068230017 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070204392 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070776548 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070109594 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06986287 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06157232 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07154299 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072169319 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068438458 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071055114 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071597709 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073073722 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071196059 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061509978 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069907837 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070219959 seconds)
  done (took 3.037531861 seconds)
done (took 15.546903252 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169751456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072879788 seconds)
  done (took 1.433697159 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066924203 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067340021 seconds)
  done (took 1.339494704 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072112877 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060173899 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.077441825 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068449849 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060507732 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060102816 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.074884813 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060088575 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06010453 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060107166 seconds)
  done (took 1.858699147 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061996002 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067320924 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065728278 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067196555 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065456203 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061269576 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06351002 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061580619 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067373287 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060496475 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064313778 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080406921 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063877513 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081425174 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063731599 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064325948 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06568183 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063451839 seconds)
  done (took 2.396409999 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060499357 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06068084 seconds)
  done (took 1.336047146 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063354142 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060709256 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063191463 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062468945 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060185435 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060299507 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060518038 seconds)
  done (took 1.637050336 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40998764 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119929595 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332863371 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067391872 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07554864 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249186064 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062579159 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067366056 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06692699 seconds)
  done (took 2.700961246 seconds)
done (took 13.917577628 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080338935 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.17602441 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086948829 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.521210102 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089680415 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065843695 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111452413 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.163395469 seconds)
done (took 2.523435356 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.232535132 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.317870045 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.779614579 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065298537 seconds)
  done (took 3.376945203 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3305785 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.078085563 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076830509 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066134121 seconds)
  done (took 1.777497149 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064183425 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070329025 seconds)
  done (took 1.356496981 seconds)
done (took 7.969301181 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062983186 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090868325 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062607982 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063111082 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062824933 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062607251 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063203002 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063029365 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06303283 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062464056 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062827289 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06219496 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.062409132 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062454099 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062560842 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063570008 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063156869 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062700285 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062851635 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062965565 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062992403 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062509866 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062654785 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063104987 seconds)
  done (took 2.785145554 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078430643 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064902238 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065490718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065064702 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066016453 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06579692 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065444046 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064157362 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065362071 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064075441 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066280095 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066363382 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06383404 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065891373 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06452901 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066111612 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065667557 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064176005 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064012842 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065747972 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065485304 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064099498 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066224077 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065143567 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066071261 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065483816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06413864 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064370029 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065856472 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066721355 seconds)
  done (took 3.204855188 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06647449 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059110869 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059264603 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077769912 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059361129 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059949936 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060119357 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058351088 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059462298 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060212087 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059619403 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059285425 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059300088 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058801909 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058583958 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059660821 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063375586 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07733677 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058940172 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059085951 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063399027 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058818125 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058775728 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059134922 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059169685 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058421 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058634213 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059027563 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058672198 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059384401 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058669158 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063244492 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064058111 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059384627 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068406261 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06389729 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059038836 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063242369 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059897567 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058852899 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059491145 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0602182 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059997586 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060035432 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069907176 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060347175 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061378013 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.06021341 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059915999 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058831996 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05876501 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060567647 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064628084 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060279406 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058562007 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059727589 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058686502 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059580781 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058956729 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058373698 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058818541 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062635758 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060082559 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05985413 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07794138 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060218229 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068171885 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058599733 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059544687 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062411887 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059293471 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075953381 seconds)
  done (took 5.651801342 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082693642 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084279537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06416934 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064134914 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06024351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059412269 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066534142 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059295147 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064305444 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078747809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059346396 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063861039 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064143433 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063631669 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059487336 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063708964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066997391 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059748588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059365011 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0632479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059468935 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066371953 seconds)
  done (took 2.68418907 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136715988 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065298911 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102889131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073221053 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066973713 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07262742 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064684838 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064938277 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064618595 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065129399 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065695629 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064800124 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06740852 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065420156 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065348961 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065383004 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065181581 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065425097 seconds)
  done (took 2.542757385 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074738856 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065700125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085219057 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064503961 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065664921 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065060826 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067927299 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068254452 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064261715 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064618195 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068000317 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063987592 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064294547 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064433902 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064489223 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06459588 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064512789 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064441162 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068349573 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067896028 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067942122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068493867 seconds)
  done (took 2.719178987 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075440213 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064171814 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078378979 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065400042 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059651022 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059658347 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06430357 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06420328 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064478565 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063068614 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064388318 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059552032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065625889 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064165428 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065307562 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063892913 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063390978 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063746618 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06369953 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059375997 seconds)
  done (took 2.535169416 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084637351 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061899059 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061695823 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080977537 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061822575 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062053092 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080727941 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061832383 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061872594 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083161238 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061975958 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061981123 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080746119 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080434112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06194096 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081218321 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08084315 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08108085 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061802299 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061893412 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082841954 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061610041 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080756864 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062029311 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061458987 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061899027 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061654382 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08064117 seconds)
  done (took 3.213535242 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062947735 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062607687 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062699154 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062545322 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062825288 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062268014 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063373515 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063460974 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062867452 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063162434 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062773646 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06230749 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063014876 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062479821 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062321094 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062813976 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062378661 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062872702 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062977438 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062921832 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062377572 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062771411 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062514684 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062615323 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062813614 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062967349 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062790272 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062899925 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062390134 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062980995 seconds)
  done (took 3.133546272 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071808922 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070851546 seconds)
  done (took 1.394862073 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061550091 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07642192 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059521962 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072164079 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067793519 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062971828 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06787054 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067052201 seconds)
  done (took 1.782731488 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064974567 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088453196 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061603546 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061956283 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064121564 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120184924 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073172875 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072233136 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074461911 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06342532 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061596274 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072721311 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063122876 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073762247 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062266163 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069928349 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068000725 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073237173 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073729569 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059480519 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073156085 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06134809 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059507017 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061571724 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060501667 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067085486 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076005243 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072961096 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068973903 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059067945 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078754742 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059780658 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060905598 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069020833 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063519038 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.05946274 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095828591 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060130281 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064742068 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059416596 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071032961 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080064371 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073716768 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077258178 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060973686 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061269987 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059268419 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061288296 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063357993 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068706987 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060087421 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067192459 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058886963 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061034553 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07022384 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060146206 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064736513 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069269136 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073022731 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06986426 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068813454 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074692082 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068928233 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066767243 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060167054 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07838421 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061721118 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072405215 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07430737 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060654161 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072180477 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059150516 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058672104 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059500411 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091818375 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061282983 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060823318 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.0596008 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059436817 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061157964 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069048557 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064218505 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066709851 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062500187 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074928312 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06874954 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059508423 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065829226 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.07679631 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063094984 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059850036 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075434624 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063286939 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059511324 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076281606 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068845936 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061128618 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059737422 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063419621 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072587218 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060346368 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058314761 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068069506 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061115647 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061924505 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063583378 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06746437 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059438595 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069167294 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064215613 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060096934 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058055931 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063001433 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059124671 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057185949 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067414694 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058138764 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071835881 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064823669 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072614086 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072972897 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068267025 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074225599 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058110175 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057309862 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075774495 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067655275 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059442745 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075703616 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057966364 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068478716 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058211927 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059829699 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067389917 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05753116 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060035166 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058678018 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.062422904 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059917418 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060030629 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063109005 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067321231 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069974126 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059388954 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067164632 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059033077 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073232203 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068223155 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063169944 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061639033 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.05849034 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069680605 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065010416 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067409681 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058398689 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058963897 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058308211 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068899059 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068015221 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06030181 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.065219994 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063418672 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058878343 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058577394 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059687471 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062545094 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061683914 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058678637 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065716334 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067103202 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.070903701 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063484084 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067346158 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057330481 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058030506 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062630531 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057329842 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06257581 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067114776 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072363979 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069458263 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078264014 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058373557 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068150922 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059546212 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07335492 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070936487 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059402594 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062400685 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057947189 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060016134 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067747349 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069032642 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071005086 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072301776 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063109763 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062837354 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057991214 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071705035 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058443629 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066906456 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066974468 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.061723022 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057922168 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059893119 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067479252 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063124008 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05860937 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073731135 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06300716 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057698702 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072215593 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058600356 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067927846 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05740389 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062181587 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063571133 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059471243 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068054206 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073164874 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057593429 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059062177 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073087716 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060310939 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059540068 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066628066 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072480921 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063580467 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066108453 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068496457 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067958073 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063095534 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067729516 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058654609 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067843609 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060998435 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068396239 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057914349 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074967912 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057651834 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072465602 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058677384 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068784383 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058775998 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067593453 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059434899 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074118166 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060101482 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059867679 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070078797 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057657326 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067309245 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058179307 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063860944 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065084495 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068070263 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059507912 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067128314 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059267388 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067002844 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063837647 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065924474 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067215257 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06343945 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058266618 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067226308 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068448239 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066652309 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.30220301 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063846669 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062425557 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071426964 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064168691 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063473877 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070297628 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066584797 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068311054 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06380727 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.064354417 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.0643629 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071870343 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073178635 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080721408 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070998641 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070396283 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071319472 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061087433 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077446374 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061953685 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06928652 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060687494 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066817877 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071174971 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061717879 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08091897 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063323025 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070229214 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073848559 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070271722 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065810587 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079405316 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064478256 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069816478 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069164746 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065541919 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06764547 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062854329 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069113392 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07072116 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071123423 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061575152 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067753559 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069229318 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061674637 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067562623 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061878504 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068555292 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062308647 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059598722 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065090322 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071341465 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064918705 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065745899 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060619526 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058772159 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060446602 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066920115 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065065969 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068842222 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07549724 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059644644 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.06144187 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060205362 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063856264 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077693184 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069834927 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069042169 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065531741 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062620473 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06185398 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062039753 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060740535 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063579239 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05939723 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06059118 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070446765 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061873513 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064810905 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060191781 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061492987 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0695294 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064734674 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060916445 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066778466 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060088525 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065694395 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059621121 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061590289 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064513571 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059391229 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063870779 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.07060244 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076421973 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067333486 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069196697 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061733735 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068471088 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075856204 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067020048 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061536832 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069441387 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059917654 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078243331 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069302694 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068996162 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070137206 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06121503 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077201405 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065321272 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070272894 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075658054 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061651236 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066514838 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060367836 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075307123 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064914984 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059658937 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068176888 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068194813 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066340882 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071854097 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060619775 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067709792 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064512351 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063234627 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061405365 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061246412 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068863879 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075412858 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060582202 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063057524 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066957821 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06785079 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063873992 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.212845742 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068556361 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061675871 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062552164 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064043719 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061255475 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072747451 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061049965 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065529404 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064530444 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059821732 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067297875 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076128915 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06945009 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069512009 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060413904 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059384075 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077400141 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063988411 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.06403537 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068837053 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070814812 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072291261 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069638442 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076675788 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061031383 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066052103 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072455036 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061016742 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060496316 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063999814 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061573286 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069277666 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070490671 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067990735 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062215822 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067300275 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074415449 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061838741 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06581056 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064936599 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060948564 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070488607 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068690667 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068949379 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061739186 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060024419 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063927376 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068976489 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067602877 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068920914 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060915566 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066452014 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073445714 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067126201 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063217301 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059730919 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062825806 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068811783 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064021215 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059873231 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064599604 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063776805 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066523768 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069249991 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064525037 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059960838 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076765232 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068136854 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06961711 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061696638 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061735674 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06023325 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060168418 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070967801 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059781945 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061522656 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064783902 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061302749 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076591884 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068033562 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075537687 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061092297 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064519183 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059918352 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069622572 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06518118 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060200926 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072763132 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059732115 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075217918 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071538986 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065095315 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059695752 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065155577 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067755554 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077789512 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069632755 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068949842 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063683422 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069512206 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062103916 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071434406 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060162812 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.05924508 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069581452 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068058602 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072009051 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059749656 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069697383 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06259584 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067742534 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067820177 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061967701 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061538626 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061590489 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069437036 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064396334 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06944026 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065141119 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076086584 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061275493 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070726082 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069595101 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070664706 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073673953 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071525312 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067598661 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060728483 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067123632 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068014181 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060484259 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064181487 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062592926 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080026086 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061064999 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.205062382 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074697889 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066925424 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061026205 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066342137 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065965807 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070601282 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.079622416 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071139631 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064087574 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.06146112 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065166225 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064749904 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059512959 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059705425 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060433867 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069897877 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064777447 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060107997 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079190869 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061646145 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069342724 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071352853 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067206502 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062154308 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059373126 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061840557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073463454 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075393966 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063511355 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068635702 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061410862 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069199923 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059220916 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068858936 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068481161 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068950276 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059929248 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060580611 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074425513 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075352371 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064821433 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069514076 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068925805 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06138563 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080774272 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068953044 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061311037 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071070915 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062132767 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059411008 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.05908525 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061465639 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071215206 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059422604 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062238547 seconds)
  done (took 41.089480016 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098833227 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061855309 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061148363 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062178631 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073064594 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063036565 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061911559 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062576712 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062057488 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062557078 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060061048 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060706188 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070674798 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07247182 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070112192 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063731533 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060312333 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060865446 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059963092 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061404159 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069791297 seconds)
  done (took 2.795570992 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066903467 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074671497 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071686076 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076847051 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068013521 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064120369 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071313891 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06381642 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071323298 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069448145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071328657 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064308404 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069621579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070990426 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070165408 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064273524 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071054887 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068484299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064001913 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071219045 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064386281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071017758 seconds)
  done (took 2.904339402 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062313432 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060795303 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069357095 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059450644 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060117599 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063388705 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.06047011 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063919246 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064655432 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.065082178 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069178703 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060492121 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059635717 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065689823 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059580779 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060675794 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.101599968 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060835592 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060632006 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059770808 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062412732 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068934237 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060180637 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060027302 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066945185 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062772564 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059807997 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062316499 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060449574 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064409279 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060948894 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059565464 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068822635 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068061152 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064601047 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064628189 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061410883 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060754046 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059986069 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059638992 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068098133 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061244989 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060443971 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061240393 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068477089 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059867658 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059869456 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069205516 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059598747 seconds)
  done (took 4.50160805 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070046016 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111670439 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065923087 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09265363 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072541963 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065335597 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065907271 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092575653 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061199638 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061539969 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073092122 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073399271 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063214597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063986881 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066728221 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062458657 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063055302 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062033394 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065045735 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062466375 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065053988 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066496412 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071945587 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072923625 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06330874 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062123071 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062387668 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064025543 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07214813 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065706938 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063756762 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065028681 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072423763 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067410462 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061980729 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062831908 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072908841 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063031558 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062771753 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061211411 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061890727 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064178229 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066455216 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073366314 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063523302 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067436765 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062777105 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060941633 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072908376 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062264039 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06662301 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073737373 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063537232 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062671472 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064062031 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072367607 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063066057 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061822955 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063210675 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07193852 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061090268 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063558932 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07317695 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062238763 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065820898 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073489938 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067452997 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063307923 seconds)
  done (took 6.089036355 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069459767 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093841083 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070858669 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071347179 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071175925 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070553009 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07036427 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069694352 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070166022 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07069264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07027165 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108758885 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066787398 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074260798 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070006516 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070265569 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069915045 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070533348 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070105531 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070215955 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070185904 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071007169 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070075057 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07047262 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072717494 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066892918 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070385626 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069942593 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072409521 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070050315 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072491839 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070707995 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070166359 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070555391 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072964271 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.06999531 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060901001 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070297759 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070289004 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070266837 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0672007 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070729714 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070406033 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066660446 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070036166 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070010811 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070858242 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072820437 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076978515 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07076937 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070520467 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070895436 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069973146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070308267 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070714589 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076630944 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070955458 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070422108 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070251594 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071263595 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070941584 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076502216 seconds)
  done (took 5.862670376 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073522795 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066713375 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078400453 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060573978 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059911011 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068910034 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060211758 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060294424 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069105657 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066319633 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067904719 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068833489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071131579 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067844027 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069465321 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071239332 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068895693 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068681724 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066661211 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068792229 seconds)
  done (took 2.773882961 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074725566 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078575883 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066091747 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070935402 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067375612 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070305467 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066325541 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067089016 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06786017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06738327 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071874754 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071252725 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067502669 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071318492 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071146568 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070424416 seconds)
  done (took 2.529006544 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066444734 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066915258 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066415557 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061795317 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064897578 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060703964 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061125166 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059841292 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06010941 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073863102 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061039095 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073524364 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060649994 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060227014 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06044039 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066135116 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06031926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061076683 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060814825 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065417266 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067386093 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061743812 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064811204 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06115562 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066556403 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067435817 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062411358 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064963077 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060560221 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06105772 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066362383 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067869535 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060538976 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061120828 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059998119 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061144172 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060931302 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061340287 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06636464 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060640784 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059570505 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065615728 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06110443 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061765746 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060045275 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061208708 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060547838 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066417112 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061240041 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066174877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061109198 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062601122 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061695198 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068027087 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062859227 seconds)
  done (took 4.885578621 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076878938 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065536384 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059943444 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059861327 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065129745 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065858588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064869587 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064946714 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06517201 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059470575 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065620654 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064296091 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065297239 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064955912 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066060932 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065513986 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059525722 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064971086 seconds)
  done (took 2.588607238 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071482646 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065320808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070387415 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065462031 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065100166 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064702004 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060233747 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060109724 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059806437 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064742492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065150939 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064245243 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060098444 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064331148 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064525636 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06463027 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06439462 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059990646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064342532 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060093531 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064338797 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059908752 seconds)
  done (took 2.820547138 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.087411771 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083399503 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.126030153 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079227696 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087691906 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070979557 seconds)
  done (took 1.952286606 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092819356 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102825941 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064961381 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064978328 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073447608 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067955468 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067984612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06822918 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072947498 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071233586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068040108 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073069679 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072969767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069284533 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072871221 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075108841 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068170868 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067958005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064841112 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075215993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068113537 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073149385 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067916843 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067728923 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067949341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069558058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075328454 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071509147 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067719661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073007328 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075287028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068347189 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073014906 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074645007 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065185654 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074011368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068299795 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075725069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073377958 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069746811 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065219058 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073016441 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073181995 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069674557 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075884508 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0682018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069905833 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068505666 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068495705 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07774378 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073179191 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070171708 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073348408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075945366 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075728828 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077755521 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072252717 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069807406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073270418 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072476147 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069992671 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074003797 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069845347 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072246123 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075319506 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070057815 seconds)
  done (took 6.172730981 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099217491 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065875293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068579638 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072453238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069446034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068175182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068040905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06797869 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068230315 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066206974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102403543 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068662889 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070601511 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069939683 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068473595 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068502938 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068297105 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070657642 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06591491 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077767028 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068044778 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070031989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069743671 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06977204 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071703975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075677161 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068324575 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067881684 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068212675 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067854501 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070001677 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068484103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069547615 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065691324 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069504356 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068231227 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068098087 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069949564 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068143659 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073490512 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069775097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075413126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06812834 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067765117 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071972979 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068249935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067948927 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065795357 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068119654 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065666266 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071880838 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071860045 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072159434 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069961688 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068670215 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068140363 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068335009 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067987395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068523562 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07567897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070040105 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068398425 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077617061 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068133764 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067986461 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069900638 seconds)
  done (took 6.091859797 seconds)
done (took 125.928242104 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.217603231 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190044388 seconds)
  done (took 1.816087466 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073953409 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096872995 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074088842 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13362106 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071899495 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105320404 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104189419 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074705401 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070850262 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071138263 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071303606 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073550489 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136422133 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072207289 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070932044 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074074172 seconds)
  done (took 2.802595774 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106463141 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.183188538 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112841623 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069391509 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106888714 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07529255 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06913832 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079859096 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072522915 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08119835 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076053693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073981303 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070876261 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074365492 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072773008 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07490649 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070790994 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075633793 seconds)
  done (took 2.976775492 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096181553 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084888064 seconds)
  done (took 1.61574305 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161730947 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106674307 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14406621 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.322360223 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.128117257 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.126954649 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129858165 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126628952 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114223799 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122277313 seconds)
  done (took 2.911330166 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105510226 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175313747 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312382899 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120581534 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075539979 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097000698 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121962871 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082343524 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07858791 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078943663 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078675774 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075617863 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100523043 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07508275 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074760545 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079309268 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103518391 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074042272 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074931091 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07489087 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104883399 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070444321 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075306035 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073569167 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07700313 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076601598 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071330419 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070071016 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074730616 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073774601 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076568898 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093861928 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076943856 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.096962169 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073636494 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098076282 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073809532 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073038947 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074202391 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072999621 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075830987 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076302543 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079437974 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075831666 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071440932 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073873009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071221541 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06990999 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077383741 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070364822 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077423943 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076860354 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096612227 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070511594 seconds)
  done (took 6.144120261 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1075251 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105337901 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069678714 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112769177 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104874784 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069634382 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103542247 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099728358 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107835354 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068809905 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068167978 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068526125 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075422003 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078027992 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114380956 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107017297 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070942971 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069027811 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106404701 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105910933 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068365693 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100656348 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09948458 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105528808 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067545249 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069479001 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067491838 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068069054 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073169684 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074709516 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06782055 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074735563 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079872427 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074684582 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067385229 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06795916 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067616759 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074898418 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075518099 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075511605 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073257315 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067407903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067718629 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068259798 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069047498 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067168828 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073529294 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074177552 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073491282 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068203703 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06790826 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067710339 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068553399 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074246914 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073289422 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075092453 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074879861 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067882191 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067978778 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069124298 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076282582 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076179558 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07575632 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068801903 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075457603 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068079807 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076466726 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0799832 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067756866 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068370852 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068108604 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06790877 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068298955 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073593372 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073775667 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068791079 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067908762 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067748289 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076034784 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07376339 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067554038 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073074594 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067482591 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068027209 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067638579 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068211231 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072800375 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074642824 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068732294 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067565677 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067601387 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067719093 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066834928 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073079649 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073547885 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074640241 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073302865 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067869304 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073886235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074046504 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068112831 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073205173 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067803848 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068359508 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067933003 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074146607 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07295339 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075412286 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067314828 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067005205 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072779795 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075696127 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066977995 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072180562 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074309155 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.20758669 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068642794 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077988646 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068884999 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076641583 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068592713 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076763512 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071433001 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074188182 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068715598 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06785055 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068534981 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074947943 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068903314 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068344667 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068882414 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068059889 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075200403 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077986226 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069252028 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074900587 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074580241 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068709213 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0748654 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069059742 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075873311 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068591593 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069137162 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067727696 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076896582 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068238923 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068885244 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068448455 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076573479 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068604435 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076780968 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073836705 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068120683 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077539147 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076261288 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074215477 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077338203 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06878578 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068401825 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068442679 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068720858 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073295905 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074530206 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068696472 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068046231 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.0734909 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075896466 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067404078 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073705333 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073258167 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073462172 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068325582 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068291985 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076906569 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075897016 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073664335 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073525017 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074752252 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067741295 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073251974 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073656678 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067604695 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080285128 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068389916 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077720978 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073759286 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073352286 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074473854 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075298887 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075849249 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076280849 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078018667 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06765018 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067254152 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073706568 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067695286 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06798249 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073828965 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068773086 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068847226 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078434938 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068040484 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076227357 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067902912 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074969354 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067129176 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069095874 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078567109 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068119819 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068212215 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074102009 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067803578 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073693618 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076725065 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073881799 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067517346 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068414359 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07485521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074949336 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067520751 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067568387 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068357443 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073618238 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072655439 seconds)
  done (took 18.098824807 seconds)
done (took 37.810706162 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.219664315 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166011154 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200489095 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114949093 seconds)
  done (took 2.239817562 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.090559195 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098636881 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074691882 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064892614 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078697309 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065131161 seconds)
  done (took 1.952121333 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.250111629 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185586134 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170287852 seconds)
  done (took 2.078750908 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214726042 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191401176 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.722331684 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.302697818 seconds)
  done (took 3.00815152 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.126581664 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076578446 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062549212 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072585743 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.101319922 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.129854839 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.084019738 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.105259473 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073747863 seconds)
  done (took 2.371973648 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.12828185 seconds)
done (took 13.273709669 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.201204284 seconds)
    (2/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.235995118 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.198451077 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.103920978 seconds)
    (5/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.192238771 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07272547 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075537723 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076294747 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.238664407 seconds)
    (10/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.112440861 seconds)
    (11/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078727065 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07549236 seconds)
    (13/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.120800087 seconds)
    (14/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197053787 seconds)
    (15/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.076508054 seconds)
    (16/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082605837 seconds)
    (17/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16983028 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073640001 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.181356264 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.237790216 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075192267 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.213820955 seconds)
    (23/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21381641 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126370258 seconds)
    (25/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.201125942 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075574273 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118302462 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075760494 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074383449 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155573778 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151449382 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.143461824 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136683024 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119688925 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076057456 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124043932 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081600446 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066724914 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072627181 seconds)
    (40/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071809699 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 0.169913967 seconds)
    (42/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072265303 seconds)
    (43/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.19680188 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063806398 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.202564733 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075238572 seconds)
    (47/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.210769519 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068519231 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069494853 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086533436 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.084769313 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.143538974 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.188808692 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067357717 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.066018001 seconds)
    (56/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.229049105 seconds)
    (57/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07492798 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.081155445 seconds)
    (59/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078534389 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159802758 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222581849 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064690325 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07405251 seconds)
    (64/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074998216 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07192832 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115721984 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063327438 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091270783 seconds)
    (69/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064744523 seconds)
    (70/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.082732525 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089212393 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065308814 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14296248 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075873468 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072880808 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07146394 seconds)
    (77/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063454026 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177887178 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071868081 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150214377 seconds)
    (81/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.177827378 seconds)
    (82/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.171532271 seconds)
    (83/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071311982 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141374865 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.239449734 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184969155 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067539633 seconds)
    (88/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.167027852 seconds)
    (89/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.065489476 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18439506 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06577226 seconds)
    (92/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06855255 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147407242 seconds)
    (94/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.144538116 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.144037131 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064454041 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.095140973 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072937721 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067211673 seconds)
    (100/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.078551578 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075331023 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187071242 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088756218 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090524234 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160601944 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06604356 seconds)
    (107/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066404718 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066183614 seconds)
    (109/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.15164986 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201234195 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071419831 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.082216922 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160755425 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073300743 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090490169 seconds)
    (116/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06542431 seconds)
    (117/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14173908 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174410214 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06603093 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070678436 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073606448 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.21551166 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066686959 seconds)
    (124/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.140531874 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067654664 seconds)
    (126/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159080566 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090601752 seconds)
    (128/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.166261433 seconds)
    (129/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090609065 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074095918 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072697589 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084137254 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074922273 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190411871 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0876627 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123198917 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063929952 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074819529 seconds)
    (139/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072825159 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175161921 seconds)
    (141/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065291594 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.222691712 seconds)
    (143/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069932748 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072452938 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063782631 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064792928 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065960446 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075969077 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065076401 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064196531 seconds)
    (151/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066231332 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.212706412 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.0640785 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116280562 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079068719 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083441228 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063354418 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071481814 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080307393 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072714234 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075676418 seconds)
    (162/309) benchmarking ("sort", BigInt, false)...
    done (took 0.258018933 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063762346 seconds)
    (164/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.139881361 seconds)
    (165/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065083919 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090845149 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.196701663 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149365172 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13023134 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08459687 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063861715 seconds)
    (172/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066968158 seconds)
    (173/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.139629331 seconds)
    (174/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065181376 seconds)
    (175/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064606031 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065256234 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063796563 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150111494 seconds)
    (179/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063600301 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064578071 seconds)
    (181/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064427154 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071356596 seconds)
    (183/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077584981 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063453469 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064959432 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086221191 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064562344 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179996824 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067098984 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063363837 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085638951 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086094008 seconds)
    (193/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.064152232 seconds)
    (194/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.243128844 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.230873307 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06817164 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069674412 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06641142 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124664574 seconds)
    (200/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067068173 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066280113 seconds)
    (202/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.065195912 seconds)
    (203/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073406103 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065505275 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087272671 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.202342868 seconds)
    (207/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.065692452 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130447821 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077664447 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076355556 seconds)
    (211/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064687872 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131942711 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065104697 seconds)
    (214/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066057224 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065281623 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090145921 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065478 seconds)
    (218/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064555086 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072873697 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094178718 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06525754 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159132743 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077184866 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06478896 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075731763 seconds)
    (226/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066150901 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 0.138443365 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17114364 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066551564 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065708207 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147464856 seconds)
    (232/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078397311 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065732204 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090781479 seconds)
    (235/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066167629 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064634896 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06535232 seconds)
    (238/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129551212 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.160475519 seconds)
    (240/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063930966 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072546299 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066176221 seconds)
    (243/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065902806 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064904201 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065511233 seconds)
    (246/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063912043 seconds)
    (247/309) benchmarking ("sort", Float64, false)...
    done (took 0.137304439 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072094613 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065337602 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073224209 seconds)
    (251/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069561309 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073137845 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064476921 seconds)
    (254/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.136151606 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.1308152 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063589339 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063854366 seconds)
    (258/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065921585 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064988656 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063925958 seconds)
    (261/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065213116 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063300038 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06578377 seconds)
    (264/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.145119327 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073567975 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06445291 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146574682 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071869203 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083660761 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152466533 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079585247 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065218594 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090050522 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065066665 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072995506 seconds)
    (276/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065529583 seconds)
    (277/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066003009 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066801427 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072289872 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06421141 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064702599 seconds)
    (282/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064729149 seconds)
    (283/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063805937 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072448726 seconds)
    (285/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077266333 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064540808 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084241751 seconds)
    (288/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065134136 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065778454 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076291018 seconds)
    (291/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065882134 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062976798 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064554486 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.063790364 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072159259 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.142924043 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064765317 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072242178 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064742104 seconds)
    (300/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064056949 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089540348 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076599202 seconds)
    (303/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067058903 seconds)
    (304/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065282412 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064147434 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064665619 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065051073 seconds)
    (308/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065152811 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065165579 seconds)
  done (took 32.809092354 seconds)
done (took 34.304013771 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085068714 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0895457 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073822185 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084295892 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081077021 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099537063 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073400145 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077782209 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080296752 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078405521 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078012179 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071940629 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07506218 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07465142 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072146776 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087515296 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080127446 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073098218 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073841376 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064591004 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074074585 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065262043 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064062395 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071767057 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076875483 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071828808 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074332208 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07429388 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065187007 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065212192 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070829188 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074056209 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064589068 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076409627 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07352269 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073082893 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077073446 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077691054 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064675046 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06534088 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075701921 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064904606 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073410942 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071699032 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070185436 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072836372 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073399999 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076177811 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086718173 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069591555 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07637005 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076192606 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076018536 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070558971 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070621708 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073331702 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071807727 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087055166 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074008039 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069017666 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075143448 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074326002 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072270247 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073378542 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073441096 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077011081 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076625034 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072197946 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075825776 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072618028 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065116335 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072716055 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070336665 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064945286 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076476406 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079264934 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063676887 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069454652 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073060474 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073267514 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064112302 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068888734 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063747157 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069699002 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068923427 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071377784 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070233113 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07280643 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063963303 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073800213 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072502655 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072998449 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064389287 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076767278 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064633409 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071622905 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065545814 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065345192 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064363834 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072458482 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066794248 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071633364 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075512544 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06516556 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070109639 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078015316 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064847224 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072705748 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063745569 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06415749 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075469953 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075648892 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065159623 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06924738 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063586699 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070743354 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064165249 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064450157 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064780592 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065252025 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069236574 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065022695 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069607748 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070781034 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076422094 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064539351 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070126481 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069313422 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064682722 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072155974 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.0659088 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065453358 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063647288 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077952459 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068928872 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064745227 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071666684 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070338571 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073837934 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063988281 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072844846 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070800027 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068712078 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071037683 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06308402 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075540186 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068774907 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068850975 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.205291669 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06575273 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064652017 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065455276 seconds)
done (took 12.638457856 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066618951 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103668963 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072175453 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080786579 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077105386 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066285431 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069024758 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08116457 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068824166 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084551523 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092919986 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086730146 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.09160707 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06432233 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065574817 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066476156 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064472825 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072878788 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079456455 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088294137 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093606657 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065593719 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074049009 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081533214 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076019 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081168991 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066647866 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066254635 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068753425 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082014263 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091507694 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066072917 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067181005 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078379872 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079200229 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072359172 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066082345 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069392308 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066080928 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065442268 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067667685 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079691642 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069061392 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069318558 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066206131 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066841516 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065719808 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070736145 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078558595 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068620434 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072986274 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076806488 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066823152 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065714 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063332923 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06906288 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06544328 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066107994 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065911665 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065337394 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065765126 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068047741 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.066655945 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066491526 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068847963 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067886194 seconds)
  done (took 6.35000481 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083499341 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093842851 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081899396 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082891562 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065479503 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067126821 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066664644 seconds)
  done (took 2.135940703 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066885744 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07799112 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081422876 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081610447 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.074130852 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083685071 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066580538 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096611252 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065079292 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078345982 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110726855 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08199139 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069197001 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07766152 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066244706 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072739888 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066177323 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074520205 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073214902 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081652352 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069946892 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095051734 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079820595 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066069476 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08530896 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.070105969 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065040959 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06651895 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067641552 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066965607 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066714931 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104565974 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068741874 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077602555 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067331774 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.101440594 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.07104321 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069394825 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067739095 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074442129 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070740577 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066972285 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065022392 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06709625 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067759075 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069697822 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064740241 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067031634 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066488778 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076844319 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065112665 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069795331 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069094283 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07075685 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072054453 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070071649 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074617009 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06741344 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07699437 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.07353354 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066618829 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073573874 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073358139 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070442643 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07279628 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069917173 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.06899424 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070196991 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066648251 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068164288 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067355366 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073019444 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065302319 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067613375 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069508078 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067865273 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069458418 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082269115 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082579681 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078476445 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067888554 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067320738 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069398691 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082151501 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070638441 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066901625 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069255581 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065385053 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070525997 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067080903 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072544967 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06695826 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073874242 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068341113 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070045349 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073614305 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065375777 seconds)
  done (took 8.630350206 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068385131 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066734169 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067858229 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067965126 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067558298 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067558104 seconds)
  done (took 2.031949257 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087301202 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066486793 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081009483 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06652396 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101767634 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072933822 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072779959 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073654567 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079608435 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079064344 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072486386 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074668423 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072682276 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067844475 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072834537 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067344892 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072241964 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069712465 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07875894 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068049664 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079002722 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067670546 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067948031 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077814369 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068835265 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067179559 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067387286 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078372774 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078559898 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07336955 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067428078 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068789776 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074113838 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076220819 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072348483 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074111601 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066137166 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07145422 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067990539 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068725177 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074473772 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068078313 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068397754 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071146519 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073206601 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074224237 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072052871 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069684759 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071956058 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071042603 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071478754 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066811625 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069063728 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071345208 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07449288 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07336588 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071104409 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07171993 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067645285 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073909063 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065714234 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068630617 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072890735 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068903604 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070498563 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071497223 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074494613 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067883659 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067790817 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066266166 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071234196 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066349333 seconds)
  done (took 6.781678594 seconds)
done (took 27.506670848 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544032434 seconds)
  done (took 2.118986185 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.573334357 seconds)
  done (took 2.184548827 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.734879832 seconds)
  done (took 8.346054758 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.286913483 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.313277702 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.738184877 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130368432 seconds)
  done (took 3.108820628 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.743056889 seconds)
  done (took 2.364123183 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233245367 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224640729 seconds)
  done (took 2.086687115 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.340255835 seconds)
  done (took 1.952282484 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.128788659 seconds)
  done (took 2.73907109 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.220290513 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157571025 seconds)
  done (took 1.999901331 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.488106224 seconds)
  done (took 2.105000112 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.267207641 seconds)
  done (took 5.886800281 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228620446 seconds)
  done (took 1.885066605 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232632798 seconds)
  done (took 1.854270954 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.770131142 seconds)
  done (took 3.385077541 seconds)
done (took 43.636346269 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08217835 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084853882 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085791255 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081151466 seconds)
  done (took 1.929046833 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072851467 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.069026976 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072133 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072229538 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071415946 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072108994 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072051905 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069049544 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070549428 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069110659 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067343383 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068525055 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071458135 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068415369 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07124971 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072125888 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068601291 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069009725 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071468969 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068796521 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071087332 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.06885497 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067533595 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069156636 seconds)
  done (took 3.303226654 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077662374 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071604086 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074626447 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070438648 seconds)
  done (took 1.920108946 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.075402997 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082483557 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083970378 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089004095 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075502019 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.07611192 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.0815709 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082662291 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064386599 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084578944 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067844831 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067057856 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06759943 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085339341 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081586403 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061636104 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063034977 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075552656 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074455989 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077153071 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067854181 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065011997 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075805732 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.075046982 seconds)
  done (took 3.426998958 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077875869 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06514225 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076377034 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089298685 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091875585 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06471996 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077621228 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091494588 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122339415 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064481446 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070565642 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064629735 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102822545 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064770954 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078985635 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105374849 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108255364 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069049356 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096791832 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064932532 seconds)
  done (took 3.281201126 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075518185 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068931997 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070555616 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065209987 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076637602 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072201967 seconds)
  done (took 2.06848238 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068033526 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067425653 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067008419 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066225438 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071518145 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066246878 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065552463 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067010327 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066745325 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066169298 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066308777 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065502817 seconds)
  done (took 2.436628186 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.164487337 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068195866 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069214676 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065391815 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0702138 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066033891 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081027436 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070380132 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083048516 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066453344 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065970964 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067960748 seconds)
  done (took 2.57219773 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102036073 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099349343 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143141438 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114968475 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091864143 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.093112724 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.157162167 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.13422801 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114775504 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069440465 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086888799 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098410135 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097628868 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131502526 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110751735 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071849802 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.110012964 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079972356 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112143842 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120023821 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114090448 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120099549 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091720201 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096916109 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104631021 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115746949 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.07099645 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069914455 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146985191 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098669023 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.091460671 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097430848 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107211524 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068251134 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085424238 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.104517563 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081512311 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113532712 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08609352 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097134295 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079767777 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.129452034 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103451931 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101178603 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129134621 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091351143 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108658488 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.1043379 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081362624 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116583881 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096683137 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089481452 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078922824 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.157013701 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088109767 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.108796704 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109773663 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081375184 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086828179 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099869926 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126918826 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.103457841 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11125315 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.254632522 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.09039861 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090232142 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129340241 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084995368 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099244423 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128582552 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090999393 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075362639 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.095041447 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068661815 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095986677 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105774253 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091375314 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110489498 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076194327 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126272064 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108129314 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072400652 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11642785 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098093917 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153374456 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094038963 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099022723 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090036763 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.148026733 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084069908 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079852914 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097503779 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126656903 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093223594 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094895602 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126573869 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094994784 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085999997 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073713003 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087620159 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09959111 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105865161 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099859706 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087429207 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085947981 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094931443 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07351863 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079582683 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.099790349 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083733319 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122728193 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107559135 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121698169 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078174681 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103236944 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.095381117 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125994106 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115810741 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083068816 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106481917 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138662714 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.112130926 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083938854 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099154139 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109328958 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106128876 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094750035 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135682982 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114492466 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087355024 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091801693 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09283762 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.26208798 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154365004 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088906505 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103658635 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136964905 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.113671526 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090112545 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083333178 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095092508 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104548146 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139393324 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09498256 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.07021506 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091899161 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130027199 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076179667 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098456858 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.092890863 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082955161 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080482957 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067781351 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099970081 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135051243 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112552255 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097903422 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.105770487 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069192457 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097631553 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103573826 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13990268 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114805124 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096757218 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.097529001 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103118321 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078748811 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131242407 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.132266204 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089837683 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089120238 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120842137 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.094810313 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102569757 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112163345 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101546012 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099505022 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139651005 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118629801 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.122354221 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103631579 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121784209 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081091617 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114656821 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073633583 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102617277 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075527886 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104230393 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078276872 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109674629 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07774075 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09706307 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.068892005 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072437881 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107704232 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.243160872 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086045019 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.13478368 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.129335198 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081128291 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100716678 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099046693 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101122379 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10846152 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.089146019 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090065546 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077647231 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079199506 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097230885 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092450283 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105803595 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077952342 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075012085 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13691531 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102540046 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090106619 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09433899 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.119662184 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087791417 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086579201 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102684864 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137440479 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.116708834 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079818242 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090255225 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068806273 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083679833 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.07444593 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107630223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074015641 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109677422 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068438616 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12774701 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085413442 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100393513 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096056343 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126834669 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089384377 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12624209 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08586408 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105975437 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092903135 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093938942 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107989054 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.095808299 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103707764 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10900502 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09192599 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088642802 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119845436 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104608727 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115209476 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104086313 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133423791 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110502309 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074203896 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102388034 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098246461 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144085293 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098610355 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088499451 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093824484 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101764644 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08069193 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.293351645 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086675027 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.086785901 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112212387 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088449695 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096761425 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076069004 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099579739 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094226995 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112840916 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.098842492 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.093025411 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10895749 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109343706 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085917854 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086088808 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122575882 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127854893 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100532834 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092942254 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087852728 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097312127 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093558282 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.10819388 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079623192 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075437659 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.068360323 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072005874 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.116052647 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106927264 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0969397 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098316681 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100982217 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071761689 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086821683 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08916495 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.0818548 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089110846 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113674874 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101970848 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127215266 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099946236 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084611158 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139511397 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129660995 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084725971 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090509154 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100199511 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073826542 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145772539 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117057304 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076858441 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084746916 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076874541 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082888836 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071233251 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102397405 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102091602 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074984978 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101745082 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096348645 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122307868 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095572181 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075396422 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078457552 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073753269 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07439755 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.1011032 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076682106 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07599469 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128198824 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102007605 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105570139 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081912201 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073544373 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.284795036 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.070342533 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131568255 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081976686 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108850119 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.080571617 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07857415 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088859805 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105441141 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104944075 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112047167 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070280199 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102106637 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15356523 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074695212 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074882223 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074601614 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109967914 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086661248 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140972709 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08878943 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09173875 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076887101 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126704915 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102280771 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082319647 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126710554 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079394369 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070739856 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084767004 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.110613648 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071978985 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07432016 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112646301 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.509941836 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089708373 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07565339 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088247533 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126333688 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082331293 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107307766 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116898391 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105530642 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.183892701 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073304974 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089571421 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102445962 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096777947 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090552318 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078625316 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08601047 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085967582 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083514371 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105032465 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079342039 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08922979 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078451363 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.101756505 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127647422 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084603879 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099876434 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086689312 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08921884 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098291112 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109829511 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10425927 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086292889 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08644336 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106767365 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081500565 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076362411 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.25325223 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076687731 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078017323 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116434748 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083661249 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093122145 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102979262 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.088670872 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112389138 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116203328 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110925795 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096823224 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078445237 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085806758 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086791147 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073530597 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078256742 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075218978 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070111434 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10652418 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084455957 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081033783 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099557972 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10851043 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098776588 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105903507 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089365597 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096493417 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099591575 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.126348512 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143058423 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097085597 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121507311 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130180103 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075520501 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074869815 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079690367 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129974294 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080647448 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090860884 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.237264637 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076909268 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080413259 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090124491 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10657755 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082063945 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079521564 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097541162 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109705726 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084104884 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079806439 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093614096 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.107491006 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127373743 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08922778 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074411537 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106727793 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101562657 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121479798 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.07236445 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079977989 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126618742 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086771153 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103038574 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079437647 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122337469 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130543475 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073364158 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088146234 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072785022 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08659072 seconds)
  done (took 50.57693339 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.148495988 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.142097012 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.082385344 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.097846831 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185826042 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.195563685 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.118145738 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094894843 seconds)
  done (took 2.850328326 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067697394 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083244666 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100911207 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082617836 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066284023 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067772359 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.199791472 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080757053 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065494714 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105373689 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074425743 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068091913 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.357853795 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065950781 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066965202 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073922577 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067116145 seconds)
  done (took 3.43556363 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370383888 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619871421 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.320989883 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07461882 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.001891758 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088608195 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.251631503 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138211808 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081618135 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551986612 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366270562 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131428384 seconds)
  done (took 18.747507905 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075304161 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074879053 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077737802 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077962005 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074129799 seconds)
  done (took 2.125475443 seconds)
done (took 100.314993844 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081940568 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.174157384 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066622808 seconds)
  done (took 2.021390243 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081654063 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080465627 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080185077 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078155421 seconds)
  done (took 2.073576726 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074310493 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075780225 seconds)
  done (took 1.89596865 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231026514 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173612367 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089771218 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081824195 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080917721 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079602952 seconds)
  done (took 1.99848867 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071196629 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071150454 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070905058 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.072174131 seconds)
  done (took 2.030058506 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067336711 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065615451 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067993617 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070221939 seconds)
  done (took 2.017777305 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082519284 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077563454 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077597126 seconds)
  done (took 1.985183039 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107867902 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095975812 seconds)
  done (took 1.949973484 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079679195 seconds)
  done (took 1.829283517 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089194412 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095714074 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138680116 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105900579 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138527952 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123897484 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076137999 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076526637 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072411179 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.07144046 seconds)
  done (took 2.73489952 seconds)
done (took 22.855653923 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077834074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366076966 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359732213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085477319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668725131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356222322 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.011116981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090607604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098090269 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067446355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08376156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646906525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007094904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329365922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.991783317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328114054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650154543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067679944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067349866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067696939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.999011206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067067717 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067909092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067992958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649442669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372924081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068239631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324297964 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067567311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069667655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355053092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068559326 seconds)
  done (took 16.323211792 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069800765 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121474907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071967694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083467011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069841883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069574438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070895635 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068285154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108860972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067887179 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084548234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067808946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071304708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069046932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087916294 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068646625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07017441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069122224 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068628238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06928007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086426819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067622809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069236446 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071490895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069090686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081705874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069510555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068440971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068653037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070725957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071799086 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070019739 seconds)
  done (took 4.156776528 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122620085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125242178 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072825986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107868721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116959982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069617446 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150146721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09021432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068051134 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084434 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067931412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103709225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069807987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088696963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068638975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070587477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069223432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068339669 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069479049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087161059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068060183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069333205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068923146 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069050918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083522351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06939951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068924979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068746831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071239052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072338589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069855361 seconds)
  done (took 4.432403948 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06927907 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071137743 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078935228 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079940534 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066125229 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069026209 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069622333 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066691859 seconds)
  done (took 2.340933784 seconds)
done (took 29.015333199 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078680995 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067582739 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071015755 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087649077 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073876189 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069615539 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064535609 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074291555 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07151212 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070626766 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072214521 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067296275 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070056368 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064353836 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071451226 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06613029 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072931723 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070273272 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.071480945 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071884562 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0686115 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072419954 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075173063 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.071443659 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.071135799 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07083443 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075126519 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072342663 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067053784 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069782929 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067913895 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079645982 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072784539 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072790064 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066286621 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06646232 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070774413 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068989101 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07254359 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075169323 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068531253 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075473534 seconds)
  done (took 4.736610112 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087195201 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093267235 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086052254 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081696809 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10388165 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081969203 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089845965 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0780147 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077010994 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088164883 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073303973 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078027679 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079250526 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072018262 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07799955 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074572233 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079294509 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073422047 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078669356 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078618108 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089869245 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071179535 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078752059 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079248021 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07366881 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079624916 seconds)
  done (took 3.882804857 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072339449 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08859126 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091853834 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140167945 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108704511 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082237543 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082178544 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102964534 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100409573 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06815662 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072054664 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093870679 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096276198 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075029251 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107056725 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085973997 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079450746 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069560425 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074928323 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102947515 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09061789 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087495481 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.1010882 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088258028 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067288534 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077041339 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07500925 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083002052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075198572 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079443304 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071142572 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07111981 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067925543 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078799403 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07145885 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065340835 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088476762 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07965597 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083459671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105116865 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077139855 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068323037 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096769294 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134363176 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066815327 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069906454 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071051288 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079658241 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068594191 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096919742 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085205105 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067165106 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085673121 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068508687 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068516854 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082631401 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068855682 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069205574 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079038363 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073649178 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087629882 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072167778 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086726676 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067207434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078230377 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068554555 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068476419 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065942942 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102934608 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074731386 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118323802 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068110895 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065198604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079316752 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078103922 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07391588 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067147718 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085263429 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078939572 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070728587 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078891569 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070097334 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070490181 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102721376 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066118388 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065794624 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065476781 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069569719 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070300559 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067742385 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079861815 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066652115 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070117132 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081679578 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067246095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067767316 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069140319 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068232545 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066864393 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076933948 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070333655 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068594712 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079107421 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068273334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070778657 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081614416 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076109133 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066782145 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068431631 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069387483 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068872374 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071622265 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070627372 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069163662 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073257147 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07389549 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072774021 seconds)
  done (took 10.978514964 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161013425 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151857372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068622476 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14602656 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075539878 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071545177 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147756637 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086804829 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068189505 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068973537 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067492887 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095013934 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090266219 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102624767 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071663569 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068394523 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09332528 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.100223433 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149291419 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144723338 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091445693 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075590275 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070694483 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069765035 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06916996 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077222083 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083701361 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075793889 seconds)
  done (took 4.459243242 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075522189 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111016066 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072045438 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092073708 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087000713 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068754787 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070626322 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069004853 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084570953 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074657474 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067945914 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071923991 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071486289 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070703937 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068722103 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074047674 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07424704 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066737521 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071941349 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072416283 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07795996 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092539586 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072104928 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067755221 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070084661 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067453818 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07435582 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.07729691 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067047354 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098111553 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064973813 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072069817 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08177341 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068724684 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067335097 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068085154 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068343789 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0681468 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068040985 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066283292 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066119142 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072053675 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066466733 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073120815 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081682829 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075096587 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068847763 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070283065 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070770645 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064414516 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070532874 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070583606 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070639871 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076214254 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071565676 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070111582 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069276636 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096510105 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073559839 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067103582 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067182626 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069280058 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068949545 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075610359 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084385656 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068643225 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065874247 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067542991 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07248163 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081679653 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066987852 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07280132 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064869571 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067958468 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069911842 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069973597 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068640399 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065894891 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067654017 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06758245 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067586482 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067286935 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0672928 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070926943 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065648731 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06603245 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068227893 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068821094 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073618995 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067041293 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070305915 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069025456 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06637351 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070238339 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072838191 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070552667 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087551062 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076330933 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067744616 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065850935 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081842964 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069129119 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06707967 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073743405 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072253877 seconds)
  done (took 9.395099388 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091294452 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069401075 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087776329 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094627661 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078019879 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073406975 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081359523 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068714949 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083903824 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067044125 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077157897 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066016584 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080249615 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076331458 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069509216 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078085048 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070708674 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088066274 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08320589 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067014315 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076826138 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080478724 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.0804188 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085222139 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084842274 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085920275 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080157298 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07059694 seconds)
  done (took 4.019173906 seconds)
done (took 39.23321921 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.84208686 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.008181906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.83917456 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.084288217 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.014781729 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.850715718 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.069086629 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.836652406 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.983841349 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.864522703 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.14916863 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.251219572 seconds)
done (took 67.629463789 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.938834352 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.995874939 seconds)
    (2/2) benchmarking "String"...
    done (took 2.068070665 seconds)
  done (took 5.868546519 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.112895978 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.475914636 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.118972976 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.837185401 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.844068123 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.351385723 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.656283636 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.33278328 seconds)
  done (took 31.391223449 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.0023613 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.066160696 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.578804865 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.614876243 seconds)
  done (took 16.078314474 seconds)
done (took 65.256556397 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.875951523 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.838624991 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.913327441 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.877190785 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.845434043 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.840632684 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.845413545 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.840626063 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.864201371 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.849544965 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.840037588 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.843577989 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.840908692 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.902956433 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.488900369 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.888218171 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.848329094 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.848609688 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.856212925 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.849001472 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.844834443 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.037606518 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.339235695 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.038918654 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.466515703 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.89850658 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.921331366 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.288729517 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.83993767 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.847928582 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.884717344 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.353897855 seconds)
  done (took 206.334723248 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.840011928 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.935978435 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.006848331 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.871673866 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.33901726 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.020319438 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.932797746 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.378105411 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.843899372 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.865120872 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.067245866 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.843472204 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.098937374 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.790293329 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.877431464 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.935373681 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.112288991 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.107406506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.882551712 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.990055037 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.858902933 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.026520448 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.975171141 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.052693205 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.843607163 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.918201297 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.866620634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.857987657 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.031115407 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.072629095 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.871641258 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.884842148 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.01083874 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.71092928 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.868209689 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.866134819 seconds)
  done (took 173.232196557 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.033542665 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.849386985 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.841083469 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.897342857 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.964672291 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.84352176 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.513010367 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.855460015 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.914707355 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.845534485 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.841508071 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.842146584 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.842047673 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.852638667 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.927420337 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.844952503 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.857383638 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.844644844 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.867434214 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.843583921 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.842284673 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.843320364 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.843118375 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.842395113 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.842813144 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.842703682 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.471771902 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.087300015 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.84457668 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.844660663 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.341712099 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.856306154 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.434556906 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.847948647 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.935219601 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.901284052 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.947419379 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.8429957 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.061034541 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.923040558 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.843651789 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.843713487 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.90756127 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.844403102 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.856666128 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.8471287 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.843617927 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.846454456 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.848618428 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.908541491 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.090601692 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.846193838 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.967132463 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.329052915 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.843293336 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.843902346 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.844467962 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.425349991 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.845451581 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.845451781 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.850584842 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.851236681 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.844250484 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.845236154 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.229046887 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.915845881 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.443905949 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.463037688 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.845227521 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.970633336 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.909541017 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.844160001 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.845024624 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.845841043 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.846782104 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.845137788 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.847500619 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.968039475 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.854236726 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.95738366 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.926994282 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.969656025 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.84823337 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.859934842 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.674686643 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.916674654 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.885060285 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.665045041 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.845956696 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.216727955 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.611020781 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.846713762 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.845693086 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.858746712 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.846694033 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.846507078 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.845702037 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.846658008 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.925968587 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.847244342 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.84574892 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.56732037 seconds)
    (102/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.971526619 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.417497902 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.848800501 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.846807443 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.85574004 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.9317311 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.969975095 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849190618 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.913526045 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.852904189 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.849375728 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.941639273 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.847438531 seconds)
  done (took 409.413927163 seconds)
done (took 792.848551113 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.546716093 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.433321848 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.572830742 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.455918533 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.421055652 seconds)
  done (took 14.21260987 seconds)
done (took 15.996084032 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.8617052 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.852296516 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.902814589 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.930245907 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.863305733 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.864503924 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.928482648 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.867060609 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.897532091 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.903189313 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.932137771 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.930794572 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.871306166 seconds)
  done (took 26.388524774 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.856631145 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.001281072 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.067838081 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.886742544 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.857519502 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.079938333 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.918420208 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.989221304 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.989707946 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.076776581 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.087714461 seconds)
  done (took 23.597603885 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.857506333 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.995523731 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.070046388 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.890076106 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.85785515 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.071680691 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.921887409 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.992676662 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.995956611 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.07766737 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.087345028 seconds)
  done (took 23.609556515 seconds)
done (took 75.377255979 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.852667568 seconds)
  done (took 3.637227866 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.876483919 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.050962945 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.852978243 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.856549918 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.853173888 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.85264419 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.856797099 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.852717981 seconds)
  done (took 16.83917585 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.852710241 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.85461086 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.852637871 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.852792363 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.852708241 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.853106411 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.852901773 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.853538817 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.853293841 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.853872709 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.853186086 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.853535704 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.854421777 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.854092943 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.85426919 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.852998918 seconds)
  done (took 31.441746903 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.855370711 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.854171577 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.85415981 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.855101799 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.854134738 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.854087086 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.855361049 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.853547064 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.853974895 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.85399881 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.853060477 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.854599005 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.854559191 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.855010066 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.853442431 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.854502605 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.854011392 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.85497243 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.859591109 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.854801521 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.855300604 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.856284816 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.85551052 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.856184297 seconds)
  done (took 46.303110822 seconds)
done (took 100.013065318 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.62704698 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.593237543 seconds)
  done (took 10.007827802 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.857195678 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.85575569 seconds)
  done (took 5.503519824 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.856365177 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.856284838 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.857317428 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.857668149 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.855606731 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.857141592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.855403189 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.858019745 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.856725137 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.857614903 seconds)
  done (took 20.357756576 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.856582813 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.857047418 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.856487966 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.855984753 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.855991606 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.857130151 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.85686953 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.857057914 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.85684219 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.857055677 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.856590022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.85704131 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.85647358 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.857845829 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.857118994 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.857977137 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.85705855 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.857385566 seconds)
  done (took 35.213664082 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.856127299 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.857873077 seconds)
  done (took 5.503646128 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.85613938 seconds)
    (2/7) benchmarking "second"...
    done (took 1.85815715 seconds)
    (3/7) benchmarking "month"...
    done (took 1.857954433 seconds)
    (4/7) benchmarking "year"...
    done (took 1.857531835 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.85921167 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.858441655 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.856547473 seconds)
  done (took 14.794490679 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.859419725 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.011322543 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.059712249 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.438463965 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.861827469 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.860609838 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.735547624 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.859376659 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.863862583 seconds)
  done (took 20.34178826 seconds)
done (took 113.510800988 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.605105831 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.86100727 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.090783735 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.913296088 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.877109506 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.153237733 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.860457743 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.458384902 seconds)
done (took 42.610030925 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.9493604 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.856621776 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.886212573 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.885878912 seconds)
  done (took 22.419175369 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.858110389 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.262741054 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.884102783 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.821182116 seconds)
  done (took 22.919063574 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.239178 seconds)
    (2/2) benchmarking "read"...
    done (took 2.20356398 seconds)
  done (took 6.238880411 seconds)
done (took 60.318885107 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858662939 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.860769616 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.86051455 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.859458369 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.859905838 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.859866635 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.860172257 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.85949119 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.858973158 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.860031128 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.859847917 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.859434968 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.861013004 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861602417 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.859629785 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859669977 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860045905 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86061668 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.860232853 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85975524 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860942003 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859319083 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.86099148 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.861563803 seconds)
  done (took 46.434758154 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.860572122 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.861570157 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.859940858 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.86118508 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.861511535 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.860450608 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.860875698 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.860303225 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.86127076 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.862395269 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.861013076 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.860885865 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.861593498 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.86140385 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860572425 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.862229852 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.863336074 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862840942 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861415128 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.862553045 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.861883766 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863318813 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.862763567 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863027663 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.862347027 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.863800715 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.86218907 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.862695454 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862422794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.863272115 seconds)
  done (took 57.649674538 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.861964326 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.863384113 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.86175436 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.862206513 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.862361997 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.863407634 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.863483034 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.862567534 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.862434737 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.862744258 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.863478445 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.863244574 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.863812742 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.863634378 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.863561937 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.863268254 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.865318898 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.863107975 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.863499015 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.863119691 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.863469023 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.864568585 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.864150949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.863429878 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.863673708 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.864028908 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.864700823 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.8640891 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.86399608 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.864028152 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.864074587 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.864474978 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.863926223 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.865422921 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.864531988 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.864751067 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.863957775 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.864067073 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.864242863 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.864170029 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.863598736 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.865064347 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.864391848 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.866209906 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.864662798 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.865277745 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.866608948 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.864868473 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.865552496 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.864593743 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.866121488 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.86597963 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.865050657 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.866778041 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.864933765 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.864074418 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.865073769 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.86564994 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.866444106 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.865461593 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.864581649 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.865969388 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.865430308 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.867845106 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.866616614 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.866246547 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.865937386 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.866350991 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.865678695 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.86594226 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.866583026 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.866557541 seconds)
  done (took 136.043250017 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.866292012 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.866737133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.865568529 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.86685802 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865569891 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.86565363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.866687229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866339696 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867538202 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.867602578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86780037 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.866720317 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866500758 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.866578363 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867552997 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.866459961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.86687352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.867404816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.868126602 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.867705453 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.868167231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.868569679 seconds)
  done (took 42.871819458 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.868674006 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.868995827 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.86714774 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.868665146 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.867923501 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.869112675 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.8696262 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.868766481 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867147877 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868139321 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868323151 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868155392 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.869910597 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869713457 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868375136 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.869140652 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868896154 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.868893409 seconds)
  done (took 35.437222171 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.868161883 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.867955548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.868492095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.868598858 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.86874379 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.867755658 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.868801824 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.869917466 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.869163583 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.86910198 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.868921919 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868770197 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.869978535 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86953767 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869991792 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.869557916 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.869574239 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868346884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86972234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.869100007 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.869309877 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.869568659 seconds)
  done (took 42.920222612 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.869400071 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.870117633 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.871415021 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.870898218 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.870342386 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.87037477 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.86990841 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.870073296 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.870449699 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.871003156 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869901237 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.870795314 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.870065849 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.870434187 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.869891684 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870014313 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.870639478 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.871768189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870476944 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.871145296 seconds)
  done (took 39.211460665 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.870260899 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871111461 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871086163 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871191598 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871389022 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.872328723 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871262968 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.871063094 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.87261157 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87100342 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.87272147 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.872096466 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872339644 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8728207 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871918693 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871462092 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871282586 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.87208779 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.871289152 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872361555 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.872304902 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.872468688 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.871389783 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.871469687 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.872087687 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.872243826 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.872698361 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.872341357 seconds)
  done (took 54.215086694 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.872997102 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.873517526 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.873253666 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.871727735 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.872328359 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.872493871 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.872287147 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.873628957 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.87284147 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.871712395 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.873698412 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.872208872 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.872304657 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.874086628 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.873445762 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.873202289 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872964632 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.873758502 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87282621 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872926962 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.873655679 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874080753 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.872948562 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.873647755 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.873996589 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.874132335 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.874433119 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.873440487 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874406331 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.874683166 seconds)
  done (took 58.003971557 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.894542637 seconds)
    (2/2) benchmarking "in"...
    done (took 1.894901439 seconds)
  done (took 5.596090235 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.874395472 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.873965209 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.873482333 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.873843035 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.874716242 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.87488125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.874860361 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.873940586 seconds)
  done (took 16.800344155 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.875659768 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.878033834 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.874826461 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.875472497 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.874922479 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.883334719 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.874858104 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.875764319 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.87735062 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.876157535 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.879719475 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.878165781 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.882296837 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.879730423 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.875235194 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.875865949 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.876423651 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.878792057 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.877083802 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.875518689 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.878786239 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.875647022 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.875316181 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.875352275 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.876024632 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.879434635 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.885909799 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.878460919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.876344252 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.877987259 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.884510692 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.876820757 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.87582797 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.877255839 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.876358712 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.876532094 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.884849665 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.875769043 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.876142316 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.876692865 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.878860563 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.8798416 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.880745928 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.884989102 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.876790631 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.877763639 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.876881203 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.877896141 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.877634716 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.88161941 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.886044231 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.878080209 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.879265248 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.878210624 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.882335526 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.877585554 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.877254822 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.880874534 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.885070655 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.885438843 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.881050166 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.899407184 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.887254648 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.878903597 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.87878203 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888067091 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.90120154 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.87926432 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.880433765 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.878258742 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.887439949 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.877937602 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.878263863 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.878711696 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.892860975 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.887407468 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.879227963 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.878567256 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.879980035 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.87978495 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.880800198 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.881012381 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.880425863 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.87948495 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.889457459 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.903761727 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.879749543 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.880331717 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.882084463 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.881217982 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.884353662 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.882254242 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.880951714 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.880480611 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.881197649 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.883502632 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.878977639 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.879812266 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.880165219 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.889922831 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.880340343 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.879973367 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.883068784 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.888062915 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.880276828 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.879957359 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879910211 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.880808969 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.889212794 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.880160343 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.880340801 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.880233245 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.881316791 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.885115553 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.881644617 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883410212 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.888679551 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.889947187 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.882194382 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.886517418 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.886489278 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.884389801 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.891053342 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.905124064 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.881294536 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.886725669 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.886787384 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.892249447 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.886070889 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.883215819 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.88592976 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.882960835 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.881893229 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.884851437 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.882661205 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.882122946 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.881804423 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.883643131 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.883071538 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.88386072 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.886795169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.884776311 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.886334407 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.883643311 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.886218129 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.882466945 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.887036205 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.891287502 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.883301592 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.883433724 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.883127221 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.886825242 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.884973556 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.883763099 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.8829284 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.883010176 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.882645172 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.88519571 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.885603549 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.883082779 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.88228089 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.884393566 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.889084846 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.882792702 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.884437119 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.884657496 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883572314 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.883545834 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884466068 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.884662911 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.885770545 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.883944669 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.889859632 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.885074766 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.885311379 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.884375629 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.884846582 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.884852912 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.888114385 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.896125468 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.889221759 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.894536121 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.885136065 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.892783303 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.885841347 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.886112717 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.886256653 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.885371526 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.885992449 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.884067172 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.88547298 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.888949835 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.908021571 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.89617001 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.88844935 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.88734853 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.890815046 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.890817941 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.892003776 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.887272 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.886955663 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.887811712 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.885826432 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.887515116 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.887763708 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.890019837 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.887896604 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.887539244 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.891638427 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.886401774 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.886458195 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.889256197 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.886498653 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.889816336 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.888059586 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.885869499 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.886207338 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.886739907 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.895342211 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.889538547 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.886939584 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.887700947 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.89083398 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.887756285 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.887383072 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.889332624 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.891041708 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.887899063 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.888566196 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.896475859 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.888004196 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.887780749 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.888325297 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.887334165 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.89139931 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.887190898 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.893125298 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.895057188 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.892060874 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.887726573 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.895200693 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.889657198 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.89117742 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.889153578 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.890057787 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.889176404 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.891167367 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.888920099 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.888151772 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.896938731 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.890248275 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.89002557 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.890596772 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.892561856 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.89032351 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.890932578 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.8895416 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.892100328 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.89677546 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.895071755 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.88998072 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.893676095 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.892081677 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.89010499 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.892421157 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.890927275 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.903342273 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.899507681 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.889254128 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.890037112 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.88938219 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.893190703 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.890464269 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.888757759 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.89849213 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.891120012 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.891861247 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.893809777 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.888819685 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.890531008 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.900466339 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.893067903 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.893085844 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.892962106 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.892491942 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.892271262 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.890494351 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.893907614 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.891298889 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.892586159 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.89437693 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.891402593 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.892581067 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.890847353 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.902669075 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.891910397 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.893045207 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.900770925 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.893940504 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.891087822 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.89271412 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.891741949 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.892590673 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.892067234 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.892373958 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.893081987 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.891459747 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.896651836 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.903525056 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.895832383 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.89825569 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.894761417 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.90373081 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.892270404 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.891546786 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.89358495 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.896710264 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.899786734 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.89156432 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.891947029 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.903563702 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.89509569 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.893988463 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.895716631 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.892052029 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.892720453 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.892702549 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.894362536 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.898709795 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.897070839 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.892776399 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.893027123 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.893664449 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.893461043 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.896657267 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.895380879 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.895187597 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.894655821 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.893361918 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.893000708 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.893040324 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.894182313 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.8930823 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.894257906 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.894091248 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.902609143 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.894493047 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.896128424 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.899486139 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.894062132 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.902647577 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.894702043 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.893599374 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.895096705 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.895379321 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.898471652 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.895741994 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.895766744 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.894889311 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.895281615 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.896429886 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.906889186 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.902982432 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.898584508 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.897828952 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.895048787 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.895768424 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.904976125 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.91711199 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.894078237 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.897745906 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.900552471 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.903721422 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.897609483 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.900384141 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.899829391 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.904650511 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.896744826 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.895384725 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.900232316 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.91003214 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.89666476 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.895765643 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.896357152 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.900415884 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.898337491 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.895343959 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.8972947 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.900530649 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.898250525 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.909819186 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.897166257 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.897769981 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.896309577 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.896671891 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.896604904 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.898210939 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.89982213 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.899183712 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.89723568 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.896528942 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.900636747 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.902041389 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.897550916 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.899861692 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.907172977 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.897927701 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.898793962 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.898761021 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.89720815 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.900387456 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.897256286 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.898393351 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.901421034 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.897908072 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.898493994 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.902563034 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.908029013 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.898852076 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.897930444 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.898310514 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.902522674 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.897975009 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.898798774 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.899503263 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.907879923 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.901811773 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.909653737 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.909169824 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.898924843 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.900329676 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.907808799 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.907226037 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.89971082 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.89885385 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.898321964 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.905089936 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.902184784 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.901202541 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.900199293 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.900807762 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.905796641 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.899378681 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.901040034 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.898901688 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.900164428 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.904209375 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.902251231 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.904115344 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.900599651 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.900248531 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.900467803 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.900651892 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.901462377 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.904397556 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.899431382 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.900574793 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.903602156 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.904498764 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.905710267 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.900943283 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.901245169 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.903192879 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.900694883 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.900612406 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.901747614 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.901636576 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.900076743 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.905596587 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.908293545 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.900949338 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.902080372 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.903208692 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.905189275 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.899900421 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.9012917 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.902199582 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.903190685 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.911153749 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.901483722 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.901627181 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.903379136 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.90170406 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.908094876 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.903791563 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.907320561 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.901390727 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.902254538 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.902723359 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.906693475 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.911624064 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.906777226 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.907586059 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.909790251 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.9083428 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.905108441 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.902702835 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.902515507 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.903325742 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.904752184 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.90860119 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.904994898 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.907475737 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.903402357 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.905960482 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.904380716 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.907233721 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.904408381 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.903300896 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.907438361 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.913419143 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.914501024 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.903616368 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.907117575 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.904079156 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.908745527 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.915891514 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.904481811 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.903271705 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.903835576 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.904892528 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.906136158 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.911800971 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.913784947 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.908854726 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.905908803 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.911275874 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.92306087 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.907708239 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.914402927 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.937956943 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.907198798 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.905582581 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.90427727 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.906576335 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.904736451 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.90648126 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.904568131 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.914111908 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.904370302 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.905743421 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.915975817 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.905920685 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.905882292 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.905299208 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.906736276 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.912854279 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.905330599 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.913905134 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.906565111 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.905447411 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.906045971 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.908044558 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.90639999 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.906875867 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.906550646 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.90960396 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.906302766 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.905641602 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.917789314 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.906001057 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.906326467 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.920492084 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.918613467 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.907314972 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.907991317 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.908248088 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.911511368 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.909606577 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.908680531 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.91284462 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.915168374 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.912030466 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.916065252 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.909219035 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.907680077 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.909879873 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.907971346 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.906494672 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.921893668 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.919534295 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.908490483 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.907135459 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.914584537 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.910604633 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.917386645 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.915375573 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.907295776 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.908547765 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.908654448 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.908852699 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.909709421 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.910025224 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.91217693 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.916137389 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.908287486 seconds)
  done (took 1130.793450574 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.90907245 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.906928329 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.90859697 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.908455055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.908319168 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910096308 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.9090558 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.910008997 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.909656595 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.907953647 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.907884959 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.910088207 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.91077565 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.911184487 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.908498071 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.909029875 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909572042 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.908530739 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.909384042 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910460993 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.910176275 seconds)
  done (took 41.932198078 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.90909277 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.909847936 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.91018281 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.908275376 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.910691457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.911056976 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.910253142 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911164713 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.910339288 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.909356903 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.910917683 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.911351366 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.910695688 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.910498224 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910893072 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.910300516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.910929835 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.911408449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.912206332 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.912564222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.910457414 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.910441731 seconds)
  done (took 43.874418224 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.911106584 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.910387388 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.913646169 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.911256131 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.910837155 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.910188914 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.911431086 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.914165874 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.911642081 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.91394529 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.919223882 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.919569382 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.911386122 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.9147888 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.911120649 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.912335526 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.0575751 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.912853953 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.912315778 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.910834932 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.91358698 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.919837436 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.911995551 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.911987794 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.912102668 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.911634228 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.912517871 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.911758425 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.913537019 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.916011639 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.917857693 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.912016126 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.913282699 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.914595187 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.912562905 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.913254148 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.91702398 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.912735722 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.914129878 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.913601358 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.922472933 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.936694694 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.912872987 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.913031895 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.922096373 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.913455289 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.914189711 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.916067547 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.92176073 seconds)
  done (took 95.792264245 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.91319455 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.913813281 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.91341694 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.913885764 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.913140013 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.9130672 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.915290035 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.914500583 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.915132724 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.914225838 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.913223604 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.915255505 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.912635029 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.916724868 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.915059329 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.914065413 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.913806125 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.913334375 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.914852075 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.914650632 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.914082716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.914315213 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.913892852 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.914271655 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.915323109 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.915024633 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.914933743 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.914506412 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.914495788 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.915995848 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.917073055 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.914885292 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.916401937 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.914699987 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.915249494 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.915743828 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.915693802 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.915230459 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.915434125 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.915938916 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.915781247 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.915416203 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.914417133 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.914882833 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.916272783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.915237561 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.915189261 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.91691122 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.916187205 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.915671273 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.915567747 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.916299497 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.916597561 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.917351766 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.915420379 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.91637537 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.916546482 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.91651481 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.916676678 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.915997646 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.917734249 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.915996938 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.916752827 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.916007665 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.917458815 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.917712934 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.917657377 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.917499889 seconds)
  done (took 132.088495786 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.916238518 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.916674805 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.917597884 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.9167886 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.917206088 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.917763363 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.919004247 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.917928611 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.918148693 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.917294023 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.919222649 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.918021639 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.917689349 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.918190079 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.92080275 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.91909469 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.918343998 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.919465715 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.917742833 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.918192886 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.919206245 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.918494383 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.919600628 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.918493566 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.919026849 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.91864074 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.919666128 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.920175536 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.919016307 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.919760773 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.919877723 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.917804864 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.918286041 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.920367165 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.919433569 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.918744479 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.919102189 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.918381248 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.919078675 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.918823364 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.919556899 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.919498985 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.91913016 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.918910525 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.917961711 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.918607164 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.91863622 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.920477564 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.921519926 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.920259355 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.919901435 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.918339885 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.918278667 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.920122889 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.919960315 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.920505841 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.920210613 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.920515199 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.919318298 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.922042599 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.92023644 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.920565054 seconds)
  done (took 120.827235459 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.919791445 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.921952268 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.920182057 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.921611994 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.921557208 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.921091307 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.919334944 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.919754012 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.9203996 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.921229104 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.920287395 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.922492867 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.923209033 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921021443 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.920507122 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.922812558 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.921543833 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.921450217 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.92160442 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.922016939 seconds)
  done (took 40.27474767 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.920448451 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.922007875 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.920690019 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.922201148 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.922893925 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.921850424 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.921029433 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921956527 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921934721 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921944055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.921887471 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.922762076 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.921810559 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.92242358 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.92231249 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.921835778 seconds)
  done (took 32.602100891 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.922823054 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.922615589 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.920748363 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.922873868 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.923356416 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.922811596 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.922851447 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.922677689 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.923164663 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.923415462 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.924011728 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.923962397 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.923767892 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.92329866 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.924933657 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.924294956 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.923338636 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.923757194 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.924679827 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.924716047 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.925297517 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.926175108 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.92375949 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.92500575 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.924707106 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.924591784 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.924337804 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.922786927 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.92479656 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.923977104 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.923271828 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.923999416 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.923838406 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.925372817 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.927354905 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.924528928 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.925461562 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.925254716 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.923916286 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.924709927 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.925138772 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.924661562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.926038402 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.92366655 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.924190602 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.925488007 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.92621964 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.924951722 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.924586243 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.925631267 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.92408106 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.924487754 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.924529443 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.926104784 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.925560806 seconds)
  done (took 107.690666845 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.92613057 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.925779885 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.928862242 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.925764921 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.92497345 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.927476271 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.926727137 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.926854278 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.928015631 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.924924051 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.926845458 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.927249517 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.925824324 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.925970091 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.927763998 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.927109061 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.927014135 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.928327743 seconds)
  done (took 36.538491943 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.925971027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.928260924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.927454141 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.926071287 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.926923265 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.927768777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.926342346 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.929869304 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.9265947 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.926812711 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.926898353 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.926597743 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.926713651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.927787711 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.926640862 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.926141557 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.927248077 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.926773065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.926858033 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.926935411 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.927237983 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.926399333 seconds)
  done (took 44.251423606 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.928085607 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.927892369 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.942212788 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.950937497 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.947658166 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.965610332 seconds)
  done (took 13.519952332 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927116062 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926296022 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.926467698 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927064477 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926670778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926780406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926662664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927464426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928597842 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926455313 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926822364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927941016 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927303913 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928169714 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927123786 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926781411 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926830925 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927823089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926436014 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927070997 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925913774 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925883142 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925651715 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925706563 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922852275 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918968345 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919982372 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921023073 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919905007 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921879061 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917920691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919497752 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918690472 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919063716 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91801909 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917812385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917843503 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918384504 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917826792 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918301498 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.918534124 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917557131 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917663879 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91879137 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917779209 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918772253 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917073062 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916582823 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917855273 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917044286 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.916015877 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916795049 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917364494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91688198 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917154414 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918517389 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916999971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916420582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916639099 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918501147 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918869069 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918349448 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9171442 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917276114 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917398158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918311291 seconds)
  done (took 128.668488432 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.916340399 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.917742004 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91554958 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91911215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918925191 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916997773 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.915410334 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.915603459 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916301241 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916228514 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.915351934 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916680315 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916147336 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91666044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.915822194 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916737792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.915820266 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916937654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916421711 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.915824391 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916034085 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916671339 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917639707 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916313176 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916896174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916039368 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915988622 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.915778423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917879099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916301737 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916964463 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917171825 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917697332 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.916954834 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920967037 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917110208 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916711134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916956271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917051612 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916615731 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917608555 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916679032 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918615547 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916867028 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918555819 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917699348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918764529 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917676648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917931527 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917694026 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918176044 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919493145 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919749023 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917793757 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918020663 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919502089 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918163417 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918727929 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918019034 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918996908 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920945432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918909996 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919348704 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919785902 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919712176 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918766787 seconds)
  done (took 128.403121911 seconds)
done (took 2634.242040174 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.020606883 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.022553895 seconds)
  done (took 15.891223785 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.086218421 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.039540824 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.923531979 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.96748958 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.924895597 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.928868538 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.946637516 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.924187406 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.92413398 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.924848773 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.9243773 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.109404042 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.940673449 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.925586404 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.925626846 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.01659642 seconds)
  done (took 53.292482841 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.93132284 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.92630219 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.939362827 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.927525806 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.931197313 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.942139919 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.956368162 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.933093572 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.966313256 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.943346076 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.002156062 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.944538723 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.930227481 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.981265813 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.943375163 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.943018484 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.02097673 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.008830016 seconds)
  done (took 37.021265471 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.009269349 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.968371191 seconds)
  done (took 10.834930279 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.934692579 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.952790177 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.956159524 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.952500323 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.934161475 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.93094237 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.922512036 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.920489121 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.958088264 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.920548252 seconds)
  done (took 71.256039949 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.929622991 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.928001037 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.928298885 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.925205781 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.922066017 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.927257432 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.924741578 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.928022611 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.634318717 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.968845857 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.937849192 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.933671445 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.925422273 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.926197461 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.92347378 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.949600418 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.107162782 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.923217152 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.922587135 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.931448334 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.925423173 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.013352636 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.940304848 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.92803531 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.961414448 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.625156573 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.939398898 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.930200225 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.094883508 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.923223908 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.9259111 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.138578729 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.934283677 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.36752595 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.263526095 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.934796903 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.936683499 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.935655381 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.923380899 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.119800752 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.927476053 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.933237108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.805234093 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.23914342 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.027322082 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.971668007 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.278817159 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.930731228 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.925907361 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.958678248 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.929528074 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.926815067 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.946362705 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.434649779 seconds)
  done (took 136.348905577 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.925608624 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.174685957 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.075795762 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.924822122 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181513232 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.141186523 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.92688309 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.971593685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.928919045 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.12475771 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.181511608 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.029489384 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.927929891 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.924643012 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.925617821 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.927219864 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.066563244 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.993006572 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.932620634 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.924464437 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.949945259 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129133194 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.048646194 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.930128105 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.952132467 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.135462001 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.049016644 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.030168615 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.884596757 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.926922183 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.988448154 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.929540712 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.92599281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.925030906 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.080788586 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.034555331 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008485561 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.929147211 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.926295222 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.926590592 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.694922498 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13209326 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.022632628 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.049818608 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.180103288 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.144359763 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.622501418 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.925824233 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.554551536 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.096101791 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.131893008 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.133877089 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.048460344 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.929815818 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.472428762 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.926647908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.926592624 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.151855936 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.150163392 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.028087536 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.931293028 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.927612024 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.927812497 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.217396822 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.93206859 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.019489484 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.931005669 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.929604279 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.019930033 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.029872385 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.158281783 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148568125 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.962159739 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.262146029 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.472122945 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.132424347 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.994661953 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.157733954 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.930125876 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.929254899 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.00711294 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.76805162 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.181827921 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.211606052 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.128875233 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.959438763 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.554314572 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.929922354 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.116874301 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.116011232 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.168557347 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.17600489 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.169319787 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.426612373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.929100975 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.930463678 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.246263149 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.042756913 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.925337258 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.277970493 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.163961909 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.424783291 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.955693975 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.216071801 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063307218 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.933354628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.573821507 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.932881887 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.139033382 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.968594129 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.931376291 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.932223534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.119959622 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.854551311 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.930664696 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.90478271 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.9932003 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.9346388 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.134374643 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.934930672 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.178693502 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.934949508 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.168743698 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.500765313 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.962001619 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.160270161 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.178303964 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.58888788 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.175850029 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.173987768 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.046214487 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.208981647 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.934484857 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.930458839 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.194520144 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.934716899 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.930841849 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.100412397 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.933244069 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.074344696 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.935468642 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.202578042 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.954473671 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.171053336 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.937639665 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.167500458 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.966092069 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.98175727 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.934367366 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055770201 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.935450463 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.751829832 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.093984349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.935305168 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.933815385 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.704680469 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.933358631 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.08626043 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.159083057 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.95569631 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.001737263 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.485717481 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.933478559 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.01484783 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.956798881 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.222277123 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.934449609 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.1843778 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.938054205 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.401881939 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.932900831 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.223175556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.173450841 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.934601274 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.934468024 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.770334014 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.91258425 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.403406357 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.090442716 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.296617909 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.724291931 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137118361 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.938918658 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062526946 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.938726684 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.010664 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.270790499 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.93435339 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.934163975 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.934249095 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.93506686 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.933594323 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.200413397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.960754106 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.37269461 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.069353974 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.189521622 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.239454738 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.13416753 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.976383802 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.937519556 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.215894821 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.939255178 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.996963869 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.939119607 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.95478296 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.166644059 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.939064499 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.223700858 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.172669712 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.801041406 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983970044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.9378086 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.936036035 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.86956912 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.081168074 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021733927 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.938565705 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.935192749 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.050568071 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.056629326 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.121368805 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.653827384 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.103838013 seconds)
  done (took 917.156917387 seconds)
done (took 1243.651097972 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.935368907 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.936444382 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.94034394 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.935821534 seconds)
  done (took 29.613292799 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.941239704 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.937129625 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.937289271 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.937132965 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.937758481 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.939366688 seconds)
  done (took 13.496703356 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.938830642 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.939939312 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.938614661 seconds)
  done (took 22.683165306 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.015603829 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.361426452 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.082493928 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.377138277 seconds)
  done (took 10.703581785 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.937377624 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.938243793 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.937147703 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.938109693 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.94146811 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.942684376 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.937798512 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.937969149 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.943260763 seconds)
  done (took 19.320898558 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.960512176 seconds)
done (took 101.642976282 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.936960712 seconds)
    (2/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.312804019 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.032201962 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.956585141 seconds)
    (5/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.032898258 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.955635152 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.946794829 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.142386723 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.858787563 seconds)
    (10/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.892438208 seconds)
    (11/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.947630177 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.953603967 seconds)
    (13/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.97543101 seconds)
    (14/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.32166869 seconds)
    (15/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.069893897 seconds)
    (16/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.409026406 seconds)
    (17/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.048597008 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.087841522 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.962240995 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.937016488 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.978399487 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.938594656 seconds)
    (23/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.826986004 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.786407196 seconds)
    (25/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.129418761 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.027916866 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.068117379 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.075765286 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.654117562 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.040233282 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.96730305 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.200118274 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.092289343 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.706510909 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.520115584 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.069174096 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.763778931 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.879455625 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.184544767 seconds)
    (40/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.018487427 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 4.905164836 seconds)
    (42/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.096956016 seconds)
    (43/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.226936216 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.036443284 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.335003649 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.960599041 seconds)
    (47/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.253776744 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.153137909 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.036850514 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.20299238 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.362193298 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 2.155681139 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.249748305 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.553610285 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.7429443 seconds)
    (56/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.364839365 seconds)
    (57/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.028101906 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.196445705 seconds)
    (59/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.408612534 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.050827585 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.324248413 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.057102163 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.96273561 seconds)
    (64/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.336846529 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.038419052 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.070287734 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.019281233 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.940743527 seconds)
    (69/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.975045162 seconds)
    (70/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.642481535 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.336221517 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.245489711 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.948167041 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.012398509 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.945500221 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.187357272 seconds)
    (77/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.025194451 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.940403416 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.054387218 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.943517293 seconds)
    (81/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.027612754 seconds)
    (82/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.102276525 seconds)
    (83/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.963832431 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.270205371 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.055403992 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.977840767 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.659159125 seconds)
    (88/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.477442629 seconds)
    (89/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.077086723 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.143894548 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.945485892 seconds)
    (92/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.040994297 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.963568128 seconds)
    (94/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.046528815 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.071739779 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.020979338 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.927555925 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.968150795 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.94326775 seconds)
    (100/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.095100048 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.713232406 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.038542191 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.959052347 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.709682184 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.219145361 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.350362448 seconds)
    (107/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.184624972 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.946804429 seconds)
    (109/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.411258604 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.113733883 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.086085429 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.234774353 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.020329172 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.964031063 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.543721206 seconds)
    (116/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.388783016 seconds)
    (117/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.191394576 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.947886536 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.946974442 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.7496375 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.67570014 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.037037051 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.006953122 seconds)
    (124/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.226601381 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.008091001 seconds)
    (126/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.06926524 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.974826778 seconds)
    (128/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.468653411 seconds)
    (129/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.756674314 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.054352861 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.02471276 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.10982217 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.19928917 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.33266681 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.958205088 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.946018764 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.160923015 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.245703079 seconds)
    (139/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.956756169 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.148537803 seconds)
    (141/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.317275388 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.251192684 seconds)
    (143/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.077915714 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.957181785 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.314147745 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.135686888 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.964351926 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.951138926 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.289476637 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.260911897 seconds)
    (151/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.95521549 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 4.246564721 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.231248285 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.079288599 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.250407253 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.867753886 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.977374307 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.213656999 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.297642053 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.059169835 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.621334394 seconds)
    (162/309) benchmarking ("sort", BigInt, false)...
    done (took 6.958119044 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.270717566 seconds)
    (164/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.041490636 seconds)
    (165/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.160164168 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.849850802 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.282108773 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.955068376 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.087960598 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.883622781 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.224708954 seconds)
    (172/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.028976715 seconds)
    (173/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.065570173 seconds)
    (174/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.146800112 seconds)
    (175/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.112914364 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.174993726 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.053042192 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.950889452 seconds)
    (179/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.43129469 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.068958364 seconds)
    (181/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.588015217 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.952326232 seconds)
    (183/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.950069758 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.254552578 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.168268657 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.0239853 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.952841312 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.9653313 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.009830107 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.132192461 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.35483724 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.089534489 seconds)
    (193/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.112569862 seconds)
    (194/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.739596888 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.968607122 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.987754669 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.013950536 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.22400985 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.892503589 seconds)
    (200/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.331203056 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.286734234 seconds)
    (202/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.350129397 seconds)
    (203/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.961523117 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.249893581 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.847046059 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.276584543 seconds)
    (207/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.72138094 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.074917397 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.964444845 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.950267762 seconds)
    (211/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.280102595 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.056782299 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.209028141 seconds)
    (214/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.271179558 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.951037754 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.352755793 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.811692826 seconds)
    (218/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.817980361 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.180763293 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.955571108 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.308664711 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.101036809 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.596334531 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.184872236 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.24739649 seconds)
    (226/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.762804167 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 5.700046369 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.87243001 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.955252883 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 4.039261215 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.952621496 seconds)
    (232/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.958113874 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.344328697 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.551198579 seconds)
    (235/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.239542512 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.958906713 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.257567286 seconds)
    (238/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.958047671 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.051057166 seconds)
    (240/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.067436893 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.96262062 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.165525405 seconds)
    (243/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.216746801 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.144512004 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.04153735 seconds)
    (246/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.248595113 seconds)
    (247/309) benchmarking ("sort", Float64, false)...
    done (took 5.664101874 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.961217431 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.264891271 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.969342559 seconds)
    (251/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.040880012 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.963293031 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.102206653 seconds)
    (254/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.113858914 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.086865375 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.032304715 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.09480588 seconds)
    (258/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.262739207 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.270123148 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.144741776 seconds)
    (261/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.044226338 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.973132319 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.953519292 seconds)
    (264/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.218018457 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.965293712 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.35442972 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.954861734 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.970232024 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.810665173 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.96192399 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.74018593 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.043625211 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.970471815 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.348906435 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.9690191 seconds)
    (276/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.263011287 seconds)
    (277/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.740070597 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.954653517 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.574150909 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.349605278 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.349495699 seconds)
    (282/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.038443641 seconds)
    (283/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.134641963 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.976200796 seconds)
    (285/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.505213424 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.967740368 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.846708004 seconds)
    (288/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.961574429 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.434724229 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.969922098 seconds)
    (291/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.448446048 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.039777525 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.272360845 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.146605148 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.979787147 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.083526128 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.058263741 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.975960325 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.304102498 seconds)
    (300/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.102858397 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.620494962 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.656132274 seconds)
    (303/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.046611218 seconds)
    (304/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.435862313 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.167451736 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.250440317 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.961284597 seconds)
    (308/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.681833123 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.955617417 seconds)
  done (took 1033.694693413 seconds)
done (took 1035.628965766 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.200067624 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.976866974 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.959146791 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.982027362 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.072978084 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.002942604 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.972810524 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.963535022 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.009293136 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.009892698 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.960044225 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.999966272 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.960742199 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.961357838 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.960530544 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.975135271 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.269865832 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.993203263 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.979173196 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.97175656 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.978837877 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.958910162 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.010424842 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.000510452 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.964980922 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.965129199 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.962727385 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.979737759 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.073390034 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.96411745 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.965139878 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.974648791 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.273398442 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.991950048 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.958985846 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.980922056 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.974412068 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.972607314 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.965390693 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.993652364 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.425599293 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.968720064 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.962701316 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.962032131 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.961142042 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.969604734 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.96183369 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.97137156 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.978221317 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.977704544 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.418891942 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.985605311 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.966756104 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.963011215 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.975854875 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.962991192 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.967044515 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.97937257 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.983242697 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.97891408 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.260380008 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.004407674 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.967379255 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.981961268 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.972224868 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.455844691 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.968761136 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.97079776 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.426128776 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.978246125 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.458029862 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.980409294 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.965782759 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.979054951 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.996895986 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.271850714 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.993872624 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.963351872 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.973523505 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.962165659 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.976507644 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.979326312 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.968088267 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.964276187 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.979284878 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.007201472 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.976904679 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.964522776 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.976037837 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.984959043 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.974112477 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.976494434 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.968263186 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.963326818 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.979643659 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.969386002 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.96963598 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.967139311 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.969504189 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.978088596 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.425932138 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.988743711 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.961094447 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.961811214 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.965745715 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.97958366 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.425849299 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.973979317 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.988450619 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.015109409 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.967561152 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.263550844 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.002705912 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.983645282 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.976668556 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.967787239 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.963753543 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.262122462 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.455470974 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.988855266 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.966184983 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.963045953 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.983260297 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.968040772 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.963038471 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.275543877 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.000351572 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.981832682 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.090061182 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.978629209 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.999955669 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.964378853 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.970672767 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.012006222 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.983827931 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.998527271 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.968767038 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.984120369 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.98404437 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.96586831 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.980021636 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.979778395 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.966622912 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.975576608 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.965634771 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.012421142 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.982565357 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.982254732 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.989735114 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.091356568 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.965860422 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.265578881 seconds)
done (took 310.657056572 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.060807082 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.967410302 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.05836252 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.966223168 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.067891247 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.050110093 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.966127872 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.966931556 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.965681653 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.488086884 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.966093326 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.970972288 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.964471054 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.965639697 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.046817586 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.966131319 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.965396478 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.254206465 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.96743068 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.050310415 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.966378141 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.967182351 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.966024696 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.492469381 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.965100346 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.96581197 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.051619469 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.966493367 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.259834354 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.966235817 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.966069458 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.260991964 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.076620125 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.978993268 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.977719666 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.972236921 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.066301444 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.976504079 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.047296222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.049563196 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.059857967 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.000125527 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.968102733 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.966420106 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.969715889 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.968674085 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.968542172 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.000259263 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.968982899 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.971827704 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.253848967 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.975353904 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.973300148 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.968152804 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.968064911 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.981034393 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.969082318 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.968213001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.080135889 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.969605061 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.051716613 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.494230032 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.493535558 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.967513776 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.968130742 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.96973383 seconds)
  done (took 191.40522221 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.035563622 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.051018413 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.037782504 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.975727564 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.021225943 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.038443681 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.976626072 seconds)
  done (took 16.033050854 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.975353417 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.970085589 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.044399461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.044255371 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.970422498 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.150792789 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.9826268 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.975790104 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.997596412 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.971191391 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.632907963 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.044972226 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.978052494 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.969689635 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.982933031 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.047434355 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.973745716 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.97156945 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.080445313 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.120264595 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.976198546 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.979230403 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.996886474 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.982982298 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.972091208 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.972679346 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.972093841 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.978070315 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.971500892 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.971748195 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.972004787 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.037274151 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.972152926 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.971527502 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.972529426 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.973738307 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.97326992 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.972660131 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.973169652 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.971867869 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.973520368 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.972905998 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.97281485 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.973823891 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.973437095 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.997686532 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.972464379 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.972815793 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.972500503 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.973684454 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.999046407 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.973269129 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.973508171 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.978521201 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.020685646 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.981623666 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.974028955 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.972981396 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.973122933 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.972915171 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.974039193 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.122686387 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.047090143 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.974312979 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.047778249 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.131703309 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.974895858 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.973228487 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.974020527 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.066088629 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.97340498 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.047619035 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.974900243 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.093060328 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.974412441 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.153517656 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.997172815 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.978636018 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.97790867 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.974114192 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.980980222 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.974417629 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.975823686 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.981170982 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.98032772 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.974346466 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.974255865 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.975283124 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.982885605 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.975751132 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.024964507 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.974784617 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.975966207 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.117442576 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.975116877 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.085301071 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.002821248 seconds)
  done (took 216.287348069 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.983965517 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.984733375 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.976999119 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.990786806 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.976847237 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.976551205 seconds)
  done (took 13.794102881 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.979493043 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.982192008 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.975600172 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.975600591 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.97532346 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.975185807 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.975349147 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.978466588 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.979985004 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.976094853 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.975808662 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.977129724 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.977279691 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.976547403 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.977433092 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.977498514 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.976488119 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.975318558 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.976653319 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.976205965 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.119135308 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.976657637 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.976369472 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.985964448 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.983101913 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.977424139 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.993020994 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.977444575 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.977919133 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.98708642 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.983268081 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.978041714 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.986789885 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.984544274 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.982496854 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.986531096 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.982953239 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.978054356 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.978484128 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.97893426 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.978170492 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.978338419 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.978957877 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.979821726 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.980719313 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.991515992 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.983979884 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.994081234 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.978563547 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.979232998 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.978719651 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.978475313 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.97838674 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.97845898 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.987782801 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.985695649 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.983447482 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.97930348 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.978448201 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.988192228 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.984182472 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.979836633 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.981613116 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.984442901 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.984413936 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.979324423 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.987625921 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.983526457 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.980110495 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.978418679 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.980740281 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.980124339 seconds)
  done (took 145.64385161 seconds)
done (took 585.075079575 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.046079662 seconds)
  done (took 8.952180644 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.124640231 seconds)
  done (took 9.117893603 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.945447788 seconds)
  done (took 10.854857995 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.050195207 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.002636003 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.998883686 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.98349928 seconds)
  done (took 29.95290606 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.272198928 seconds)
  done (took 9.179557408 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.991769183 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.978226956 seconds)
  done (took 15.947418964 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.10146184 seconds)
  done (took 9.009680413 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.167762274 seconds)
  done (took 9.099886252 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.998781077 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.999125558 seconds)
  done (took 15.925852474 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.981922219 seconds)
  done (took 8.888713584 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.782804692 seconds)
  done (took 9.776763407 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.988288064 seconds)
  done (took 8.917118307 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.063903801 seconds)
  done (took 8.971969865 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.159195214 seconds)
  done (took 9.065799141 seconds)
done (took 165.566812234 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.987169909 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.979818207 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.978721829 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.978585843 seconds)
  done (took 29.831412939 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.016067283 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.016513444 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.02488376 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.016943513 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.007103273 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.0077174 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.017569595 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.018005165 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.007982202 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.014421744 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.01676617 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.014168019 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.016573295 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.026778615 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.02494221 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.015158421 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.017256714 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.017337926 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.00784129 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.025866399 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.015901563 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.016778943 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.983864069 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.981647326 seconds)
  done (took 50.236823004 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.167583486 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.04757635 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.136101583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.02842652 seconds)
  done (took 10.287520744 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.981584687 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.045249096 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.032667746 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.03501083 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.066689744 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.085404954 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.034861247 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.192883088 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.098247002 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.107917982 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.989883908 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.004769411 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.007528251 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.036483732 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.084798967 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.983957722 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.983983926 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.104961166 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.043861589 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.193876762 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.983207242 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.037912066 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.076080016 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.038389739 seconds)
  done (took 51.159878363 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.983529863 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.992341902 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.991410584 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.984436838 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.984798112 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.985014007 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.992632 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.987760715 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.006947183 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.986516195 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.984554457 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.986781904 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.991450807 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.985623436 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.986290597 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.999242949 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.998414003 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.986057585 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.989990943 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.992148116 seconds)
  done (took 41.706154234 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.982625123 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.829817632 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.327831561 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.234743107 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.983362215 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.984902533 seconds)
  done (took 32.254737859 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.998329574 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.992903076 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.985026865 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.04264151 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.124526003 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.995092342 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.986122081 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.996982827 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.034148404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.052616545 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.006884833 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.014151937 seconds)
  done (took 26.142083109 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.985673543 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.986326224 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.98615732 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.99853831 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.997431843 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.993554441 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.992842247 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.985769977 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.99889206 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.004620079 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.994799615 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.997272861 seconds)
  done (took 45.837824881 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.19981505 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.210128594 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.208357324 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.61220262 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.984757399 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.883723364 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.625228652 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.650302896 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.285419291 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.964542546 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.953001407 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.868375092 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.227311346 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987778842 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.244894838 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.912283861 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.98732241 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2574692 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.988001779 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.993188182 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.286658285 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.04385447 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.200974404 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.033221494 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.19978296 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.485478583 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.239113684 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.244248224 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.319762302 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.040991631 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.200564497 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.037686056 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.995311152 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.998430118 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.989410585 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.999627224 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259012899 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989727916 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.997431906 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.981069034 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913086408 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.249460835 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.102915265 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.401451205 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.108649486 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.229659582 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.992112334 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.191344524 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.051940463 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.187308845 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.0933697 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.202011472 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.91457393 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.311426823 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.114417732 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.991520674 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.994057641 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.68857302 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.229223382 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.069226381 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.252021338 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.102879975 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.991673253 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.076484071 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.989635887 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.102759255 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.360374076 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.995925614 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.988459216 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.998546066 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.085796094 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.202473319 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.990517313 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990214521 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.010458562 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992281649 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.341720713 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.573220495 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.984792954 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.558437207 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.540941623 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.962577903 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.497294955 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.040130854 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.276234594 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.209621932 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.177399239 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.234379465 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.871525901 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.994615005 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.797015043 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.070689481 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.06874869 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.990072926 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.197874021 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.232829551 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.108036572 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.990473731 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.916799751 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.002399808 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.192583666 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.493023386 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.053759424 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.991316429 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.990824381 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.99446819 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.992454562 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.007795966 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.003886714 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.510654555 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.285356358 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.096392766 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.251399616 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.982144109 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.67196782 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.262534076 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.118032156 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.603146956 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.123241539 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.990932976 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136391799 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.999228274 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.995351386 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.366285614 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.399143338 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.204061922 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.241022702 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.026591267 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.022125045 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.997502151 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.075410371 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.219190586 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.99234571 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.241022253 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.239231523 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.678994474 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.020113747 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.067362477 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.002319818 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.207123147 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.074596693 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.51882487 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.21047811 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.588052012 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.981599578 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.493186271 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.192240448 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.377550176 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.008325469 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.195947876 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.032587299 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.694933647 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.918973159 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.998346947 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.326217674 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.029370819 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.091126119 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.99428751 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.995150755 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.001994848 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.079497895 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.063984813 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.06761517 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.923200703 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.998368447 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997066803 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.995930371 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.544313271 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.634924352 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.286941499 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.994762341 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.054821461 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.996333711 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.612280971 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.99931798 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.114692601 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.006200368 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.735262309 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.025923907 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.215830077 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.400214429 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.1128238 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.995591997 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.003782796 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.695526517 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.005539477 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.695724241 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.281528733 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.993592909 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.442697038 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.060002924 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.181463127 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.014912287 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.998012156 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.998528247 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999300242 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.200189657 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.509666656 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.2596357 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.338959201 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.081869082 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.267299129 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.187772665 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.520197836 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.682180395 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.506333531 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.223319983 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.997406733 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999133615 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.64259984 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.005856682 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.214333152 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.200750073 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.28735441 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.301828446 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.411035086 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.003030639 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.010743029 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.239398729 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.997864769 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.428975533 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.03926339 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.294278797 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.811394222 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.266663381 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.065470025 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.010404631 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.6403152 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124564373 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.955685109 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.117802022 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.923895715 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.631786937 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293573742 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.27306511 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.980152587 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.338123727 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.293933998 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.192495547 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.628147303 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.998875532 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.044315939 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.081520298 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.005742722 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.56903905 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.044582526 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.046584999 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.004737507 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.998435133 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.000831887 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.674697512 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07771427 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.1196035 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.681997195 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.534483571 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.91479668 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.267553629 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.055226546 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.441920492 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045124898 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.213412518 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.004834404 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.594787019 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.053785496 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.278245268 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.959744993 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.214933769 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.209285825 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.036555412 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.008057519 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.925567047 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.88530035 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.004224808 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.215714191 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.941166566 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 2.002850615 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.289030954 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.641408837 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.041710319 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.003409583 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.264636714 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.345786259 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.260187563 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.009211162 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.214754345 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.127051111 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.919643618 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.484533088 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.587060545 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.700919871 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.017712598 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.202780748 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.273960338 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.320838146 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.044538995 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.07164587 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.271627571 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.980673999 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.001716721 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.523956335 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.099570221 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.242752753 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.313758434 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.544198139 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.372413566 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.438116013 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.060233489 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.219179544 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.371799346 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.251492648 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.005770547 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.096873145 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.21712187 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.29486985 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.896268947 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.715093259 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.245639884 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.009347438 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.960018099 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.211601236 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.502679242 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.355165969 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.541478538 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.21951594 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.035887593 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.487599234 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.02118409 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.938756046 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.005823078 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.953027802 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.221024937 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.216892414 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.04739513 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.561451948 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.214330939 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.404988226 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.274895481 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.047707984 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.932367883 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.641709672 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.956589168 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.050678265 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.04663039 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07715082 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.008433869 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.207755887 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.444322894 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.051256204 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.537195377 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.214346351 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309194891 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.274195156 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.309206712 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.966043566 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278651659 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.954694292 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.66431968 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097887818 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.098714569 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.006811987 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.008845956 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277335824 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.273880867 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.633693528 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.045969787 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.28278287 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.10649229 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.008760481 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.011510908 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.527933351 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.246521218 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.219933828 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.08357585 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.149754104 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.079340912 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.521376318 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.01241037 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.011554607 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.144387023 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.008635522 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.6787101 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.30574935 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.744497051 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.211252733 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.527844547 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.916649563 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.222541668 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.057623926 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.009398724 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.010764019 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.012864316 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.248488965 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.285205321 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.768706121 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.012845365 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.008987316 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.887367007 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.644490796 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.246238361 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.013708754 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.067589196 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.012476848 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.125561266 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.014211062 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.278323018 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.060775727 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.009710799 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.017711743 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.22289312 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.522804652 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.027303049 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.709673736 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.212879714 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.014912976 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.49419449 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.464244279 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.293641238 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.05831278 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.222631027 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.271065693 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.559746076 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.224498918 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.01328245 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.237083375 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.012636702 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282745763 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283761216 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.011251232 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.226526292 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.512720863 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306880159 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.022985524 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.896990046 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.018115008 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.279119657 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.063051292 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.011736902 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.019475092 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.551577683 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.649521591 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.476953475 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.166155579 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.261560859 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.754202534 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.770957629 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.014374659 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.014842065 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.643985132 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.747460442 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.227312114 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.300685969 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.956784679 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.213834807 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.716611484 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.012859612 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.280186423 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.938714659 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.015309858 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.666487709 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.291370144 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.951837487 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.019972322 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.576324144 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.013818642 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.099999297 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.015926413 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.133124678 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.287743962 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.317594946 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.12871632 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.656346971 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.648296639 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.958452782 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.061754981 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.822591893 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.587197263 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.649168639 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040685372 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.032369672 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.9413068 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.018487807 seconds)
  done (took 1710.106971054 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.016928106 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.076691363 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.061333036 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.066957429 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.095790918 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.11721402 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.04993802 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.041425543 seconds)
  done (took 58.46880276 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.016368857 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.032043915 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.020597259 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.018406013 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.043906415 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.018042571 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.179138741 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.027979836 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.046292939 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.022365875 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.018696738 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.017490853 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.313113595 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.039303981 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.017653299 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.019724874 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.021988657 seconds)
  done (took 76.825461213 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.018068228 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.333325617 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.068298748 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.016656968 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.89467184 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.023412008 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.180573646 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.064043563 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.024985298 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.173879687 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.316266465 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.024812048 seconds)
  done (took 92.084123828 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.02445077 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.020250193 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.019646571 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.019327154 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.018747379 seconds)
  done (took 12.052114705 seconds)
done (took 2238.971019182 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.304292806 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.07928239 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121278724 seconds)
  done (took 6.144694359 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.167717808 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.211978549 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.325054411 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.084341672 seconds)
  done (took 10.741651036 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.307998547 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.389678302 seconds)
  done (took 6.643442268 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.385839417 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.036053766 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.411544011 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.024240417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.024478417 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.025773892 seconds)
  done (took 23.02644271 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.021426565 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.020077973 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.020497483 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.020733848 seconds)
  done (took 10.028676755 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.018930453 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.703257642 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.018947456 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.029865116 seconds)
  done (took 21.717456245 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.211463506 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.029321234 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.15945872 seconds)
  done (took 8.34664029 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.169249748 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.857834965 seconds)
  done (took 6.973356899 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.166868927 seconds)
  done (took 4.113256699 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.049616994 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.294842446 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.549227622 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.019495279 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.655169471 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.106850497 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.40003017 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.302665881 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.519179924 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.491090706 seconds)
  done (took 27.334288211 seconds)
done (took 141.151789304 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.571281591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.071419784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.224312344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.414689121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.254239705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.223617236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.226310687 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.413477606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.114909244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.116799778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.426747236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.253394348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.182240178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.067219851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.190037777 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.066774778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.252098724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.422281644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.071887134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.321356018 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.240483011 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.044862391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.239428329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.063091236 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.253315793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.177445519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.588137033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.070191216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.223216865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.601725332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.178924019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.467356231 seconds)
  done (took 173.980585438 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.023106233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.023898744 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.025840239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.023442551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.376746983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.025838828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.023677229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.023542402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.364310429 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.34938784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.024521449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.351511708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.025570012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.023930413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.025957243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.023331228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.558256544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.025572263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.026246369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.024145762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.02509464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.192999898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.024973681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.202684988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.502451341 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.024432841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.026415043 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.02481124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.025841459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.024550838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.025856091 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.025810758 seconds)
  done (took 213.444498223 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.038470042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.024349838 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.026175633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.026068258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.027534989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.027552486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.026940281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.025637976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.727124156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.703451469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.025736246 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.026782182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.028394461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.026395757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.02600719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.027238721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.026522186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.027414599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.02583637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.026428596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.028133497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.717500381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.042027885 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.730128413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.024467281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.028378681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.026867846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.027114992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.027556517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.026608998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026594581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.026470537 seconds)
  done (took 225.604967614 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.269248439 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.02771194 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.028737142 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.034047604 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.028229339 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.027940671 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.019563539 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.277251619 seconds)
  done (took 20.665443066 seconds)
done (took 635.660061065 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.399074151 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.782672938 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.164799347 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.053445829 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.35128693 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.095647101 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.046682315 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.109652244 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.895353405 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.121944596 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.436627439 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.055799053 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.803350465 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.077493517 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.171075882 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.104647102 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.387699131 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.70897277 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.193349537 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.741720608 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.203350097 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.969324729 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.127153362 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.934676359 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.458704684 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.011703119 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.06577862 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.391732375 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.052724668 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.208300278 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.701052473 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.321553152 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.064737868 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.04927827 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.098752344 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.079214262 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.260077305 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.060632277 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.169735995 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.760698285 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.750442864 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.777553046 seconds)
  done (took 107.171485709 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.039108467 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.033903283 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.034298317 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.035449509 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.043787605 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.034748602 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.036060386 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.034750802 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.035769384 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.035370442 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.034460974 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.04395515 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.035443212 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.044562068 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.035842077 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.035833458 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.035184424 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.044214626 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.036253098 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.035763558 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.03622435 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.034690952 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.032659473 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.036414583 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.03653751 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.036253819 seconds)
  done (took 54.92933988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.034203228 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.195696314 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.272031287 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.054744723 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.03205355 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.0356003 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.060710501 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.039347955 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.033092713 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.034141612 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.133241189 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.038724979 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045414853 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.270610443 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.049961402 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.031698474 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.031280847 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.032413364 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.203171942 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.048140888 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.063405366 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.040476914 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.062675864 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.048737426 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.034906227 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.033602336 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.03557945 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.466163523 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.044878138 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.135637895 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.110896626 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.067950285 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.393842005 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.284363715 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.090706555 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.041251855 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.03341503 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.141085029 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.039282526 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.034872004 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.064760931 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.044601679 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.272986344 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.568615633 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.049926985 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.033921419 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.464377327 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.152478487 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.077691737 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047140188 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.284043944 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.053372059 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.035021751 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.036775828 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.072313861 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.048492295 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.035253078 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.331596013 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.051469361 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.064189574 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.043266529 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.036215618 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.212772207 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.043915468 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.198882496 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.046254972 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.040425212 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.03819875 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.275155088 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054272621 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.581203007 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.051191746 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.036104671 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.139319693 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.203162584 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.488059828 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.050195781 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.213950556 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.412924318 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.075000147 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.05028108 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.448239092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.077844452 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.047083283 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.036260647 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.037312052 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.036042105 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.080876703 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.063566124 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.495101613 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.580366232 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.352079368 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.076583272 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.051503663 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.039170653 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.332518338 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.049734263 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.037058451 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.265398045 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.594970926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.054164135 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.044122646 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.559831912 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.054120698 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.066934996 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.049318976 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.288608724 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.055822622 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.081807215 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.037583698 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.043921024 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.040524754 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.068360797 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.050124101 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.039485591 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.554388134 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.158823274 seconds)
  done (took 251.870093785 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.03842817 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.037374862 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.036497254 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.037322951 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.036310209 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.038704647 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.037653255 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.037059553 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.037754589 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.037250861 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.037768525 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.036088981 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.037844063 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.038118759 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.076428302 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.039279942 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.528070192 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.039593979 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.038909918 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.039835473 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.596375431 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.042011064 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.038925386 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.04149019 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.03938419 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.03890693 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.045996207 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.074168649 seconds)
  done (took 172.168833293 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.039359139 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.09463479 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.051264466 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.086913323 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.052408181 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.040124642 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.136283003 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.05770329 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.046171512 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.041007794 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.041725525 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.07192322 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.049230498 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.135877805 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.071036552 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.145482585 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.142525817 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.047201414 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.041049639 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.041431421 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.089617527 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.054611343 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.072656287 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.102899503 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.053297062 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.096891416 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.055467828 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.042429082 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.040268011 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.157790329 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.06034352 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.073586162 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.077111196 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.063266565 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.160819203 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.156681674 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.143757234 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.14472562 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.047964905 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.041347104 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.04183767 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.043041968 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.097814294 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.054884733 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.04366914 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.159184818 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.060785191 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.042430501 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.042932574 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.042704017 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.056696611 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.061042075 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.079414536 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.17152014 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.089421418 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.069544774 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.138580483 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.163884377 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.043345289 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.139348829 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.050022531 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.159294796 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.064830734 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.043024979 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.044701326 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.045989596 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.09253678 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.153236812 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.148175321 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.051159776 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.139969656 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.09959749 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.057072706 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.045073697 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.044163637 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099617447 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.15372307 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.098365503 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.106465249 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.080209338 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.054045815 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.044319132 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.045638994 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.074014349 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.053080375 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.159930482 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.157956612 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.051063773 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.045760744 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.046330589 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.045761871 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.070793892 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.110112302 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.085784644 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.152384395 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.082972684 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.085391628 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.053026798 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.059195593 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.049448051 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.080530113 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.051930223 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.05784365 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.325509605 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.076792335 seconds)
  done (took 220.677531629 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.412752436 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.089568095 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.119407005 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.322638053 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.401457326 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.97653023 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.084162371 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.094482505 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.102604277 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.228540754 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.15560286 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.137406585 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.083758776 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.068692163 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.088306191 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.107053626 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.123106245 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.401610773 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.282361475 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.629062957 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.085709291 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.371826103 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.428244843 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.450088878 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.143690207 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.487649901 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.68328623 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.19429208 seconds)
  done (took 67.728423504 seconds)
done (took 876.498543992 seconds)
SAVING RESULT...
DONE!
