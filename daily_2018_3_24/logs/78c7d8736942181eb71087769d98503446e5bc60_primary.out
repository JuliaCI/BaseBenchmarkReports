cset: moving following pidspec: 4558
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.551489637 seconds)
loading group "string"... done (took 0.517544824 seconds)
loading group "linalg"... done (took 8.640606634 seconds)
loading group "parallel"... done (took 0.165989661 seconds)
loading group "find"... done (took 4.374121739 seconds)
loading group "tuple"... done (took 1.95005677 seconds)
loading group "dates"... done (took 1.435171844 seconds)
loading group "micro"... done (took 0.196404693 seconds)
loading group "io"... done (took 0.517625969 seconds)
loading group "scalar"... done (took 48.985456345 seconds)
loading group "sparse"... done (took 13.492521436 seconds)
loading group "broadcast"... done (took 1.645811168 seconds)
loading group "union"... done (took 9.146527009 seconds)
loading group "simd"... done (took 3.050286984 seconds)
loading group "random"... done (took 11.348583921 seconds)
loading group "problem"... done (took 2.221804941 seconds)
loading group "array"... done (took 23.823203115 seconds)
loading group "misc"... done (took 1.104712366 seconds)
loading group "sort"... done (took 3.733906246 seconds)
loading group "collection"... done (took 19.148280822 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.676487005 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.206839937 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.193303131 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.205621682 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275399706 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165237034 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157074415 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170529183 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.662752682 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206950903 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139471874 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432414765 seconds)
done (took 6.236197287 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262406439 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240006665 seconds)
    (2/2) benchmarking "String"...
    done (took 0.184377204 seconds)
  done (took 1.112907427 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078620298 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157112721 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109870798 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095397224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094359333 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109815018 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094765596 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111322404 seconds)
  done (took 1.465243932 seconds)
done (took 3.608687922 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.522505884 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868971195 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.519789159 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.177608915 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314794997 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303838853 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264101943 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.224585408 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092423002 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084890269 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.181568053 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.482156468 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.384649165 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.042013377 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069084536 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094963921 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.152735196 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.864442132 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080350878 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109068758 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.523795978 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.211328674 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115540295 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106272021 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185530711 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134142413 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139731126 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103088881 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.751399485 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134066176 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.214013612 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083894641 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.13780251 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165803338 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215473699 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110520842 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670234361 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201268988 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095980324 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101472868 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.765986808 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117044449 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203219332 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106609994 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067343048 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180092893 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113048261 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079066386 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094692048 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102477438 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156067839 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.4515425 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106873833 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192543 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094247924 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.781594951 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098095236 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.285589344 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125381879 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093250579 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090793808 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088794211 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167189649 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094643474 seconds)
  done (took 20.617674817 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165483496 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.184802656 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078528579 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159676804 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121276911 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098753624 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085660362 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079708206 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126568958 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181569835 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137328137 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.189644953 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076705073 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089724248 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.16865131 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230995474 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126294192 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104910246 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088784507 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108374425 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122756848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112623611 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093474587 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091684571 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172199611 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205396524 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109372041 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122520375 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089498869 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098878525 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143541627 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144695393 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092523811 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089623186 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188401908 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107839181 seconds)
  done (took 5.300203714 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241382229 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104852512 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248084975 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198485292 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153467892 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182908189 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175087646 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295103179 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.224901646 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161844236 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128362185 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095983095 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080079776 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080481364 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096389173 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347974909 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151455608 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191500673 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184928576 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097670847 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100177561 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363127534 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101414514 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08744605 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11116023 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063505408 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222236904 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095546987 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.063470319 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084315981 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121786193 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114581664 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211482451 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.116676507 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08165039 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.144397382 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121237904 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114539819 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08690829 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225141852 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101784906 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096374828 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115892465 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132264203 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114176759 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108704195 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109480273 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220268623 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087258495 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130242943 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.001221524 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194762239 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.157304739 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085194269 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290122324 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127680881 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101431702 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110370979 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.775553574 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127738696 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08264839 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079458145 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114342302 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079543963 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.464101029 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125867922 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.164855342 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083356988 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156302054 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098580992 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120606198 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086946768 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102917585 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110840114 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086942283 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097813709 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086729754 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080392419 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106589003 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15859301 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.13067837 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085251233 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098257807 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148613854 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098601362 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.12616273 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110353439 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107348337 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086248136 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127790379 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083378139 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088906871 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185895334 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098084162 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130851467 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114093837 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128688019 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105226414 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.229933356 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083191468 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084170497 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.13762158 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086523503 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129046907 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099399855 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098944708 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085530515 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095530831 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082844324 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147865708 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102857023 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081939779 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088043215 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111114124 seconds)
  done (took 28.376813078 seconds)
done (took 54.983777692 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414300564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081805635 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079847453 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100376629 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084230183 seconds)
  done (took 1.527903437 seconds)
done (took 2.272128104 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.309370803 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198720757 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087084749 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18912856 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087537269 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195013604 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183733383 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102303316 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208461244 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0851303 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193526063 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085865931 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107028296 seconds)
  done (took 2.80314291 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105464047 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106943516 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102863924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120955404 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086649837 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102672713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121024796 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108906514 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101150413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114525474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086166638 seconds)
  done (took 1.902865474 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101461977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104810593 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092976824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117862861 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086489686 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099695067 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116590567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107833142 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098981283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113425594 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087316644 seconds)
  done (took 1.875733894 seconds)
done (took 7.324732719 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.224014984 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.883905919 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.188818487 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243854383 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350644621 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.295356407 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.601798496 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.199419147 seconds)
  done (took 15.864120992 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.121940994 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.188792973 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097683876 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096195729 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116350708 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093176535 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092187944 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116798786 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092900144 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091653754 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091388373 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.112315096 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095755482 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095501922 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114593503 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091532054 seconds)
  done (took 2.517181123 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142699537 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12369612 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117169597 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099320118 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114441605 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098557462 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10214261 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117111108 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093975114 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095840795 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.12019105 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099139626 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098244802 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111308744 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098270795 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.12167457 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.11283187 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099597527 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.1184765 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117957207 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099438764 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097787347 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117854387 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099557082 seconds)
  done (took 3.449725134 seconds)
done (took 22.582284217 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147360431 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103899777 seconds)
  done (took 1.003905886 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163503782 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181980081 seconds)
  done (took 1.104869934 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113048858 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091355666 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138535253 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104888651 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09187815 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109618225 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117819009 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109578003 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091564211 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091960491 seconds)
  done (took 1.825448297 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096164533 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095753422 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123659419 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168073832 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118626615 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094105453 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096341597 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112691183 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096626464 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092107301 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114031605 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10993556 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09649187 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128935474 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09609974 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.114892124 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10002324 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095517505 seconds)
  done (took 2.715038585 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09131293 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092415406 seconds)
  done (took 0.947516413 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094648137 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091921728 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094446392 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111624091 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091484939 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090907968 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108775128 seconds)
  done (took 1.447473984 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524260547 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.233894151 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370929385 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072383367 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123087263 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.447024013 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104799969 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070919432 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090740278 seconds)
  done (took 2.835482455 seconds)
done (took 12.640550395 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09226281 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.245616791 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.634958479 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114280703 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092348871 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163011775 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.313630455 seconds)
done (took 2.4251065 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348406503 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.161721103 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083331708 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092997439 seconds)
  done (took 1.451455129 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083869912 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100678064 seconds)
  done (took 0.958358983 seconds)
done (took 3.185241503 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091994214 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090022937 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.138503564 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090648941 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090272986 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089669795 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109547741 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090453133 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091189337 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.110121296 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090697519 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.089922605 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089155503 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109693234 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092554077 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090548339 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106566978 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090395614 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08968733 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088549001 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107619869 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089698697 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090054385 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107095994 seconds)
  done (took 3.130911822 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.1125999 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093079944 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111294963 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094926849 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095147148 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112562927 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096062911 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091999068 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112045556 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09355929 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09448081 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111427939 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092744171 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0954717 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110484651 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097261764 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094146367 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09177374 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11110601 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0952683 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093260994 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110299675 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095760837 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093919812 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112727726 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094978725 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092371618 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111055984 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095049669 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094895835 seconds)
  done (took 3.773330244 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097710505 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088413937 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089694458 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115860129 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088633232 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090849126 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104713823 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091391272 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092440063 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088947387 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.11077695 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090615646 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089304603 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109391993 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092410583 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094113986 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117197502 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091361925 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090540263 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092332312 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110693892 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09083435 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091329791 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109692058 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09159148 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087909223 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091729808 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109637839 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092026431 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08957402 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112327865 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095841095 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09236669 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.118396124 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094021492 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091753193 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.114107535 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088724537 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091859578 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088136493 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106186898 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091815443 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090937985 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.115268337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091784605 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09183793 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08974477 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109973221 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092471684 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093064792 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106293617 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091851616 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09453045 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09088183 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.111784917 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087892305 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091325601 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105562206 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093310279 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091405047 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105463509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089259853 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095308868 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090610488 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123650752 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097799982 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090877421 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111062527 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092363471 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097285434 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110514024 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101795676 seconds)
  done (took 7.80143454 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114781313 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098748473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110644126 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093856511 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092153252 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090177678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11483667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09160536 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091562499 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116024825 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091389603 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092411508 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110758295 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093887688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091282699 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110256944 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09758626 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091537479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.10958334 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093189386 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093136115 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096932647 seconds)
  done (took 2.971224845 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239529899 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097996884 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14102249 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122410166 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109034237 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123194873 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096302432 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096711953 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113247243 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103071529 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100893592 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113889682 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10972325 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11950369 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10203469 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102385831 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114410119 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103392898 seconds)
  done (took 2.894638124 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105687641 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092446607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15444617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094959797 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094294069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11206245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100090517 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112291334 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112899927 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094845979 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099310634 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111101963 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094270389 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093284582 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111063632 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094207268 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094117675 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1114124 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102496953 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098434509 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116062808 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100131597 seconds)
  done (took 3.087210009 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106947621 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093608487 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128518125 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096502395 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09257747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11055149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099616039 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093828055 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118598861 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093326025 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09377595 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092056025 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126066369 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094231426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098302996 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111716995 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094374848 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093162944 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111133684 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092803241 seconds)
  done (took 2.83042363 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192537307 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127038257 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108989755 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115836678 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128358693 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110001539 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135300307 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109809065 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108928727 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138002833 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113008436 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107823439 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136120498 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115568752 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127309675 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117796518 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134001375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118476365 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109562735 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126754505 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12050278 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108683862 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135245214 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109440315 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127750195 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110279255 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108651995 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132720973 seconds)
  done (took 4.22643894 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092068336 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092481167 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090583468 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110188375 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093106186 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09200964 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091071746 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110419222 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092171162 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092293898 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110487603 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09245269 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092388447 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091543053 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110941614 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093197516 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091803705 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110420637 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092931308 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091614128 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091711959 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111359977 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092169599 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09108267 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110598759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093593855 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09206036 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090642739 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110966866 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092852989 seconds)
  done (took 3.701868868 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105389271 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102663142 seconds)
  done (took 1.001968624 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099357271 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106893638 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091003666 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111597821 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099676105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092422323 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118676949 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099598421 seconds)
  done (took 1.614925767 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.164742833 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.188372656 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097383057 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123892836 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168696525 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180803281 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130455836 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117258516 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092298351 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084590366 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.182759294 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08450068 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113232621 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091276348 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092373394 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120302304 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093708346 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102262635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.11945566 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095725913 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098259798 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116612515 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096569077 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103728923 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107466828 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096421797 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095867857 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123404572 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09142027 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094102989 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112337862 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093779425 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095402773 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.116460972 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095434709 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.19026173 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101320823 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089825985 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113635855 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099142761 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125809259 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.113049443 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095920424 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091862822 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114557335 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09841289 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098065518 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.111717855 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087606378 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088627976 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112870601 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090270308 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09447807 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094127265 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113062698 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100348088 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094239868 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10951806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090536722 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090115311 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111791228 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089914535 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095363989 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114685829 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09514637 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093129506 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111110895 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094617821 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094931788 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112990646 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093058002 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108256611 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112379134 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099306382 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100085176 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.114467962 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091726033 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099041527 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110452434 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095776819 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097802292 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140893995 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09573276 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089146822 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106633321 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101233199 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095381483 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114715497 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087202882 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102427902 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.113993187 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095071881 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087564544 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092143475 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110290048 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09800865 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087202174 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113627355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093275243 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098850738 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118213169 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094580403 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095145201 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118015972 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101155087 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092453113 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.177133357 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090741457 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110203795 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097482548 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098602715 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087685587 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113198588 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09364923 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090811112 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108686354 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099532639 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092748501 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114371183 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098513006 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095409089 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114498433 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096089328 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092961002 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109530777 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09847976 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101954012 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113530093 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097740796 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094974994 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095192695 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113703333 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098011703 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090621315 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11837566 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091559157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093774507 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114697013 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099662608 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094119652 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109027643 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094564734 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094239821 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113164331 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097938417 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095147111 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109065548 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087871379 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095137451 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108369596 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096620876 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102200268 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109137747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098216064 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091056603 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121989698 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092716869 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099645001 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098502334 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.120454759 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099984802 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086303446 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11164511 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097173829 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095279393 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110593511 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096527292 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093251054 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119050394 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08798745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097108362 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105647167 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092476546 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098685553 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094333867 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.116231972 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090623513 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131256113 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125750875 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100116247 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094100484 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114167055 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100038151 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093107948 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.116558937 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100171835 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098479973 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110474439 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094399157 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099625316 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109336453 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098602301 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093166573 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113981253 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088565758 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095566343 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085951638 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118323502 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098414991 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099156664 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.119703396 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097688913 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092910197 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122932526 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091284183 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099094077 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106576607 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09965089 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104616613 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.119223266 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102090794 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095230644 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111192243 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097204496 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102925277 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115413592 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095759078 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097333083 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088170544 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107883919 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100527481 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097279819 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110578538 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094902186 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098911369 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116163907 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092765732 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087599749 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.125718995 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100576887 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091257661 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11342967 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092165232 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092596269 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120121477 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089137511 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09055963 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115568507 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099612904 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095362354 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094541582 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117033416 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101200095 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097360395 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116710234 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093436778 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102216219 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112083607 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09637309 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091135222 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116104523 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089291297 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096661205 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095068313 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.112669654 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091749468 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09794711 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120489115 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100189078 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092919351 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.120021347 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100849322 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109543669 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112366092 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100452836 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.0909004 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107806637 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092257984 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087738539 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115865136 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091717805 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099947922 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111596875 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095337164 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099613083 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115205043 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093390665 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099428926 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124588384 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091062029 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08864322 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111957533 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09653321 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091361405 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091447824 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.117224886 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096253097 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099265828 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118137266 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0924823 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094657027 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121114014 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092318309 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10060763 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119717774 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10304568 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091595694 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118062126 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093084165 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098369642 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107716951 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095948058 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094074615 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113044983 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093475963 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093971774 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110113109 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089723766 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091104048 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100622254 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114119622 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100336569 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093511012 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112790805 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09240975 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091113247 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.12079604 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094454665 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101531995 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115778319 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090627052 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08915895 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119767128 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097166521 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100796017 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090582032 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.11885838 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101611418 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098696726 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115371251 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105644973 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103851384 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121814388 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1012729 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088342705 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112415932 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100388975 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095756199 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117366733 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100071038 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09005032 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116215023 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102222317 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096906212 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09387549 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109896608 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097145258 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101628931 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118028607 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099740553 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097167768 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115968877 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092358792 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098074892 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119761052 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097294331 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102159329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114133809 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101275986 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091983595 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100152086 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116250772 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090779121 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088899147 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112890667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103093517 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089856565 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118526418 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101360057 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092609294 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113457579 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100630123 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09198558 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116333867 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101029229 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094179635 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104897638 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.118365687 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094633887 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099795412 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120303614 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091489027 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09382321 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114746792 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102560386 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094311042 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.120164863 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096651857 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100280217 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117757357 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102564127 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10058133 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100441022 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109601306 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102357257 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098031591 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.118768787 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092407376 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093787815 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.111111757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095393799 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102087347 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111823936 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104211328 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102574438 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112239394 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094026791 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10102956 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11305133 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104061057 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093087797 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116915876 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091080401 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098805975 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093937344 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.124162889 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092461724 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089668073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12118912 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100705241 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099716315 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118019403 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102867132 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089664465 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109974383 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098849655 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093922752 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124131034 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099658813 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094023071 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11319372 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098644434 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098183006 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103017141 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111188557 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093560746 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096264862 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117090378 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095682254 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090528065 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.119430973 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095705641 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096625903 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.1148043 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091361323 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093538365 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123538978 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096356397 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092272682 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11386961 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104021386 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095255581 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093073038 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.111012507 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101427427 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117070303 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105489137 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092450636 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095249705 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.115039045 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098620213 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102023765 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114425455 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096042788 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093651281 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122009616 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101210509 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089188673 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113193004 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107406849 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100298486 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116192666 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100972405 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095152614 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126112214 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104693302 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098207943 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110193251 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091849382 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095628024 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089332278 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119238821 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100873675 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094608869 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114329956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101237184 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100925216 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.119399514 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09991313 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091029743 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122443798 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095956104 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099041617 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089564252 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.111543605 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098801211 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101211136 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11565069 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096431063 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097392062 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118307362 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091781696 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093715869 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119363983 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101760349 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101722197 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11454729 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09662404 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101705393 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10487517 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.119614131 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095783111 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103318642 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122380828 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097045817 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094254228 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120710171 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103241042 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097774446 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.122309349 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095125251 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095981593 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.125111252 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103421965 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105048555 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11650934 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089987156 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099837186 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114410852 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092211582 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100327755 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125234123 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104961832 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095398775 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112404381 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106782425 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101066176 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116123886 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09514821 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094117679 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120345391 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096215808 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101087152 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092776524 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124108287 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103177023 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101587483 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126283349 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091648474 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101531599 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118895053 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10527296 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096598411 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110514838 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092623884 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099648096 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102831241 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.12302736 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099784717 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099063869 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120799225 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097521144 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095977452 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113701424 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104616556 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101428435 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118030606 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098753973 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095463527 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117136172 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100927781 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102048088 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10154632 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.119420174 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106225524 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102530456 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115647124 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094822843 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095927246 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.121214674 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098203646 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100712861 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113597664 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092039624 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101775566 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123106625 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096755604 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104175717 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122395212 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09686164 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099311065 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124255524 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103170214 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098147163 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097197219 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119645784 seconds)
  done (took 62.645923983 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147305893 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10693497 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119101715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098641597 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116446943 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120848962 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098485964 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099208258 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120978465 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108259824 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099199503 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118716276 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114796417 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138661379 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11730657 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109432633 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118521969 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101040295 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098438394 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119975031 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114381786 seconds)
  done (took 3.231172688 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117141339 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11171385 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132211177 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114712337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104791819 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130137538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109459176 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130557759 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112352946 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106287181 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132864694 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109173055 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126738823 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107145684 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106466684 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12918642 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1132833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10500366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132302612 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110300986 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128753278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111177099 seconds)
  done (took 3.430785936 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128958351 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102530843 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096503988 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119801515 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102159735 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098283454 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123172037 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099799037 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107058901 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114243514 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091578835 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094702314 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097312344 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120893439 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093187994 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098914266 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127983419 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103363814 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104185134 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11992696 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091686268 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100842783 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099971862 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111835174 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104656648 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104676396 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119879009 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103541803 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090238373 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122463372 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101013969 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093290134 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090442387 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111662575 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09104769 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103303159 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121203231 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101685442 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099609602 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089776187 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120747047 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103879871 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091225115 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121078342 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100900141 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093781576 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.123016429 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.10116796 seconds)
  done (took 5.903749093 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129381739 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.400945147 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103370603 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135440488 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134462345 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109417887 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101171502 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138455056 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100959455 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123579818 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114411349 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112216707 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12707446 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105950418 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125244546 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103700855 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10410872 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100696349 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127754468 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101878643 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125975541 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105579651 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111303826 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131821757 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106264764 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101129703 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122902 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105400749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11060431 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129531227 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10751701 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12778896 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115106062 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104400572 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121871942 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104428168 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113774577 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124184906 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104966455 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101546141 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123332838 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106954139 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10483333 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135246018 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104707324 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103245339 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124784803 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101176853 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110723552 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124582096 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109135096 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133251658 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105815864 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103443371 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12633635 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11268721 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102886841 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123129326 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105221168 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110721918 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1214717 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106168585 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113207895 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124039971 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107968232 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133258592 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107546164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104765846 seconds)
  done (took 9.052891289 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132300617 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105943478 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134133417 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113769689 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106774066 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127398889 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107351206 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106145755 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107453264 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11163713 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12659609 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22288235 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127065434 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112576821 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126650533 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108565474 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106796773 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128290465 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107537261 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106273805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127940409 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114765649 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106079014 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136020677 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117760077 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124254053 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108152216 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107429873 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134602692 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108770723 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116734391 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129850396 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107029116 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134676827 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121065046 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106622987 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122776733 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107127408 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106241719 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129502609 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104984515 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114769892 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128821982 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103992132 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106928163 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128748179 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115559266 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137961977 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113019355 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112304573 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128767811 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116577528 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127386004 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108787113 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115087666 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143530352 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115166207 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136420341 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108877765 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114849413 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137602802 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122439439 seconds)
  done (took 8.312582602 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102164616 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100830192 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101378511 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121795372 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102262454 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100230398 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099141741 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122440827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101253057 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099568389 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122217999 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101656924 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100827114 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099796874 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122463922 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101855618 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100265156 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122200774 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102686479 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100555037 seconds)
  done (took 2.989823905 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111613264 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117635023 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122790055 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10976564 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103524268 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129132596 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104199013 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102859777 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101482407 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125430401 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111417107 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130392912 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104456359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108471386 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132366174 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109382966 seconds)
  done (took 2.687873189 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122006959 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118343543 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.20960138 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104127215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126051505 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111071961 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103821621 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127463545 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103064656 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107699069 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128753372 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106041558 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103531773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125075292 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105508981 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105565417 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100940611 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128861861 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103414339 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21399447 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106347283 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10461251 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126918025 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106536954 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103545249 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130560546 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108473174 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102510836 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127989457 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104674917 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105645242 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132001853 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103618692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106815783 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.125736125 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105138511 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103223299 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12451602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107095726 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10323955 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.125051547 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106102447 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103954666 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10498235 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124642453 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103215635 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101906813 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129844225 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105219259 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104241217 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124601956 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108487641 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106391693 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131017615 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111770528 seconds)
  done (took 7.251770684 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11553714 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106341051 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135596839 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102667083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103934579 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104413596 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126849404 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105602925 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103847997 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123500867 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10656586 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10561919 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126226359 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106039272 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105692094 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125146396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102270473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105170804 seconds)
  done (took 2.878676493 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111653348 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103125234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106660889 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12486786 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104191161 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103433982 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123475076 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104169555 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102269232 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123772081 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10535741 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103833385 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101015305 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125712725 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103879302 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102619592 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125177186 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102432257 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104113419 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123098452 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104682053 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102633066 seconds)
  done (took 3.288979628 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117265352 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.212692971 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110012139 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.220986915 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100953457 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122317673 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110172539 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101335216 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138837195 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100189238 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098863536 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.121964435 seconds)
  done (took 2.428336251 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134063867 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140174606 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126924422 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105789082 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113601065 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130017638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109295778 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107774205 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138771661 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118874821 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129563728 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117947539 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116052121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137795745 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112180101 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134304733 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109706451 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107765337 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126911277 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124313568 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107929494 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137108136 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107680603 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129262106 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109454551 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115808612 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138331581 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119118678 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127787217 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118142094 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112288217 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129978044 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118104774 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119524429 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127001558 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116398933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128450146 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124976686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112124774 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136996293 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106735429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132653585 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117007933 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113220112 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138211306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109016631 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113433967 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130288661 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108868211 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151653466 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1132337 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116532648 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135936586 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11564772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137529885 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130650309 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141557144 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118004204 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112467253 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141251926 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115984729 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135458616 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117533975 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141574866 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113969304 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116192183 seconds)
  done (took 8.974993303 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143923387 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104763858 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13118608 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119659598 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137572863 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109342796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109512755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130198426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110092418 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105137457 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172853996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109514773 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137597295 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118339343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109706336 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130027985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109952012 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116356345 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128450466 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129764309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130101347 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119053897 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115885259 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137529374 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119507657 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134890802 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109792286 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108991097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130099533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109855812 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113530114 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130918871 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117334282 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125464513 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117975007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109098343 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130913538 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115268983 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107902619 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135353191 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11668296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145889321 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110625999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108519183 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142522065 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109178504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108105168 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129362334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110631226 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105822238 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141393751 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119536601 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141587508 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118608946 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130296251 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110488265 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109465616 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129927863 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110742564 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113672206 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138936751 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110899791 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15008921 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110345668 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108730824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139895016 seconds)
  done (took 8.937221302 seconds)
done (took 169.823757835 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173984228 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.213637375 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.194950535 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156861546 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094697153 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153773692 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127843837 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.196890421 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095637975 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094271163 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116807268 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09836913 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.16209919 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094537668 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119232182 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097607173 seconds)
  done (took 3.059451878 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18481773 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.33145271 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110107589 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121890155 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102071482 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099337898 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122698206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101934858 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100799542 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129968007 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101103338 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096694777 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130057215 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096470841 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100540885 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122192509 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108133844 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099663841 seconds)
  done (took 3.145433085 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120661503 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143988124 seconds)
  done (took 1.156872511 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130787114 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214453714 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285413139 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169973042 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121016588 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141342293 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150119899 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133832177 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190785104 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134623122 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112628023 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097386517 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148892379 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105468939 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136357484 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099568861 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128622021 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136067781 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113749929 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102036274 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14622364 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104472479 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105158293 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137252242 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180001267 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135206555 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104237409 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102774881 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124067457 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114501272 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105853145 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140363564 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112155206 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179858301 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102708047 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175367919 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128229521 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10107313 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114425762 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121644016 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104665994 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104316004 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135389956 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098351013 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103636949 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130011061 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104742043 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103268565 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130551627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108603288 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130915163 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108116164 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174786662 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108570443 seconds)
  done (took 7.915818634 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.870727938 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14042683 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099784742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.014250663 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145472878 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113906538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.862215838 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147056856 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249538872 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.860146186 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116946911 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107728941 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.258760824 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256940791 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.290552407 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359309492 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.727308075 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114186073 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129770942 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163279034 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10896838 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144913212 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120223711 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.51350649 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101449279 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099795924 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131326584 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108901403 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177436322 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101838003 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125556098 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171789375 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291121183 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209512195 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099622406 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122203116 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101340502 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184265814 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271499444 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218659559 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.192876057 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098727707 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099105914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128898553 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122438389 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098092147 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176633121 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188353843 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186186731 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106280588 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1086358 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13260628 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107321372 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177232487 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098341435 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355829546 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357725661 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123126247 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110331924 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134021358 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267979213 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101591239 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234052025 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148913938 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214366656 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101073724 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830658854 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184664015 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100562435 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105112019 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129647281 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10707101 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10629775 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18778814 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.497974817 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110749033 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10472804 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121938945 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235123517 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101726616 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101002463 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179210634 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10191808 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132433147 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113171037 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130845462 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164690601 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269085015 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110691579 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132663055 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107097344 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134596697 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103210074 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230342853 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228890735 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17367544 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205455922 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129957151 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.155105128 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182469225 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126372215 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166821309 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129217572 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114174465 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106835846 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.242838888 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134044293 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102108983 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128490697 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109437071 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156377704 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105373035 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108376886 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186867532 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.552597774 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183595216 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098977345 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104626505 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132623016 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156096779 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130568176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263871672 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110118379 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18425867 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107743231 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120803477 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110096295 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180465456 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108968642 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131102133 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108901838 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109455804 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278427751 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219368544 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130701198 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250600032 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177194569 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107212204 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190588544 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13036647 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164295113 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134024776 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108807713 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102181735 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835582446 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115291554 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109494898 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128006504 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183476895 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122727235 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104502478 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100775666 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098409242 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813792539 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12925759 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099417049 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103323752 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128871745 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109739109 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109516974 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130065739 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175692923 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246211859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111144077 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129630907 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102138905 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176418086 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102950211 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100610243 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123362657 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103667058 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110329769 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127076871 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104554032 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187063771 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152990397 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.248209673 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.651398303 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103636327 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101023238 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238523099 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123936108 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326928121 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109551883 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231595157 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180971293 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098366468 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.378207416 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160714919 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205828983 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106041953 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189149672 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099132132 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133691959 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154601477 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12370095 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107756271 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175657876 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113116932 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134132485 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.291438303 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102818745 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249679818 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100354089 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189056496 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10205032 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128363027 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325308057 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101940434 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116574513 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17694164 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127696854 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104331126 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.625628507 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102579749 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113657396 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128931481 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231991505 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184494608 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110995135 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132422094 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111498289 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176619573 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209709944 seconds)
  done (took 47.534171629 seconds)
done (took 63.693136485 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268192958 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176987307 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281435916 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178668503 seconds)
  done (took 1.881652796 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.274316655 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161824066 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.254022026 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099564139 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262052073 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098916387 seconds)
  done (took 2.060309033 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179686806 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171042264 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147787706 seconds)
  done (took 1.410491589 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202185564 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216375556 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331640689 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234406818 seconds)
  done (took 1.980211051 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.291126206 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119566383 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126259098 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.234087576 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.250495917 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209629973 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125271234 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177253435 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130231946 seconds)
  done (took 2.61622642 seconds)
done (took 10.860615079 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.277465822 seconds)
    (2/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.164144665 seconds)
    (3/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.399940939 seconds)
    (4/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.311640322 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.237389057 seconds)
    (6/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.300074296 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.195678157 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13965492 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.214807122 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.138864161 seconds)
    (11/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.187621226 seconds)
    (12/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111634373 seconds)
    (13/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.285754607 seconds)
    (14/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.196440252 seconds)
    (15/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.32344985 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159075095 seconds)
    (17/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.151603427 seconds)
    (18/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.212493111 seconds)
    (19/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.205465466 seconds)
    (20/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.175345383 seconds)
    (21/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.293533817 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.212302427 seconds)
    (23/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.286561216 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154386641 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103070849 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.386021081 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.289984867 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084015476 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.235934039 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16952509 seconds)
    (31/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156462378 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107591566 seconds)
    (33/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080410474 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.399353506 seconds)
    (35/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.135174113 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131426831 seconds)
    (37/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110222576 seconds)
    (38/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.304735406 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.141194568 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173669308 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111228544 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.224701599 seconds)
    (43/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.191836442 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153211117 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122884319 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.117276422 seconds)
    (47/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.304469184 seconds)
    (48/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.142217086 seconds)
    (49/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.220141881 seconds)
    (50/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139289264 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.192397321 seconds)
    (52/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130165984 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103087632 seconds)
    (54/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079555561 seconds)
    (55/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.144445548 seconds)
    (56/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.101096594 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084859295 seconds)
    (58/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.164691354 seconds)
    (59/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.145726054 seconds)
    (60/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112087228 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102882575 seconds)
    (62/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.228940468 seconds)
    (63/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.149919387 seconds)
    (64/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.174331287 seconds)
    (65/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086643443 seconds)
    (66/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103664358 seconds)
    (67/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152432068 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.145333361 seconds)
    (69/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11191765 seconds)
    (70/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.208391134 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080068806 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.105013747 seconds)
    (73/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139754912 seconds)
    (74/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.105771062 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121578889 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078611314 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148715967 seconds)
    (78/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.164988762 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102708256 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.131466411 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.191177359 seconds)
    (82/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116848364 seconds)
    (83/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.101276077 seconds)
    (84/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085442652 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.172101203 seconds)
    (86/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.230585233 seconds)
    (87/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.139100203 seconds)
    (88/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084697233 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.149308593 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.135024525 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134341327 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.131756329 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125374412 seconds)
    (94/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085055754 seconds)
    (95/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084061259 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125581403 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081129923 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.1109903 seconds)
    (99/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084731228 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108222567 seconds)
    (101/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086791983 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084774542 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.10896052 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.151607298 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104173948 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086461483 seconds)
    (107/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078720467 seconds)
    (108/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.100465899 seconds)
    (109/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079937355 seconds)
    (110/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078603596 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.13704684 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083427405 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155431377 seconds)
    (114/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.130200419 seconds)
    (115/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083522589 seconds)
    (116/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133143448 seconds)
    (117/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107752406 seconds)
    (118/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084131578 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084341082 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132073678 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104412277 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085047206 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083919305 seconds)
    (124/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.197532165 seconds)
    (125/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11168353 seconds)
    (126/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087702002 seconds)
    (127/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133621949 seconds)
    (128/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.08203253 seconds)
    (129/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108007288 seconds)
    (130/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077124654 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.126708955 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085991113 seconds)
    (133/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079424446 seconds)
    (134/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109516154 seconds)
    (135/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.13237181 seconds)
    (136/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078555101 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104646599 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124019017 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.147431856 seconds)
    (140/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078586102 seconds)
    (141/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081251133 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078775124 seconds)
    (143/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086325113 seconds)
    (144/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.106988555 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108278105 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102764744 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085724251 seconds)
    (148/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.158451911 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113264295 seconds)
    (150/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07762814 seconds)
    (151/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080536591 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128496383 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.081013435 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093093682 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084095182 seconds)
    (156/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104458128 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103216001 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105212192 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079550185 seconds)
    (160/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.104189819 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105901576 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101885993 seconds)
    (163/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.166892838 seconds)
    (164/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103084314 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110489282 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14871989 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112815077 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106229894 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102943519 seconds)
    (170/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13734802 seconds)
    (171/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101878849 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101816033 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.126355641 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086117229 seconds)
    (175/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086075272 seconds)
    (176/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081893415 seconds)
    (177/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.138197609 seconds)
    (178/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11467494 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104578802 seconds)
    (180/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.108472529 seconds)
    (181/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.080733809 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124712527 seconds)
    (183/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10195246 seconds)
    (184/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.107446771 seconds)
    (185/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081633016 seconds)
    (186/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.08073562 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10549435 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128470662 seconds)
    (189/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080004745 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078996221 seconds)
    (191/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081761781 seconds)
    (192/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083433821 seconds)
  done (took 27.130349204 seconds)
done (took 28.045741595 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.223732599 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128672843 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112315573 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111598835 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.229334906 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119485719 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152950608 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113724651 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122088235 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137669481 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101711301 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125036683 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136088984 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.204484969 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140489537 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104504717 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10255642 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147756999 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126986195 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127473021 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.229177638 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104523757 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146951039 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103737125 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231859344 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10620105 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110797785 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.13851749 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124907493 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111914282 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138071425 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104738495 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127402557 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152415872 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103647102 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112069862 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126405928 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086729543 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112963754 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112888038 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150745803 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11338664 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112450769 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127687216 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112998161 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111951869 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128226691 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115516971 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10156499 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137602394 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105862403 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128310823 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.135792369 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102982941 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102479639 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127829088 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124413991 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10405302 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148770731 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104443166 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104314064 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102647174 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138543689 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105304288 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110850691 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12825968 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112496103 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113896361 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135073135 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105491413 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102627443 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.133508023 seconds)
done (took 10.098442962 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108782676 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147275036 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.229277567 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.23309948 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131523784 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146067484 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117657238 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126990391 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14217637 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122159703 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139750354 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160063619 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.237902982 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121025434 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119067457 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141464851 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116303784 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111581493 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.233285511 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153000718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129369329 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119808977 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155396292 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120942002 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106462253 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.155831503 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111839975 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116287861 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131658641 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125630755 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1501492 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108079638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110552604 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149724969 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1269143 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117647308 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144638227 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116018216 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107912577 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.130751112 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116869151 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125553518 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131695175 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120895826 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115472991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.147595048 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115469088 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12015641 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132289367 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11639836 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109641827 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158049428 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120558226 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123518666 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.143845561 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121056565 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120836064 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.14544093 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110855902 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119213255 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132978886 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108557614 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108670988 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15334964 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111392525 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119796004 seconds)
  done (took 9.772343709 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131214723 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136612067 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142017502 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119350865 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112536783 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125483629 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101644 seconds)
  done (took 1.834099333 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.106074941 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.239122642 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.213637171 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.239344899 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.239409981 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.252794249 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127556139 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102418745 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164902532 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114011025 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.241875639 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269387839 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113001457 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14377482 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.217418563 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128294018 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.218142877 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129732975 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11800934 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.243838898 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121330288 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160381365 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118225649 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103037664 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.235326633 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104595213 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.288084416 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148122429 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11443386 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116725065 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144630602 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183423788 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.235967094 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118234391 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137922662 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.239224483 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.2111244 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14516015 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226978673 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134508737 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.236592006 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119275555 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119524002 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144460455 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120049753 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.228262676 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122502978 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119058238 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143568899 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219281173 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142033946 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.237167497 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116948108 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118394152 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139954686 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121224523 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125262358 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.145507645 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.220866308 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14734365 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.239371236 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214688557 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.239849406 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.242498983 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128504019 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242591103 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.227303344 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118242016 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113115771 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145758921 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.242042756 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119229274 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116589059 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.232963636 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120864236 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.244861983 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.244004273 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117067188 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142120346 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109507355 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116908355 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103828575 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.233846618 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142726925 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116534169 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122783973 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142915145 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120034948 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109872075 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153676437 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119649962 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116056441 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.148468381 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118894749 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144217805 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.220724737 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141392611 seconds)
  done (took 16.933932347 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111649713 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106333273 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109858881 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130951781 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107307045 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105889397 seconds)
  done (took 1.660892042 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147929054 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120552036 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15168433 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121550653 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167656157 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.244502983 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.253017182 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112483662 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165509866 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131612442 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.248923662 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.249635758 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.248598945 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124183489 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.252993146 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121822056 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.25568577 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117714528 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152267117 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116981194 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118939104 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148111219 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116917587 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.239982743 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121664288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120310864 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138895951 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129488141 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.145737958 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.14166428 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122993217 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143377292 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112915908 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112644098 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.252134635 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110046393 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142899089 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122241762 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12123487 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145841806 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.25199776 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118055434 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125363004 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147321815 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114668283 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111296008 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147083854 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113106587 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.253695885 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121684032 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.146980957 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122226796 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12112554 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146668222 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114600499 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114323622 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145761286 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.228640122 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150121763 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112988548 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11941025 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147017459 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113982055 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.14867596 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121627493 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121333708 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.134297989 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122947536 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116926097 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145027662 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123138839 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120016845 seconds)
  done (took 11.751742455 seconds)
done (took 42.907208738 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.735763574 seconds)
  done (took 2.727847348 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.944447723 seconds)
  done (took 1.937742782 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.5255786 seconds)
  done (took 18.547389271 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.441829709 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486647404 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.122826164 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150150724 seconds)
  done (took 3.197542416 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.832507139 seconds)
  done (took 1.849409306 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.330844791 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.240422025 seconds)
  done (took 1.572277127 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.715336067 seconds)
  done (took 1.728576437 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.52249503 seconds)
  done (took 2.523411856 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.296822417 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242284416 seconds)
  done (took 1.553616033 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.641312299 seconds)
  done (took 1.653615897 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.181121553 seconds)
  done (took 20.197867925 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265287186 seconds)
  done (took 1.277704622 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290897868 seconds)
  done (took 1.309038872 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.51534242 seconds)
  done (took 4.536593057 seconds)
done (took 65.617783844 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120401313 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11899771 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117737766 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14149426 seconds)
  done (took 1.507294427 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.130496128 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121739883 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147013561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118646487 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12620962 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.143979188 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119688237 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122592436 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119191449 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145803981 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120042636 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118006838 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147893087 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120933784 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116863351 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146563934 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124059635 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120045483 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143848148 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120121928 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119670691 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145775832 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123839074 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121976012 seconds)
  done (took 4.102773179 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120338261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111432811 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111387677 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133410762 seconds)
  done (took 1.493051128 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133785837 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132361248 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15355018 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126122973 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132841763 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154494828 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119105679 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115983214 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14375263 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128017088 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134917595 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158718295 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132109146 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.145651405 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131361112 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114001248 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119358344 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155975059 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126558018 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153896105 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120916036 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126299408 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148973728 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129200197 seconds)
  done (took 4.252521903 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.198333123 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130784009 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175457053 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165207903 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177916125 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118153637 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146022851 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151111124 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127069771 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.147139481 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122451387 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165505839 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151061885 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121891121 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119191624 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15040453 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132307122 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.149188275 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.166365541 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12416306 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15189825 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131636649 seconds)
  done (took 4.243529067 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125589454 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110598653 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131085194 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110545634 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12256101 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137674066 seconds)
  done (took 1.758121875 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112499314 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105811027 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104427776 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129682302 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108928834 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104432613 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128195515 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105964633 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10489373 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104795604 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129932399 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104910421 seconds)
  done (took 2.349792976 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207898329 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146497333 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256139586 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.428601658 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16559384 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187271281 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282509989 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18962704 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204315675 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138804056 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21541727 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163351364 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181605012 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186720219 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167177072 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159490833 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193848933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209322925 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171364005 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240691649 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159253278 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207115309 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191775295 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176806351 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140603662 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189685654 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120610775 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154220301 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169609676 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193206112 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204222785 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153245823 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140664573 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219904423 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259525032 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206765532 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271103585 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134479379 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198338258 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190964548 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257561286 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168764007 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219019378 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152937839 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129262932 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21077576 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179261108 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184848418 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.159047381 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145698655 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210838574 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179160093 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198723949 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136879409 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321857943 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161284912 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14441098 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206055011 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188606425 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231000668 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204788454 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122926565 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201509912 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217521559 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214797703 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16869725 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165365831 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151782916 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165169922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232436633 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210863942 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159758109 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.236323051 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160611315 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170884658 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195668828 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155796753 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234495418 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200232524 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12125732 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177217279 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13718454 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12636987 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.215439628 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123244888 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243395227 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132654331 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340115504 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207333182 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155571182 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188606337 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159951764 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191184854 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14738853 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128530738 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143003783 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187494903 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158808295 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154568614 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156395419 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139415069 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153545882 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152883849 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148684191 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169708174 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159462134 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164565832 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197411713 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132370005 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207063465 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149932063 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187875906 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169432433 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220468565 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12942734 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160240052 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247609016 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170571268 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.161392177 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176140166 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224211249 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147413572 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163003389 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1650457 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221400649 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141941802 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226783824 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166981858 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135771538 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165884132 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172358951 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187640734 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159854676 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153280161 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.165152725 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220624752 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126458251 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166280108 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180915008 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160899827 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125618393 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135769973 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163201929 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142915933 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.176123238 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140180643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181749761 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168528083 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190854434 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157999276 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161337345 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17355345 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15814067 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170397703 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175894275 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119090908 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202457771 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197028125 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157402135 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182661738 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189081478 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207554267 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172399833 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158423693 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183077392 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155066013 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122075668 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188397881 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170375496 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190602534 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187349772 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206569877 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194852195 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161900394 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178245126 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196645036 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185379837 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184756764 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14383934 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199708795 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170105553 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.149638863 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125298589 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127517351 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164600989 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133152704 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136796224 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208721345 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192338324 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202782982 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166700682 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163542964 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190256712 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151618553 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162173112 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203783788 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139306774 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215779859 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189676707 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205277136 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166940146 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165271876 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120082095 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153823419 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133944011 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188581618 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13791179 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161789814 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144651491 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218056568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172147755 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175322145 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217149477 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16581562 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229214575 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119981642 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189202723 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169329088 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195390556 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185354296 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157886813 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162208767 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218813359 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14188458 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220054124 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167936326 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20873025 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223564698 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164834949 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157900153 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148438062 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18809896 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139168385 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19075163 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14768419 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130035066 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180334634 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137325918 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167346286 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214049577 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145235102 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207279938 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157918307 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199960573 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125143222 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169712305 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17300426 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172798924 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104929756 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196747486 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195983902 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177946703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156178852 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202283784 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130746678 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341518222 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187120406 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205775839 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162522568 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140238877 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197286713 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161472289 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191428141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184523707 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169567703 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207253942 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198207317 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142581175 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159203024 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148467903 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179557523 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139103009 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.18246064 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162230865 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171333635 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216085322 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139451482 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168645798 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205692499 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144181628 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178359495 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138497577 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251589663 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196096492 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173490882 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191486901 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167258412 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210604653 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123552091 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154834898 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134350891 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211678463 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130843421 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204454328 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.166455347 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212342285 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202384677 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162440342 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169056815 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128937353 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192122944 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150676177 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212307565 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13592411 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165939405 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192013159 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154969434 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132252072 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188392794 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288129175 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175802677 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174666823 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133266258 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282040252 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156776465 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133181655 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18806318 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172228384 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15955129 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183926714 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17730773 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167350375 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162590269 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163966439 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206474512 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183904041 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194984524 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202713223 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146999124 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188089299 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163571702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202321917 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146834974 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174725368 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160630075 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223072912 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177334218 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.159246566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168120057 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197051964 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171955531 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20331316 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139114322 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211431868 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127928755 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19412758 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137779264 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153422586 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161398991 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193511024 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131051327 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204382726 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195677752 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133565558 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127503672 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176248187 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166290224 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169299674 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131313494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214773845 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129569205 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210557019 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207792363 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158304025 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168492957 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175018673 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130931994 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165717919 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145497159 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129995576 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.199240434 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183338739 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157677782 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177902483 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194024177 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19061202 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1586282 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170433925 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.265595753 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128424321 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21896339 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149491883 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225303033 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177710571 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175872984 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197059895 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151366862 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192460253 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148884509 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24749664 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165949798 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194796036 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131499298 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170616377 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140433422 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133186528 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180286786 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16780273 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171270554 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136615552 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196751113 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146183993 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176892809 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142447544 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228444497 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151777571 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215838807 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215563835 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137652026 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203139639 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176428673 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15785671 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.166399832 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200004535 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143314621 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179134992 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134480167 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165341537 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215537067 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152994578 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161217735 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201144425 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169242411 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199563846 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.138408604 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205928202 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141313133 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203998528 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127715017 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.180824098 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169723161 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161048135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127991852 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170297925 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189330649 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.191306491 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144461143 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173809213 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221427568 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123409921 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162172354 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285632089 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190290387 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220908825 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136714682 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137355175 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174884385 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159032166 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193287971 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173141903 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159718204 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131052278 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.17110745 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157125276 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141933518 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193415185 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208170483 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163393449 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214380128 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136402403 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279494702 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143069463 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197122887 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11663944 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130295581 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167901364 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136745905 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141418107 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210058216 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242543319 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162395464 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176430853 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135030731 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155070112 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130910958 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.656800907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181060433 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193354552 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149191418 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102835606 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169796115 seconds)
  done (took 86.084979457 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166224676 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151006625 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167745043 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221863476 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194549119 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289882058 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22775443 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245572472 seconds)
  done (took 2.77203423 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124329491 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15907268 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14361857 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143530776 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110179389 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.478275345 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161213878 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121537538 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16263426 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15237062 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135563147 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.568603291 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116901614 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145356525 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122105426 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135309161 seconds)
  done (took 4.081990727 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.63541441 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531187436 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.885936537 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.274744161 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.261219082 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.204837392 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.755654549 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203418768 seconds)
  done (took 11.848216742 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.170484655 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.163394907 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.443558882 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.303022117 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.183864743 seconds)
  done (took 2.379214767 seconds)
done (took 127.886210585 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131092475 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123971883 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123361024 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154528582 seconds)
  done (took 1.638455933 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197587792 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091615539 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093156484 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118137212 seconds)
  done (took 1.615366688 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.470430259 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09119274 seconds)
  done (took 1.70408857 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.161840368 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138460849 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166720551 seconds)
  done (took 1.589813932 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142617995 seconds)
  done (took 1.253498694 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131840877 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126770137 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.265376746 seconds)
  done (took 1.643355681 seconds)
done (took 10.567194425 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124710035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.932433401 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432869653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135518017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710686912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426851172 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422561026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176034489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176278858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138028261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133107735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690902568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.432814597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881279607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394276573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.908909845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713198775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113133695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146488754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114032095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.401076535 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137393922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113128678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112494644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.735000561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422348196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111303471 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919477702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111112706 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114749755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427535277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111708785 seconds)
  done (took 21.029099709 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118361595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169767988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146160833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113512849 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114948952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139237033 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123978678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124306725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204040691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112221736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162191162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11187867 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117179508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13967333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137432651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110894471 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141251572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114268493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11998229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13926165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134458922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110483294 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.14047814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115576463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111329742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16003317 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11175967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124152993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138583693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116359634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116600373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138539212 seconds)
  done (took 5.303508161 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160790144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179235633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14810856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150058857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188587015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113518358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226233665 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151695393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204196053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112706176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133693863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138043919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152530277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112903807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165546519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111850401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115496855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141385824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121121629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113265262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161179002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11126862 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114044608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141273158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111888354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15999048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113281438 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125204286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138600586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117273869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116616299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139162323 seconds)
  done (took 5.605528841 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129981872 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127427429 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133897736 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162269294 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121398865 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124949788 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153450288 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120945427 seconds)
  done (took 2.19484542 seconds)
done (took 35.248023392 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141429578 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130787521 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132536519 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154949164 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.249337771 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121155785 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130328434 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119210066 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157131375 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133482366 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111407865 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148988751 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132887471 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122347407 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.250811965 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128519711 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.256516045 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.253674786 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120528935 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12916228 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150837104 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.227389083 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154650253 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119535939 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.242994862 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115615013 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.247041684 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123667709 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121514165 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142572076 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224937612 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.154485683 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1199375 seconds)
  done (took 6.38585135 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.238551681 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152098677 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122995699 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120374171 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120895144 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148216743 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.24029471 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150835191 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120219162 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120389621 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149202211 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224184667 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159564481 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116909895 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12324899 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109740798 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.272461796 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.152110556 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.113860521 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094592518 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116550485 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.148471435 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.254223266 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.145995188 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120097673 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.11967267 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.151634701 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.127009617 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123637527 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121771074 seconds)
  done (took 5.619362922 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131659551 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134608212 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166651323 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.189627926 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151114396 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161877026 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140558847 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135577674 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170895692 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115133578 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129429616 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179884997 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131928735 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124780002 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142841771 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133366343 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13739483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144052406 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123826749 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132266892 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165100984 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132053094 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137680344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150804402 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113499812 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121192471 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15313211 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125831478 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123349258 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158018717 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117016564 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11830235 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.144261942 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150272371 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115762066 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158886288 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141949116 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127274934 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157277933 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148498301 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118508539 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144467541 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140681113 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169179183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144703755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129027534 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126896192 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158398967 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113956316 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133408054 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185990383 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114883573 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135797256 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143006777 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11323603 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12321839 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144299268 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.11989177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129363172 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.144994738 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.14069458 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122100794 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155162762 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117951412 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125367946 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113178314 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.142058164 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119434404 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140617215 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151962935 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.151657123 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114443083 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.156114026 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12858828 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125188469 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156048005 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11505179 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125887613 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15461802 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121092056 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129465956 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145618122 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119143054 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131146645 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163617262 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130027314 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125628161 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156612473 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11937368 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116661771 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160601848 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116354753 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119633908 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128190189 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144681674 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118878849 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127422584 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155891823 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112732343 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140916712 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.147538807 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114875847 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139719607 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146472668 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121583137 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123579843 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.185620085 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115076878 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126111745 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157796358 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116148529 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122287749 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146416116 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.116710975 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133883401 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158220144 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123910489 seconds)
  done (took 17.15492988 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.356465102 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.338809646 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188036441 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.422265022 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.12835305 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.269787025 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.338362033 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.339903906 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114285455 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179098441 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175310483 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.304733425 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146194539 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144713098 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.339072846 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.394987193 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175677989 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150779466 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179305761 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128411902 seconds)
  done (took 5.965055242 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137357713 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149782456 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166076751 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144127525 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124963409 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160130832 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116902329 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137181693 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155960186 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126455854 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117986495 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159141023 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128818355 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131198751 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15815895 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146544132 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122027401 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149365574 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137953789 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11951741 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131150007 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141380951 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123874794 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16627533 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133965914 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125345991 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142423728 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120891852 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122316258 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153219464 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120241809 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134156217 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150520721 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106500014 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126360161 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158017818 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122638159 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118828863 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119734378 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147622732 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132137308 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128011415 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.152143831 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099751951 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134261715 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110161927 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158089811 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128200601 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105834654 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163291306 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129387796 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129643427 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150649287 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138512955 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121639593 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.158897692 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127449203 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131135292 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.14866043 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114750539 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114183101 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117878715 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152546322 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130390984 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126573587 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163371824 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131963116 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114462048 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.148868194 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119937446 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119648252 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158636036 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136417755 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123698713 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.152392684 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128841218 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123540499 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094128358 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153471324 seconds)
  done (took 11.789184909 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145475466 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126128459 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160461078 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.15240284 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129179504 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.147603216 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128397948 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135577972 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131616373 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163399964 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130388658 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128284345 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165596888 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125933548 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125720105 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160587825 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129135224 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.180705212 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136726114 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142166997 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.159066889 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121979547 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128520891 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.154366428 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145360704 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126695275 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171464179 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130302339 seconds)
  done (took 5.150709942 seconds)
done (took 53.186647661 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.280793468 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.47373733 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.26242545 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.259625733 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.274780707 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.274767761 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.254876966 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.25615733 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.627371374 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.227001335 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.256540587 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.254837183 seconds)
done (took 28.860456875 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.331346369 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.238225093 seconds)
    (2/2) benchmarking "String"...
    done (took 1.542414155 seconds)
  done (took 4.931183466 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.253476538 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.245883596 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.495937993 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.246029713 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.249860471 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.249862237 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.256249502 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.255886405 seconds)
  done (took 16.147767583 seconds)
done (took 26.81757274 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.283049524 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.433258107 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.480148754 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.225826063 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.247614004 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.253387164 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.251253282 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.272526644 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.261724723 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.231461219 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.647939573 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.510871488 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.24999679 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.623051535 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.223366345 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.279173586 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.247101296 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.47574973 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.251511801 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.275834083 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.224555144 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.241522616 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.279480096 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.246371753 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.252473957 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.257954704 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.243652199 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.250107148 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.43178132 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.266994557 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.282977328 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.249350454 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.25232208 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.251297498 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.245507993 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.245959472 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.432018426 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.25205797 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.228933365 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.264790409 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.441356219 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.265042325 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.246002368 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.242174235 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.225422522 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.270886889 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.242374108 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.356153646 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.267354719 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.262312717 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.289408855 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.620756031 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.260035173 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.249526388 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.253807273 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.468430939 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.261627423 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.293287017 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.267927934 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.251501007 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.24665586 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.248924557 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.31079361 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.26063322 seconds)
  done (took 146.380557445 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.248248146 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.251493835 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.249296989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.311902245 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.247569281 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.250613692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.246750701 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.247981944 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.251683873 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.245517437 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.252271991 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.244002855 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.265078084 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19936432 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.255120606 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.26976276 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.248711024 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.263989368 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.256666938 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.244467083 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.247837711 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.250560593 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.25812424 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.247503063 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.280079981 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.319336045 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.26503984 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.271066034 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.258498465 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.246601295 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.278804608 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.250469816 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825534924 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.121851538 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.260791117 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.261301703 seconds)
  done (took 81.844513064 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.247766873 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.248251535 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.246489516 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.277149359 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.248341685 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.780535912 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784406689 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.217232942 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.381437905 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.473721127 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.417703713 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.245290288 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335574475 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.25710918 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.248090949 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.265110489 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.274026897 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.252434957 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249958298 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771501097 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.26275415 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.333697507 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.411736974 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.259178788 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273900778 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.634787222 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241389297 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273840318 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.567517968 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.287099201 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.244614878 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.526682599 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.206963973 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.242937702 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.241698316 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355140033 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.243112653 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272019239 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.243969475 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.519380483 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.242220836 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.244969114 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.242782769 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82012086 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.246061655 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.753633897 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.245453347 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.13011944 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.241129446 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237707037 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.142076856 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.761431839 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.247839504 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.247101094 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.245788448 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.245235393 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.244605826 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.274318527 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.15981982 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.334635197 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.244942298 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.245611461 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274211537 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.245849981 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.434638291 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242279179 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.049981026 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.299817702 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.345748159 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.74161176 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.248218255 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335139781 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354592738 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.242739788 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.24343864 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.241951242 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.246662729 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.351500694 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.24519712 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.2444505 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.881554231 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.406760172 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.255524449 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.380651208 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.342112037 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.244018468 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.518198875 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.250876682 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.246798733 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875283006 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334748184 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.245126192 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.2434169 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.244909338 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.877502215 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738393898 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.424424762 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.242510612 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.716962362 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.250706343 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.247133986 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.046834065 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.731711747 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.817494823 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.250234068 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352818688 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.408581217 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.261138361 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.24853518 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.349291578 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.249772112 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.310406718 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.24660706 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.6459083 seconds)
  done (took 376.090150127 seconds)
done (took 605.464505909 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.056922356 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.007605263 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.157932299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.018083261 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.999193375 seconds)
  done (took 11.388610259 seconds)
done (took 12.53684649 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428147611 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.428503544 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303972915 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.425482993 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280518187 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.440084595 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426832876 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.264992496 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.353642672 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.323168166 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.353788637 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.292548951 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283096477 seconds)
  done (took 18.755585729 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534762686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.26311361 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318511215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510260051 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296727552 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523420317 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.571204687 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.259381114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42129351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268415553 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.269529122 seconds)
  done (took 18.388089031 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536244444 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.260379274 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.317821743 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504753375 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293811152 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517862882 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.572482792 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.257459941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424624324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275512753 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.269108246 seconds)
  done (took 18.381011148 seconds)
done (took 56.675387465 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.287377049 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.339783113 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.284040015 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.268247456 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.266047422 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.265467093 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.267732983 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.266652967 seconds)
  done (took 11.39656659 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.269249403 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.266149333 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.266260373 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.267341101 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.267564751 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.266555087 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.265089028 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.266575981 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.264493005 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.266171532 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.265281383 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.264936378 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.264063394 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.268451591 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.267549674 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.265263158 seconds)
  done (took 21.412839759 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.271722691 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.26646474 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.267272571 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.267000846 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267742807 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.26669175 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.26766961 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.266876259 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.266120879 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.267934269 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.269032654 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.268072864 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.265797746 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.268190871 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.268634203 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.270582376 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.268390584 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.269258908 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.273385764 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.266880659 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.268844598 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.268842813 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.26961809 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.266837818 seconds)
  done (took 31.591002319 seconds)
done (took 65.550345794 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.253264067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.269446249 seconds)
  done (took 5.675771405 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.330769375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.324042312 seconds)
  done (took 3.808157369 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.270010229 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.26644286 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.268701847 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.268994809 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.269320942 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.268361304 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.268641482 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.268799478 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.269808473 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.270037737 seconds)
  done (took 13.842332725 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.271147295 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.267668045 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.268868771 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.270741267 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.26658666 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.264386306 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.267501419 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.267342807 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.269396515 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.265759765 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.267566752 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.269313247 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.26934889 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.267627173 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.267929177 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.267117864 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.267170575 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.267297245 seconds)
  done (took 23.976686206 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.280229994 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.286607729 seconds)
  done (took 3.718509212 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.397414172 seconds)
    (2/7) benchmarking "second"...
    done (took 1.309275681 seconds)
    (3/7) benchmarking "month"...
    done (took 1.373010517 seconds)
    (4/7) benchmarking "year"...
    done (took 1.364659942 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.30918298 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.289499703 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.311315108 seconds)
  done (took 10.506651531 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.255311889 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.536031036 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.709011363 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.401214991 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.244128303 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.263406467 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.232014742 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.265391792 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.268618383 seconds)
  done (took 14.329080958 seconds)
done (took 77.010002945 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.264957275 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.289560783 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.263405426 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.285213555 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.565159825 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.283428641 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.25884853 seconds)
done (took 16.364870149 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.23752196 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.247890439 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.245448915 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.234943458 seconds)
  done (took 10.119686887 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.241772636 seconds)
    (2/2) benchmarking "read"...
    done (took 1.577262757 seconds)
  done (took 4.971737688 seconds)
done (took 16.245660532 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271419322 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.271840915 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.270526425 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.271562354 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.268323282 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.269371916 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.269103046 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.268970555 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.270000882 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.268537072 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.269419637 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.269014914 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.270699283 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269023873 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.271223788 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27104678 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27036283 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272630913 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.270766217 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269341385 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269234565 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272576079 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.271168343 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.269943969 seconds)
  done (took 31.64129966 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.272671974 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.271215391 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.270555166 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.27138564 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.27055529 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.271878255 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.270606937 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.269097733 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.271274704 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.271745415 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271335822 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.270554866 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.270799805 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.270865349 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270181986 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.272126045 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.272681633 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271007248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272243219 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.27171617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.271720169 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272240918 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.272145367 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272307222 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.270857299 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271258764 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.27196908 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.273320582 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272880307 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.274262472 seconds)
  done (took 39.302893606 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.277486884 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.277022293 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.272537739 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.272822237 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.273328397 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.273745929 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.271296632 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.272118119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.275081402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.275806858 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.272908668 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.271867247 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.272847327 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.273690108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.273100897 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.273540321 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.274776132 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.275656721 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.275036362 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.272361776 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.274247917 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.274739275 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.274572243 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.275295928 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.274687346 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.272924905 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.275700797 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.273458049 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.27408582 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.275898294 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.274014861 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.275077879 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.274830051 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.275120355 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.274151372 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.274728679 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.277472584 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.279081789 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.275727364 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.276097243 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.275882447 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.27637127 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.275770856 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.275540381 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.274859859 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.274247775 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.27539935 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.275606307 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.274980139 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.276649907 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.276206021 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.276811126 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.275099394 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.274202797 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.277989012 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.276836175 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.276156193 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.276962391 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.276356068 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.276215104 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.276537707 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.276166539 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.277347688 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.276828764 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.277611523 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.2781519 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.276589806 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.278538707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.27635018 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.277166085 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.278254194 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.279292289 seconds)
  done (took 92.983695267 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.281410234 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277441186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276139896 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.277422156 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277141687 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.277953244 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278668451 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27749505 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277529047 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277142989 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278403329 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278917584 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278809013 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279570398 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278785809 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279464212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279458687 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277827704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.27954508 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279023572 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279354562 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279502089 seconds)
  done (took 29.287457281 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279915128 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28128029 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.27826273 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281719766 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281620972 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28193858 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.278296668 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281121009 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278027477 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278801247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276719506 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280376818 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28292597 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279517552 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278923249 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280858117 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278401983 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280409018 seconds)
  done (took 24.200966745 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.281310937 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.279028804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.280901283 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.279648105 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.282065139 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.279499166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279178182 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.280531879 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.279597857 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.28072451 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.278245948 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280344361 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.281316473 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279967106 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28046808 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.28188804 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.280194838 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280967381 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281782614 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27861834 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281755175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281607412 seconds)
  done (took 29.331897409 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282298435 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281218172 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28148036 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280496369 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.281505916 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.281734195 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.281304401 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.281716747 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.284794937 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.280738707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282662775 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28144025 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.284896949 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281472089 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.281788047 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282554771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285392126 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283612146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283822299 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283145299 seconds)
  done (took 26.809951916 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289072868 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283592427 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282497458 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284536801 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283707057 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285336935 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283649838 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28257037 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28398516 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283464981 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287010681 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283376009 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284051467 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284479491 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284488131 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285403746 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284613527 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284278439 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284516264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286382279 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284310781 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284201193 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285652967 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284045845 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286959701 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285383685 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286909933 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285129215 seconds)
  done (took 37.138847271 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286220009 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285203025 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.284569818 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.285463175 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.286703609 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.287303897 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.286498933 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.285255123 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283764969 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283334404 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.285402611 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.285804541 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285195322 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.286349028 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286667153 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.285220411 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286827189 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.286791267 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284953398 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287210087 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.285999252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286261541 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.285902024 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281785414 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276279648 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.276696528 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277435702 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27812999 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277752473 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277439 seconds)
  done (took 39.687184873 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.294223158 seconds)
    (2/2) benchmarking "in"...
    done (took 1.288180712 seconds)
  done (took 3.742138943 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.269719907 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266504008 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.270573107 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.269814903 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269177273 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257731694 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255773163 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254913584 seconds)
  done (took 11.267550117 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.249088974 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.258531179 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255617519 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252131897 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.254048352 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245807765 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251726333 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.253174434 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.242340108 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245649796 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245692825 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249943567 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.251100241 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247393485 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.250324401 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246311618 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257123533 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.253947173 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.254693401 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251713336 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254393726 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249809522 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251974692 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.257860557 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247191596 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.256338151 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256376764 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.259084028 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248314166 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253844012 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253917595 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.259057296 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258929702 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.255089346 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257906102 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.256722916 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257864614 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254457524 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.259209496 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260049362 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256519455 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.25456812 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.251006345 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255378133 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250372123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254602868 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.25198963 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.250635067 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.242552582 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.246892439 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.253546864 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245014229 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.250254558 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242392891 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.24514472 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249970787 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.251890772 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240686942 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.243596381 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249856197 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257094765 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252515451 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244698506 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.252698834 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246887403 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.255024795 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251780069 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253098148 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.246676988 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240132353 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242173335 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252951378 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.251439562 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24510977 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242101214 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.242206803 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235919533 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244506498 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243399254 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.245391019 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247789849 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243712512 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241969384 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246780859 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237196344 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.247003353 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245183812 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.243077311 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235850021 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245989835 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.249974271 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244777042 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.235411577 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238021609 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.23796118 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244232554 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.235774316 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237288914 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246839796 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241196102 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240960032 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234819446 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240625435 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243830651 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242580863 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240983777 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246774411 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234536822 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.242171548 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242927205 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234634251 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.229027434 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.231909875 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238906468 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230158514 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.234995314 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239789557 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.228289997 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.237762021 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.232008131 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232127872 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.243140859 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2366179 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230709117 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.22748552 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.238587755 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231175635 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.230033714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237089814 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.23225895 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.233264139 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227769447 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.236436957 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.221985612 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229087397 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223568864 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.229655528 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228532072 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.228584851 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.225303805 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.229748979 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.224977527 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.227595586 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.231886704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.233268442 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.226478136 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.236632555 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.226798149 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.226217379 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.229747895 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.2339784 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229049958 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.224088384 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232279379 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.22009991 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230409919 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.223076107 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231886034 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229131105 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.229255251 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228535372 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.221782846 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226687013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.232380246 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.229595315 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228419544 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234298206 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.231877352 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.231455127 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.221170064 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231340746 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.223117338 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225748013 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.235522983 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.231648439 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230535429 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.230271341 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237386801 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232820082 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232003801 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225021721 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.229881258 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.236282774 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.233413401 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.240001766 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233461045 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232831713 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.226916567 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.226864107 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235847291 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.224827855 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.238015308 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23856438 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24209181 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.225572124 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.23416466 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.22709685 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236792832 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.230072316 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241857031 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.233758214 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231852033 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228571672 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234987291 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.229983298 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.236519567 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224341188 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.232869018 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230039729 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.231957566 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232225645 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226021333 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228661335 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.233577462 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231391906 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232259773 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227143084 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23301458 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223524836 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.224436022 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.234661345 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234428514 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.23634242 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.23883671 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2301256 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236597911 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.233560802 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.227204951 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.233254625 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232177527 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23287027 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239296814 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.236146616 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.227596246 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23726011 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.232918641 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.225440463 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.234930113 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241109027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.234201562 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.22597136 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.240324092 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.232687133 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.234330307 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.232769924 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228387521 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237292102 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.238660489 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.243203821 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.226741879 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.236342275 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.231267394 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.236455679 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230016108 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.234973745 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.230549929 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235998212 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241914519 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.233701815 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229887168 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.237937573 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.235139 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235927728 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227926798 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.238458303 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236357179 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.23524562 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.230438998 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.230625046 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.237928596 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227541781 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.236461811 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229316981 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244766194 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.25041492 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238197546 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.240420387 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.23968043 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239160357 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.239195308 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.230420657 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230001368 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232361396 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.230309707 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.230810441 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.239774344 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230787312 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.236029313 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233752147 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.237351998 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.23545657 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232885408 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.227815986 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.238019326 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235068312 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.232136512 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.226172964 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.234170728 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.228775294 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234873269 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.235126744 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.230690614 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239928803 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240251815 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.228681831 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229408026 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.227989902 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.227632468 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.229651207 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.237876486 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.230503953 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237851357 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.228274455 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.23073146 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.229196983 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238760393 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.244184321 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.227271615 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237201691 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234183116 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.226168435 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.228067763 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.234706139 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239082877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.245150849 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.227878567 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.236655292 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233622098 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.237895821 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.235096442 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.235883749 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235986546 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234923358 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242040141 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.239725083 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.231642292 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236129386 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243341419 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.235536272 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.236991209 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.226724725 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236861268 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.243323691 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.232429527 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.231309466 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.229129716 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.236727129 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.237396212 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237977625 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.237040899 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.235277256 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23756812 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.240575812 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238412002 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235438332 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.240715938 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248758225 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241639727 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.247467657 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.232426249 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.239393265 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238563975 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.232024544 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.232126613 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.233508343 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.240027034 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.228600835 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.241123336 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.236942521 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.234231027 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.238027425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.242918872 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.231993344 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236469904 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250346746 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.229386421 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238731572 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.237788709 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.229043774 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.24064939 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.239351225 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.231294427 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.232066661 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2373866 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243339055 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.233508346 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.241671436 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232688829 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242506544 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236946558 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.236778938 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.237972138 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.238076738 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.233061167 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.237738782 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239055488 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246627257 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.232668609 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236264625 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.232842327 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.243590537 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.247986398 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.234048442 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24516558 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.240555746 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.231464689 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.235637173 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.244668523 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233921261 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240961258 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.230182684 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233714542 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.235295957 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239869515 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.241611902 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.241809361 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.23336809 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.235062377 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238138676 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24009707 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239393686 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.239015275 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.246367964 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.230909338 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.233637597 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.241467819 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.2343173 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245289248 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230958344 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.237816717 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235903882 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.241053417 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.239081398 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241701187 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231390467 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.234178102 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.245941455 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241662577 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.236258252 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.236288661 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.24141829 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.233981542 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236047276 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.238313303 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.23498735 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.235863562 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24190171 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.234991207 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.235108034 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.235221522 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241086655 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.244452797 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242382015 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.235292276 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24530832 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.247172015 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246160674 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.232197973 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.235804911 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.23684482 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.241409999 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.239486804 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.233929817 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246413768 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.249650891 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245773916 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241659458 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.24313326 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.233080596 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241350935 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242843026 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.237358476 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.245626667 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.236347324 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248658068 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243420818 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.242765216 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.233703128 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.235167903 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.236484033 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.238132193 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.245042019 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242067789 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.245130868 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.239558603 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250527017 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242322515 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.242494923 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.240851944 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.234309284 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243785539 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.236903318 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244622252 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.245621423 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.236751431 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.244957125 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244559425 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238293608 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.242082902 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.247065975 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.243272417 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.237231699 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.241196722 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245734318 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254202529 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243992988 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240964634 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.240571537 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.247900563 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244364265 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.244116506 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.23611574 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254595167 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.256240759 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238101838 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.242336772 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247967121 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.253204513 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.244890746 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24648075 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.24133338 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.244330267 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249301993 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.246700966 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248598513 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252542397 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.239289832 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.246213006 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.239409162 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.244555081 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.245194477 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256133457 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.246474635 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.242719456 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.255615864 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255775084 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247456953 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266341018 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251837528 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246307383 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.251027234 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240118078 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.249516555 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.244473677 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.252773237 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.247543055 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248296169 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.250702184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.240606155 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246718065 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.255284662 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.255259365 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.248369259 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.240195548 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.24212896 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.248103316 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.248092077 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.248827662 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.247991212 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.248523797 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.248796535 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.243569084 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25560832 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.262580405 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.253418001 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.248544677 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.245803308 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.249593564 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.24894133 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243847 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.251957879 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.249262525 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.251773349 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.246293154 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258622133 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.251288075 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.243750267 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.245454566 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242524917 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.251771406 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.256964327 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264412327 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.252570446 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.254463511 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254256212 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.249081569 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244525195 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253090192 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252831187 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.248470418 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.243966537 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250783902 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.252296702 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.250407898 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.242326752 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.256671556 seconds)
  done (took 740.039497071 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253435479 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249596968 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248281076 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248796162 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251669258 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24939288 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2498021 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249485206 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248769282 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248032614 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249687603 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252654069 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249395728 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249944879 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249407242 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250473759 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250562744 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251388931 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249760272 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248662416 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249324171 seconds)
  done (took 27.385592177 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.250896994 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250462267 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252174719 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248288124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249621616 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249457487 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.250594447 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250175202 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250075229 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250513283 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.24916674 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248058988 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.250240129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.251608887 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251468707 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251021616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.250238251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249049689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.253098687 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250750448 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250996175 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.249589251 seconds)
  done (took 28.641483538 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.253746815 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.25142137 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.242908111 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.253960328 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.249763731 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.249297453 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.25285075 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.252062386 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.252182367 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.243246276 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.243137124 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.246237884 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.248598035 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.256391632 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.246063144 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.256456675 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.251009468 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.25302259 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.253672309 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.25171089 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.254116477 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.263484519 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.250469553 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.244383679 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.256932666 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.253120616 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.252440815 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253581188 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.244479741 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.255535932 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.254683119 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.246428167 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256463343 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.256171574 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.248226631 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.254827706 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.253043484 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.253536311 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.25370784 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.254432229 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.268127716 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.255085173 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.258613094 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.265085119 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.252879077 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.247252158 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.258095859 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.254123677 seconds)
  done (took 61.266302962 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.255519497 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.255284802 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.25374467 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.254159149 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.254955828 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.254993459 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.254521176 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.253370969 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.253192899 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255466919 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.253738499 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.253880944 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.254295382 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.254626232 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.256419982 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.253569189 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.252942141 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254725416 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.253870812 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.254379135 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.253692339 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.255369794 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.256106215 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.25525642 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25422557 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257282675 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255941522 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255287496 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.255914423 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25579198 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.255150294 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.253451105 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.254629746 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.256810375 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25665773 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.256555645 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.25890795 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.255749015 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.255148343 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.254178071 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.254496632 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256284818 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.256678932 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.255494871 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254890189 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.256313135 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256365529 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.256478412 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.255475291 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.255974452 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.255624618 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.255513495 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.255450001 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.260235387 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.256750871 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.257643908 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.257914745 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.259132979 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.25836846 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.259607778 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.259699299 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.256153304 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.260785976 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.256872822 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.259317548 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.257250826 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.257481242 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.256799733 seconds)
  done (took 86.542096981 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262540457 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.258379715 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257388426 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259570709 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25709428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.256714485 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257709531 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256675489 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.259370233 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258650279 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258773334 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259549176 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.257348774 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.257797643 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258016612 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258456475 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258708597 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259130234 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259538299 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260464631 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259652905 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.260285096 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25940317 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.261333444 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260689355 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259481639 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259987159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260162034 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260165232 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259702423 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259531183 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.259627018 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26122632 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260810104 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26116967 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.259922166 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259835766 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261517264 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26059102 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.259548042 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260073568 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259611828 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259906739 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.260779823 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26028878 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259878905 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260451977 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.260622527 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261457633 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260542108 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.260665944 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262431828 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26324106 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259723521 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262372175 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.262176941 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262512628 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263187545 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261825034 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.261805701 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263637755 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.261848316 seconds)
  done (took 79.270011332 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264812557 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260681858 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.261897952 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.261692988 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263668904 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261111529 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261912555 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.261101794 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261924572 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.262708698 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261888904 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261578579 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264111389 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261221672 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262130836 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262062251 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263293205 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261548738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261426493 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260804121 seconds)
  done (took 26.388592246 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265249554 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26354938 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262867119 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262028307 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.261089642 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.262554252 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.262928813 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26212905 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261830951 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263301254 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262651012 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262256726 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261527545 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263541931 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26228184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262908107 seconds)
  done (took 21.349726908 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.264391942 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.264196194 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.262588875 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26388992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.264631677 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.262536679 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.26282084 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.263160386 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262132811 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.263098708 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.263848153 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.262889738 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.264282858 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.262779909 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.263727424 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.262880578 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.262834624 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.26343499 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.262968496 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.264074606 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.26403677 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.262643029 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.263619007 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.264569068 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.264003182 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.26615494 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.263394686 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.263271521 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.263755395 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.263301483 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264852482 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.264345291 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.264084933 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264607845 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.264436007 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264090172 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.264294629 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.264841947 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.265026165 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.265417629 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.264764626 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.264534364 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.266304304 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.264753159 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.2662002 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.265064566 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.265629896 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.265110313 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.265000666 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.262127154 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.266258577 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.267157294 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.264952628 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.262535628 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.264003167 seconds)
  done (took 70.675032421 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266066614 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26404205 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268677043 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26671836 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266784534 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.267044637 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.266387778 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.268021043 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264819029 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.265652699 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266243207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266907798 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266136363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266357391 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266013021 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265893585 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26554965 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265707516 seconds)
  done (took 23.944710955 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.268042662 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268690342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.266318394 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.266786515 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.267525315 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266602093 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26852698 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.267005683 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267748153 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.266666531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266221926 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26857856 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267141013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.26850888 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266464832 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266836741 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.268160028 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268150646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266740569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26671345 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26901875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268231204 seconds)
  done (took 29.036824963 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.259633279 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.258406309 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.257524962 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.274552712 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.271855507 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.259457377 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.259236439 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.258468895 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.277073349 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.295561967 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.291765432 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.270937763 seconds)
  done (took 16.385826822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271162227 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269579015 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270376031 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270159368 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268525018 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269596129 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270600781 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269399169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269780848 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269029038 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267494747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269647061 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270799266 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269366093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269829547 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270645693 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26883404 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270696526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271446427 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271475703 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271149917 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270183532 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270037808 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270022282 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270540867 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269580909 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270775273 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271242662 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269957619 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269768039 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270197031 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271945267 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272049598 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27062094 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272189881 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270915875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271729306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272392894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270795274 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271810378 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270854888 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272639644 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271885773 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270439523 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271956582 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272109055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272458033 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271568218 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271028367 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272282859 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272340694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272594784 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273950057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272077106 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274736447 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274615126 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27023233 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273270009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273997256 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272232819 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271984797 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273233287 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273033354 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272671954 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271525468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272444552 seconds)
  done (took 85.052415869 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275672505 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272939211 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274588171 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275100759 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274336721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273084895 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274263148 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273340706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274381664 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273436287 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27334613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273638779 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273695974 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273830366 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274675125 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276082163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275872178 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274553214 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274086748 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276166244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274178848 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275330814 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274935154 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274335313 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275660767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275203356 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274432134 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275771791 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27602201 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27513184 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276036929 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275070848 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276286152 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27443873 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275978647 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274983295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275782258 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275775311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275701688 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275943544 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277053767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276974031 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276353575 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277875277 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276334286 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275365612 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277661472 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27798091 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275743964 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275963486 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276187617 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276258549 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284342445 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277906578 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276563232 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277269129 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276808971 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276956883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279096174 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276282291 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27786355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27641017 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277375315 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278281114 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279090377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278269616 seconds)
  done (took 85.365308161 seconds)
done (took 1747.892099418 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.43404886 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392376282 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.26436352 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.280214388 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.269081105 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.268870083 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.282318395 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.26841715 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.271330977 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.268235435 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.269175633 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.458911501 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.304229986 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.269100191 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.268024517 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.365443445 seconds)
  done (took 26.094139731 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.294939669 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283232866 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.387027147 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.278295291 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.302892528 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.457426072 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.342870643 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.282262201 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.44156705 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.301748231 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.273743741 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.302727248 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.282921083 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.273817661 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.298770284 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.4580903 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.533238099 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.280915056 seconds)
  done (took 28.238254622 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.694816197 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.310313783 seconds)
  done (took 5.174704877 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.301120535 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.28187934 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.282825485 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.281284749 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.281054336 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.272606194 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.281843189 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.284165632 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.270928045 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.40361991 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.285544597 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.29361821 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.281113835 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.281902394 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.289376884 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32618303 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45440409 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.2920896 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.286496531 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.29022593 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.282835072 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.371961762 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.321572313 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.293103962 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.3984907 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.284701257 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286010472 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.288796753 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.403157267 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292968084 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.282711342 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.283852815 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285802591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.205886181 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.816322596 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.281068879 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.307378153 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292675005 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.292748984 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.417569025 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.285509147 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.291229841 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.276212256 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.812247661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.391617148 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.399150799 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.28785985 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.28563121 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.28479729 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.348073517 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285452015 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.286739297 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.345315844 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.063995314 seconds)
  done (took 82.527468885 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.338636364 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.2777884 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463085142 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.296020757 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.277325475 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279691173 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.278973812 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.544765941 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.284959719 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.280475687 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.591249203 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880353861 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.283668184 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.356144382 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.324336356 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.35045391 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.281588265 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.279458372 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.280217447 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.27964325 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835119831 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283110928 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.284868997 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.355294477 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.320130857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800780182 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279140323 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.279185983 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.283907277 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.278030714 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854151306 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.289930839 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.338256281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.279906522 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.565061612 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657442323 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614922843 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.286010851 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31661641 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.281532686 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.305750008 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791981162 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.634924645 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.280805131 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.280286235 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.791274247 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.279736954 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.294220233 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.28523572 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553878749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.281237709 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.28458697 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282075952 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.282867733 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.280714523 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.332685119 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.328739126 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804781216 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281511532 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.28386792 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.318793867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.282522043 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.288241304 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.282270905 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.287202127 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.64148517 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.517334989 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284712375 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640956463 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.845629565 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.293499755 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928721468 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.282666078 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.293569234 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.312155936 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283828382 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.29760192 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.802726908 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.308747423 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.283126283 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619115206 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.285160626 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.583243752 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.304824655 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.284313472 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851322213 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.292814401 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.358151726 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.285765782 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.283327175 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.300144024 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288558389 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.573124797 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.334161122 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.286869822 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.284522704 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.305938129 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.284265746 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.30140583 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.292337345 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930175159 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.292132719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285864628 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305127308 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285167524 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.288804889 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.287349406 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.291036693 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56902919 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285390909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.305123478 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.288182378 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.286155424 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.294725692 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368269489 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.295108491 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.581955477 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.288621307 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286351544 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.29081931 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291680808 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304675952 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285931316 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302619788 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.285856692 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.582035279 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303804586 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.303941457 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287217979 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288133635 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309871806 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291426783 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.351265743 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.289365754 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049118764 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.326909053 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.335450885 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.287598431 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.298009308 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303755012 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.298461227 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290020459 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.58833154 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.570672193 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.510441592 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.288333347 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.290601515 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.075327761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.322303612 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471763136 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.304639109 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.287497912 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568410093 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.511098606 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.291571625 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.288918787 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.290009987 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568420056 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.295613795 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611470597 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.880678957 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.286562607 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.300198145 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.049383277 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.09891851 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.288500392 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.294220083 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.582018089 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.308471203 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288009601 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.289628717 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.288535351 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.292096672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.295648176 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.295871787 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.289243413 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.287520658 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.630760084 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486861075 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305168781 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.291872077 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815189241 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327083395 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288111689 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.299055715 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.293950989 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.290756708 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.335938677 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.294810568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.322749971 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.294500613 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.299433249 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840504737 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.294501089 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.292133374 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48604489 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01044745 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.298449029 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290814416 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.295402041 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.359157005 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844137647 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.324652144 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.589397137 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.301809267 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.332384327 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290332849 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315174277 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848517498 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295669497 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.297807945 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02703923 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.289938259 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.721873814 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.292206979 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301537524 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944673043 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.292634224 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.294410282 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.302402785 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292752928 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.614046291 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.292058281 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.294582853 seconds)
  done (took 488.179639929 seconds)
done (took 631.375026319 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.294266917 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.29172843 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.296699466 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.294821108 seconds)
  done (took 10.362561023 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.31346175 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.300443755 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.306724398 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.298248819 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307480004 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.299649767 seconds)
  done (took 9.010838188 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.295431332 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291687114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.297822545 seconds)
  done (took 8.07287118 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.504002842 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.310497115 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.639271244 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.298409098 seconds)
  done (took 8.941017655 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.312553416 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.310676793 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.309196704 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.308286884 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311119181 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.313075171 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.309891927 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.309684403 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310736833 seconds)
  done (took 12.981069033 seconds)
done (took 50.55317697 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.449564895 seconds)
    (2/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.364573974 seconds)
    (3/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.296979185 seconds)
    (4/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.492482092 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.411735903 seconds)
    (6/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.567999768 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.361643561 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.328207908 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.295864321 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.417296409 seconds)
    (11/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.375204248 seconds)
    (12/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.330877048 seconds)
    (13/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.504792193 seconds)
    (14/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.274461318 seconds)
    (15/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.295746282 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.440677069 seconds)
    (17/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.424248409 seconds)
    (18/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.574513752 seconds)
    (19/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.275029447 seconds)
    (20/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.605819929 seconds)
    (21/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.274006912 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.522343652 seconds)
    (23/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.287947522 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.377668896 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.422988683 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.643279239 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.391939661 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.635258095 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.536432347 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.44312466 seconds)
    (31/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.506136038 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.40106995 seconds)
    (33/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.444784899 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.540691572 seconds)
    (35/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.338399465 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.379910214 seconds)
    (37/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.327766714 seconds)
    (38/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.324224609 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.307867922 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.4725347 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.367771113 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.713743479 seconds)
    (43/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.791038593 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.570200264 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.451238416 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.399985272 seconds)
    (47/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.490808958 seconds)
    (48/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.412880446 seconds)
    (49/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.27940195 seconds)
    (50/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.3884804 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.277129142 seconds)
    (52/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.386189355 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.447735121 seconds)
    (54/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.391863436 seconds)
    (55/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.329012494 seconds)
    (56/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.419297565 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.611750464 seconds)
    (58/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.506449935 seconds)
    (59/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.374108915 seconds)
    (60/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.384830655 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.459410424 seconds)
    (62/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.277888996 seconds)
    (63/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.464974008 seconds)
    (64/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.41297933 seconds)
    (65/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.281089463 seconds)
    (66/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.346228522 seconds)
    (67/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.309952718 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.410803476 seconds)
    (69/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330827326 seconds)
    (70/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.377705287 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.447246258 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.276620965 seconds)
    (73/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.415982825 seconds)
    (74/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.480763435 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.299486166 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.368985126 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.391961559 seconds)
    (78/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.278380834 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.447217057 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.388250578 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.454042771 seconds)
    (82/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.332508723 seconds)
    (83/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.365831718 seconds)
    (84/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.538125845 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.29798587 seconds)
    (86/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.369498736 seconds)
    (87/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.363585196 seconds)
    (88/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.642998459 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.386123502 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.466737849 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.450740974 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.409697209 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.387080423 seconds)
    (94/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.64602308 seconds)
    (95/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.547771369 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.418599689 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.277970301 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.344893697 seconds)
    (99/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.583792431 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.793120453 seconds)
    (101/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.280817118 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.460507421 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341737087 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.375266738 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.410245008 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.2815508 seconds)
    (107/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.280510289 seconds)
    (108/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.331256221 seconds)
    (109/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.282005159 seconds)
    (110/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.280467204 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.372179129 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.641424144 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.399908938 seconds)
    (114/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.398926143 seconds)
    (115/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.510365194 seconds)
    (116/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.333978336 seconds)
    (117/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.478221119 seconds)
    (118/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.416033785 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.520452916 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340223992 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.304855268 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.488371281 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.538552462 seconds)
    (124/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.27895808 seconds)
    (125/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.338734358 seconds)
    (126/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.29203129 seconds)
    (127/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.342468914 seconds)
    (128/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.573903462 seconds)
    (129/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.368376913 seconds)
    (130/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.279146116 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.403069662 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.479915493 seconds)
    (133/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.279075638 seconds)
    (134/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354346837 seconds)
    (135/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.330958685 seconds)
    (136/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.279767475 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.337810666 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.433047444 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.396022639 seconds)
    (140/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.278850073 seconds)
    (141/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.607080164 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.281751815 seconds)
    (143/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.283515228 seconds)
    (144/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.421766049 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.410433571 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.452992789 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.544825582 seconds)
    (148/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.282063367 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.371458532 seconds)
    (150/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.278599082 seconds)
    (151/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.419200618 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.309433818 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.387280562 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.616122324 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.451715079 seconds)
    (156/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.540146026 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.411324487 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.545738025 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.279810379 seconds)
    (160/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.573699619 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.302902907 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.360804505 seconds)
    (163/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.507640866 seconds)
    (164/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.381079523 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.343141779 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.413751734 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.332516897 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.548587409 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.397902893 seconds)
    (170/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.37914794 seconds)
    (171/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.362784222 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.420012008 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.414789869 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.283403068 seconds)
    (175/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.308164877 seconds)
    (176/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.309275972 seconds)
    (177/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.476542876 seconds)
    (178/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.374099686 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.412197196 seconds)
    (180/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.280973391 seconds)
    (181/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.39679503 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.49855307 seconds)
    (183/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.485147129 seconds)
    (184/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.510561796 seconds)
    (185/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.282612225 seconds)
    (186/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.384087314 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.455956072 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.303921066 seconds)
    (189/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.282880163 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.293167533 seconds)
    (191/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.48368579 seconds)
    (192/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.467430974 seconds)
  done (took 319.439697054 seconds)
done (took 320.628300311 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.33235406 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.40942168 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.312558593 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.311963056 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313054964 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.297800554 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.333633649 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.315556592 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.327021591 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.327404593 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.301587175 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.322131222 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.330625627 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.323607792 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.345834475 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.315328783 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.31191535 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.322198377 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.327332292 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.330379884 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315426663 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310869669 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.341642227 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.314130964 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322381365 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323603242 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.321148314 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313613803 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.323087109 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.330247537 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.314396877 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.321795208 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.332092536 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.326057828 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314633332 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.323930131 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314368632 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.410592227 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.336701367 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.324011929 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.323997984 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.331804807 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.318664993 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.318417058 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.32558691 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.340505136 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325476047 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.330734264 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.305614434 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.297554621 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335943967 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.329110005 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.322650667 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.29305058 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.311916358 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.330943076 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.327007862 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33732111 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321278112 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315802751 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.351659469 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336433999 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.328393817 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323748811 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.324887186 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.332198364 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.325497358 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.336536225 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.327179126 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.32081434 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318075198 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.325541932 seconds)
done (took 104.639870171 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.44291425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.316128496 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.476064879 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.324044506 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.481206903 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.439057896 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.324584012 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.323850537 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.323964155 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.115966345 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.324189317 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.323497338 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.314312396 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32813726 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.437519949 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.325829225 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.325681626 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.017417833 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.325526926 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.453502 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.315611774 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.328112278 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.325982303 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.120251817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.315440861 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.314448203 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.457608099 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.325746371 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.019559908 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.309961064 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.314351948 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.023263823 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454250527 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344598862 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.335719621 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.334415944 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.481813982 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.327252829 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.443821934 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443217966 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.476048661 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.365686966 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.313257469 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.320037908 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.328935542 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.326221303 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.328764267 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.354285529 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.316968543 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.328903651 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.018717676 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.338714798 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.336954178 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.327443271 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.326006368 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.348383115 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.32768211 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.331870439 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.456521414 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.328540694 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.443713189 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.123263977 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.120649768 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.328429575 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.315826626 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.332386429 seconds)
  done (took 107.543932837 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.390099358 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.39555349 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.427143214 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.31916415 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.367571087 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.431311585 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.319813543 seconds)
  done (took 10.855779025 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.331211283 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.328954667 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368913527 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368467266 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.328176507 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.495955835 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329987407 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.333389549 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.330149937 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.372219503 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.330594547 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330166524 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.338013926 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.321117813 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370446077 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.332679104 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.439208972 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.324497343 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.330585154 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478888075 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330024044 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.339781065 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.372957325 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.334599716 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.331251487 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.331424268 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.107082403 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332510384 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331313727 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.331183917 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331012391 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.389036859 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.331894469 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.322856583 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332957216 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438877102 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.333027276 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332968324 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.331714085 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.325743915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.332269179 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.332953954 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.330599089 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.33057915 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.332011615 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.349475884 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.331884072 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.335371178 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.332111627 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.333327911 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.373715732 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332861056 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.332784362 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.330900948 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.376365157 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343389198 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.331432382 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.332342679 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.332834372 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331930396 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.479755377 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371242323 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.333377908 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371251371 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330667402 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.334541679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.33319382 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.334990039 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416941494 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.330710809 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368583156 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.329059378 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.49979591 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.344262201 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329412839 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.322933036 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.320148207 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321503838 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.308223408 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.319353254 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.32293202 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.316469281 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.321458233 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.322032772 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.320267797 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471074262 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415913688 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.316106755 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.327750352 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320728244 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.321424788 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.36162383 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.317540978 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.319631544 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362318464 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428128824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.363788992 seconds)
  done (took 136.789594349 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.321626515 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.327287008 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.318159171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.339253987 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.317867743 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.316825136 seconds)
  done (took 9.137201087 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.321658734 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.326335884 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.324105125 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.325411952 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.328567901 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.321283796 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.324434077 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319587579 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.327081302 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.326080772 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.326118059 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.325709932 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.323743862 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.325376183 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.324709096 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.325801496 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.324916194 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.325743132 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.326917647 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327234012 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.315215836 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.326865778 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328885387 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.319085778 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.324264354 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.327304931 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342489818 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.324143111 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3281559 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.327121107 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.331691583 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.327623243 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.320451667 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.324000658 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.329553241 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.319049199 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.332271922 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.329015228 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.327252122 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.328022229 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.326351085 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328716257 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.328677066 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.327514365 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.321821478 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.322660188 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.332174891 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.339537839 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.329297373 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.329011568 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.324283413 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.328891884 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.328740153 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.331926049 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.321627649 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325683539 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.329891636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.329853135 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.327156931 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.321722324 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.332514057 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.330901935 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.323412689 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.327966239 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.330526003 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.330659828 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.323660753 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.333922308 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331457325 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.327345883 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.330413527 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.330091443 seconds)
  done (took 97.745212476 seconds)
done (took 363.272532808 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.684335641 seconds)
  done (took 3.890897335 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.319209041 seconds)
  done (took 3.527303751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.821841362 seconds)
  done (took 22.031280456 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.322759313 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.339246203 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.34164633 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.323924323 seconds)
  done (took 10.53479686 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.58585927 seconds)
  done (took 3.79269107 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.329690785 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.333229809 seconds)
  done (took 5.872420661 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.487649589 seconds)
  done (took 3.694162437 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.53187579 seconds)
  done (took 3.741300736 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.328205015 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.3527283 seconds)
  done (took 5.897966434 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.297081746 seconds)
  done (took 3.505455548 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.297954338 seconds)
  done (took 20.505603798 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.32911357 seconds)
  done (took 3.540290415 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.362740632 seconds)
  done (took 3.570870359 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.735517496 seconds)
  done (took 5.941408562 seconds)
done (took 101.251151636 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.319901922 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.320659179 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.323913631 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.319447236 seconds)
  done (took 10.49241049 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399100814 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.397685589 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.407600678 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393118352 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391429662 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.400917107 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.359655268 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360488579 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.389712504 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386575745 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401615744 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.391859607 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.398266094 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.361577472 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.386852989 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.403994598 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.390853503 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406895295 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36022609 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.392590214 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.332543422 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.393434784 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.387579894 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.337195675 seconds)
  done (took 34.440220319 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.822538911 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.398803733 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.481222046 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.379162992 seconds)
  done (took 7.292359496 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441694682 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.439955256 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458782897 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.493871737 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.542650023 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.460963116 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.363013476 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.35910093 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.345276879 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.439982767 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.52480059 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437208235 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.655810911 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.333499778 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.656110917 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.336895406 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.338867887 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.442226 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.491087368 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.520510536 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.337595677 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.440656435 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.446562684 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.440472651 seconds)
  done (took 35.9575794 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.347161934 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.354260916 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.339805952 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.353970803 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.339302811 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.336087569 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.338912951 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.346138004 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.338321549 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.337819426 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.338473807 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.350630359 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.337183439 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.339173909 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.344967561 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.339499782 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.342328673 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.345793442 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.347600203 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.338481941 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.339261792 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.346525635 seconds)
  done (took 30.752574709 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.325384659 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.322394793 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.677186366 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.578484341 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.321046369 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.328540139 seconds)
  done (took 13.762718434 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.396619836 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.531250401 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.33232371 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.66894491 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.759170819 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.336498296 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.327253021 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.56645547 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.848328784 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.848164485 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.388679053 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.397411213 seconds)
  done (took 19.612271553 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417368605 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33473129 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342669093 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407106951 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339046946 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335693914 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397177868 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024882127 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.342056984 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611664526 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334557186 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419517112 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584755142 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348547509 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33872983 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.313315312 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568790661 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815403177 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337746598 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339929865 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37475773 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343597253 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341172385 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53677912 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338342758 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336463927 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600392074 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335471684 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609703932 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583051765 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585808684 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338969505 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613822582 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969810377 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443050895 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534322578 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341297016 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340280304 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.338976961 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.342659817 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34289254 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339537972 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583257369 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339843066 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338763917 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336155491 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031318141 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.344350467 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.337379011 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33874563 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589579855 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421492699 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.343490087 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337994772 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345687025 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342859432 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.343856754 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466137031 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979684516 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337528844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344959888 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.34396187 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348283503 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354474771 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971146163 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.352672767 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.344829245 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343150916 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340574693 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348853774 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367172546 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339555361 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.359786594 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340832097 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076112516 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357511565 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342347163 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874611596 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353735607 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.346806291 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566575025 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339165173 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339789317 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.340431136 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341280815 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059922482 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350892277 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.310573427 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401834411 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025540499 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539633665 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361673184 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3686268 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561881221 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.309133183 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339285231 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.342104235 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342527402 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362180059 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.031793092 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339960091 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.346021879 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590046063 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.552666588 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341038837 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.310948819 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806164335 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350386872 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.370369534 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340932814 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.543050422 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.935564951 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594343854 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348593586 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381600319 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341554531 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121055279 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357542469 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.354365748 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342919837 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619764133 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.145285399 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348240641 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416378265 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343272556 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345058195 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356212345 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350142561 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343683093 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.521416761 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344193217 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58844592 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.349899301 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343971868 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.343156133 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366554794 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.344639856 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564123422 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356274511 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62475316 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344266779 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344175885 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344567798 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.564000569 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.343456945 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.351875934 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68463723 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342889175 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3470465 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59099585 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382762732 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457480076 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373691704 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.343656857 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600750515 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.349998865 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.351209163 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353102936 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351328804 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34836311 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355503035 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355568611 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938717328 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327595871 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353323595 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346817269 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.361671936 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419073004 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351430906 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545122188 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.358589298 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347276451 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.369103297 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.346037333 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586178014 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584852016 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.353110469 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524175147 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.806236152 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939876215 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368944187 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.346645982 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.346113243 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.34583892 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348107862 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348581899 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347228117 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547423033 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591873609 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343899212 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965537096 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355170558 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348185458 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.360377277 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587598243 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.359516755 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347890392 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.347017635 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351898551 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354246423 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592839317 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575670245 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.365543377 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347441374 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.86699066 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352319608 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348868935 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349205771 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372178721 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349202049 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181501519 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687735327 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347542968 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591972738 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355608137 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.371407948 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.348837486 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34864828 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35465683 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.366458431 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357616699 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.546037147 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361184775 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355764623 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990590238 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089640776 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898799666 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372205282 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.352451219 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357083515 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041512936 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347754356 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349939476 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58818716 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046307192 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346996262 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810541422 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.349494867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079634868 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595776407 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581490026 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362532681 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.35695749 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596185737 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569100287 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375605249 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349794925 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356548609 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.319813673 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884008887 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350571327 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550117757 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040668718 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350295838 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373495717 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.410220996 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35761734 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732914277 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346874896 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35045183 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357829013 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352838336 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181987595 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357342 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352071289 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982963287 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360274218 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.817792931 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34774498 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548759679 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594408121 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.576941388 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.357750907 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.370893265 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.601303724 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593377706 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358055643 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356839699 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901674889 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.216373901 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.360035012 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353569797 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124682545 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366346279 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626632075 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.36057046 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364994767 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363320706 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352619936 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352454143 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.353855895 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360861752 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328473175 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82689251 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.358735349 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368689317 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35869132 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360724798 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.601504199 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.366228932 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.953547055 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584123578 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347041534 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392292997 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.359083614 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350939972 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.328259468 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354645684 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355168811 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364525565 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580751595 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369549189 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.324517167 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390546841 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571580962 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357457214 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356073164 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568182043 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.355960686 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.375707564 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106218326 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392569286 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35608064 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360878445 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350067072 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397276946 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431609417 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556310733 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.600160807 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603924522 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744114439 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35423989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356084614 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.37159965 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437828352 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354292074 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.375610068 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.358502849 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953142351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108405058 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964834963 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607280759 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362786659 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35844187 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355781788 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597098774 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356469536 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629374885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355986315 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.347432803 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381132452 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357372121 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366791168 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575169596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632578769 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35836558 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369595236 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363348885 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.358040757 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604204397 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.575985062 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83671492 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893445672 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360456285 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369666988 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057813514 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633962397 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352147664 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357887758 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358310846 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.359374457 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.382019389 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.367127986 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357668369 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587691853 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600252168 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000253647 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600836498 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.39260738 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.280645123 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357229678 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607956775 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196810231 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558650851 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963352539 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061634678 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618532961 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432716031 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562052947 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.359916968 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59912255 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.358252153 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363655629 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358391643 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357834297 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.361567452 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605916324 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970027904 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622098547 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.366095801 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.359830518 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39561939 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.562513762 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583725215 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088469413 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582822409 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609169157 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374409576 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362807534 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971514233 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612126736 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363523644 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.367068641 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572784731 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362357859 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397754932 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.236931663 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.361323156 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891983341 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.574818239 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384058064 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362256982 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07227496 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969439547 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.37116184 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844401303 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362067352 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363087284 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645073436 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.370464757 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36401776 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649256399 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.369355389 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361832365 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570703527 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.963103943 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106085185 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.374263368 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393465491 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.365266944 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365805678 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419488822 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368952321 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375521666 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.755531379 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365335475 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368053808 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37728066 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.366854595 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371946092 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.370140929 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366326288 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.369742078 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.342440646 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.366669804 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366910421 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492003948 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906726633 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365875791 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.983386532 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.701254387 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616138875 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365236702 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.33801914 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.375972141 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364617684 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368335388 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366668132 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36708879 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900257915 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.379381945 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.617164625 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379618684 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.578396736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580189485 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376916712 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57024364 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377099132 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390570776 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.335897473 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367172205 seconds)
  done (took 968.915922689 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364762519 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.376598351 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.383022718 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.422111917 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.369906721 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.367275679 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.369853166 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421947956 seconds)
  done (took 20.317055788 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.358053199 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.365104325 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.369680756 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.369901067 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.363678508 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.838530863 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.363076396 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.36667579 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.377891303 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.368754333 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.368383869 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.985901509 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.368385207 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.368989345 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.37823227 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.374740394 seconds)
  done (took 32.226414675 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.062694299 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.376512714 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.870291685 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.38537404 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.388235719 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.364705438 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.492417808 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.366475788 seconds)
  done (took 25.548042918 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.374574507 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.372971184 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.376982725 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.375821813 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.372247125 seconds)
  done (took 8.117593601 seconds)
done (took 1208.644518898 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.377151232 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.375586738 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.37150141 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.376293067 seconds)
  done (took 6.745314092 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.340870077 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.339950104 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.338431619 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.35432819 seconds)
  done (took 9.615093664 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.024168498 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.873593047 seconds)
  done (took 5.141898702 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.879655034 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.884837171 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.881264176 seconds)
  done (took 6.891408574 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.653402263 seconds)
  done (took 2.898766322 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.314970063 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.364527787 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.362071612 seconds)
  done (took 8.286695987 seconds)
done (took 40.821291407 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.362723555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.125283657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.548613604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.359765774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.536855006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.5178666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.613583963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.37313645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.362862968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.373955645 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362235044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.52404394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.601921914 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.128587035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.601139188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.128844666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.535269503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.3661869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.371063615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36744979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.613886945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.378278102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372529829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362411689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.532055146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.508141495 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.371666524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.128788914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.370895199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.371256066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.509085549 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.362507648 seconds)
  done (took 82.291046587 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.364302515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365934026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.370609915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.364074165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.375968947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.36796057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.364465104 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.367760307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.362423727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364512275 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.375452111 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.366728772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.380789686 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.377025119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.366700978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.366237939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.37721008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382007598 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.365908347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.384818432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.367697366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.364306183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.366599535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.364949676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.370056446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.377706555 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365014026 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.380839138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366142846 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381522847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.39503836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.364863263 seconds)
  done (took 77.122684924 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.364752185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.372239538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384650427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.37072763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.367824241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.373445499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.37275341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.369038664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.392830054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.375891955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.373723896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.365284981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.367113576 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.383082489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.368142391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.384470277 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.369800656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.371355977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.382599757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.370740939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.364013501 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.367285435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.383061626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.369422707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.373052133 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.370788559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.374608181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.368779876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.369394338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383388938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.372361467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.388468533 seconds)
  done (took 77.217021499 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.603765939 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.384496158 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.385249582 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.378439465 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.38701797 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.380721048 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.378903113 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.612702626 seconds)
  done (took 14.760896212 seconds)
done (took 252.636199865 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.373397675 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.848667077 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.413753832 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.378106413 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.394489503 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.405187385 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.581191247 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.409263229 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.567475477 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.382615057 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.409460575 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.382690543 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.153644269 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.519988804 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.175536336 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.302655661 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.22890828 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.390761124 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.925023473 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.605117869 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.412541559 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.377601425 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.188894517 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.249079464 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.357685372 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.436431701 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.439923757 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.530969333 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.496014617 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.440276272 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.850590625 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.38927232 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.380643589 seconds)
  done (took 63.650084663 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.377769063 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.385814451 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.387308777 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.386399298 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386126272 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.387528394 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.377846978 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.38751677 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.386859198 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.386794279 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.386941298 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.387078345 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.387011334 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.387347773 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.385925514 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.359932511 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.377479984 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.386385993 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.379006661 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.36034881 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.388201394 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.387984361 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.388129345 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.389114286 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.38858104 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.388325315 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.38901069 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.389910587 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.390955324 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.38847349 seconds)
  done (took 42.790365404 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.389358863 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.919713087 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.098988945 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.393761492 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.378795769 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.385227141 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.659668002 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391597755 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.384090779 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.385546708 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.843063063 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.391617809 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412237597 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.109195432 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.388981465 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.389905538 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.390475994 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380799201 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.926529605 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.391584591 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.657958297 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.390113294 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.658866152 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.389697962 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385652489 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383268118 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.387155943 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.155975307 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.40101155 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.842562574 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.116412225 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.660353743 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.093580668 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.151430305 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.128111323 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.398882053 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.391789401 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.846555606 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.390154208 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.383791536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.65646278 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.383244894 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.111440035 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.067541169 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.406280862 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.393211306 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.195341969 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.847923639 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.621569463 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.386572891 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.147768965 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.390977752 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.39391231 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.386643993 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.616643131 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387185097 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.382745841 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.23497213 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.395603738 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.659354506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.39519042 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.384783131 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929985585 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.386455614 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.924668159 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.386937194 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.393360664 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.386184991 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.118703933 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.387714612 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.080780573 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.407203037 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.390899166 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.84839961 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.927074017 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.233036359 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388503764 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.935367399 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.137942724 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.676237178 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.389811187 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.147237094 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.67966308 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.389458352 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.396648997 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396769012 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.394041478 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.457125816 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.659517061 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.997434492 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075806731 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.232071406 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.66472633 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.392725354 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388094364 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.227654262 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.395232332 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.394839698 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.112579742 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087452085 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.403446049 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.394019971 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.067129146 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.404648437 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.664356125 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.396733687 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.160839302 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389968393 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460513243 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.396806928 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.395082389 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388453156 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.663356148 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.391517399 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.39695668 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.064996263 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.880806151 seconds)
  done (took 193.067467486 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.382422614 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.383420503 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.382283508 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.380802257 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.382242722 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.390023352 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.38017326 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.381684498 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.385955718 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.381625587 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.383053521 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.391379876 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.38753952 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.382338226 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.395891194 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.38310411 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.38396286 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.396125728 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.383574255 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.383733551 seconds)
  done (took 44.964256492 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.398764412 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.926046182 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.894566615 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.403858359 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.39900219 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.392250815 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.444356799 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.401452589 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.398954886 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.676782044 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.5545543 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.404857316 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.398584467 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.399188589 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894838654 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.378698545 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.675981971 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.925900135 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.398572814 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.925469248 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.371110645 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.397760902 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388714049 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.9273733 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.686230477 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.662325431 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.446895248 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.926519314 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.400553768 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.396472017 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929559158 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.406287461 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.393292679 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.914705148 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.401736581 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.414148934 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.399993881 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.446732189 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.45145593 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.682971395 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936012536 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.671079957 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.415688448 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.555939165 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.40222384 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.372730028 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.940089227 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.402106462 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.372459456 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.39966667 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.406160569 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.910345987 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.398827669 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.909793283 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.405010605 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.399216008 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.932532102 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.915365059 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.90693928 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.55817735 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.39788271 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.666176216 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.408776667 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.941558135 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404586197 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.401368834 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.399360209 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.558478827 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.938230031 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.669684049 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.681310264 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.681529757 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.40355516 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.459794588 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.403273076 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.681081374 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.458078965 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.77897032 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.687299008 seconds)
  done (took 125.833527611 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.670865194 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.506833978 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.760974448 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.953999341 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.879349937 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.536896863 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.513258546 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.633653126 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.40870041 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.508169005 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.037102776 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.486820834 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.140745612 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.458732836 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.501811036 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.513141467 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.778062699 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.338180181 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.02753385 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.995634809 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.394812303 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496037865 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.895107004 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.590726817 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.402704758 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.991830021 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.306979161 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.900560495 seconds)
  done (took 52.896809391 seconds)
done (took 524.450842874 seconds)
SAVING RESULT...
DONE!
