cset: moving following pidspec: 20268
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328022366 seconds)
loading group "string"... done (took 0.535236679 seconds)
loading group "linalg"... done (took 6.709626788 seconds)
loading group "parallel"... done (took 0.153083283 seconds)
loading group "find"... done (took 1.161728482 seconds)
loading group "tuple"... done (took 1.74540632 seconds)
loading group "dates"... done (took 1.18197861 seconds)
loading group "micro"... done (took 0.220890168 seconds)
loading group "io"... done (took 0.971394404 seconds)
loading group "scalar"... done (took 36.231997544 seconds)
loading group "sparse"... done (took 10.963965319 seconds)
loading group "broadcast"... done (took 0.911518917 seconds)
loading group "union"... done (took 11.824423931 seconds)
loading group "simd"... done (took 4.132465039 seconds)
loading group "random"... done (took 8.496523244 seconds)
loading group "problem"... done (took 1.857543921 seconds)
loading group "array"... done (took 19.920947735 seconds)
loading group "misc"... done (took 1.673898027 seconds)
loading group "sort"... done (took 3.210471328 seconds)
loading group "collection"... done (took 16.474706909 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.47168531 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121018977 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112917801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116049927 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.13904501 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112885726 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121570803 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082770759 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.772590098 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13977794 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117627125 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.405054369 seconds)
done (took 4.877662816 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172555375 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082326939 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080933233 seconds)
  done (took 1.284738021 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065104652 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121268704 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066065516 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067106876 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06642436 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065810993 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065937678 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065418107 seconds)
  done (took 1.640991085 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072290082 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067820727 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067666575 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067083183 seconds)
  done (took 1.398132992 seconds)
done (took 5.692393784 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.754527933 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198076009 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181687788 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396016761 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128736636 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160934373 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637622398 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.302038965 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184751974 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08020133 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101998475 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317191298 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105329162 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634842995 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0761305 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088804185 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135869145 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440109793 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066783665 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081574654 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088408185 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12894859 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086823996 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075028367 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143704173 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06740241 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127108912 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079966705 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065902165 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204569311 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173149897 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662095392 seconds)
  done (took 10.137152042 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094793133 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096541731 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068496472 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122596645 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097816567 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069131438 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07045932 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066890941 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085949525 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126677231 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087675308 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100031393 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065652431 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06834776 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08630167 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202446905 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079126885 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080618858 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069902809 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074646868 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105182283 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077297761 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077277166 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076755525 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127653709 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179579017 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096849032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097138745 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068750985 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079672035 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114788264 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124825069 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067650163 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066652478 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12352194 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094977254 seconds)
  done (took 4.552729542 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.895195843 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108309676 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137352494 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088925139 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159434717 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067009396 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105311523 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064811838 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082989244 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196390842 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.047787978 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.425836331 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0651511 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110077584 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083967999 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067185095 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068200958 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066110846 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.334870153 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108835964 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111234687 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083392895 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073111743 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068978008 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35492987 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066651327 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066191164 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06762586 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057574801 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112253393 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067105144 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.971669765 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087679564 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067406171 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100677854 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166009286 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087984226 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132186121 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064934128 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064623312 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.145762613 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072938189 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064640396 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08149502 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104331646 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.101237355 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.196253013 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0678475 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161133048 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066826895 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082914808 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.699625993 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154332594 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077615029 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066611651 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242978969 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084886997 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06578953 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064515689 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.172307185 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129658809 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069029388 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067867992 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066006978 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068054513 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349560257 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066685832 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.720972494 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070188357 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076493792 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069238388 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066356697 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072295859 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071629679 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084969267 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066198525 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067816261 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066005918 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065550291 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064160222 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067708441 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083702644 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187898959 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065888252 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067013284 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064835709 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086371869 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096425075 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073352146 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064893729 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100384624 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068160603 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067154494 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100964879 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066652419 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064912085 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083185929 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06873662 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112614841 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067997398 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088954672 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06652796 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094783992 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06991596 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099095553 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.168951314 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067396698 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.223604186 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064817815 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064760705 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066330075 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064715228 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067535048 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067958755 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079056242 seconds)
  done (took 19.718288185 seconds)
done (took 36.425819602 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271879431 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073614825 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074416451 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074169777 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074351328 seconds)
  done (took 1.776336823 seconds)
done (took 2.963172829 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119050105 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097938015 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063812809 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09491671 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063682954 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099285771 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09828387 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080896109 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098206145 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064150179 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0953955 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063884409 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063863423 seconds)
  done (took 2.311622128 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081842855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082607082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069945514 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081710844 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063914443 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081676618 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080008275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087440723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080110046 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071640353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063377122 seconds)
  done (took 2.028876669 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081463234 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082913429 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069151212 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080991846 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063456912 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081003555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080782861 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084546641 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080683586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072851342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063373101 seconds)
  done (took 2.020763112 seconds)
done (took 7.538223523 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076238373 seconds)
  done (took 1.249328189 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581424105 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.025210035 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080931069 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110972121 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181905284 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117754243 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273208984 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086200245 seconds)
  done (took 8.810356765 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100002507 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071409406 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069007523 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068420751 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069552122 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071613627 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07099661 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068883972 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068010765 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071512902 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068252352 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068955684 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070592907 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068569329 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071571874 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070623484 seconds)
  done (took 2.38891527 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091226793 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089893185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072622816 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074354202 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071428335 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071492226 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073986361 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072567315 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070412914 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071438827 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074782359 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073232225 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071313581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064839834 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073560562 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074996796 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070118224 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07372757 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074210873 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074170483 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074415043 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064208915 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071252516 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073490247 seconds)
  done (took 3.043235231 seconds)
done (took 16.672183423 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111459256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070762051 seconds)
  done (took 1.360626353 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079849282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081498762 seconds)
  done (took 1.347184144 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081617365 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065270766 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088172434 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077036231 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066305538 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065677318 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086009009 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066036897 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06579839 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066261958 seconds)
  done (took 1.914953975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068287868 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076797767 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069613999 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080502787 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072797834 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064189787 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072034849 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06782208 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077124793 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062693877 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070771887 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08166465 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070430441 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082860536 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07181157 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067799765 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070363908 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066624058 seconds)
  done (took 2.483298856 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065083871 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066449094 seconds)
  done (took 1.324136373 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066370567 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063111767 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065805547 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065781196 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063179502 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062184461 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063172966 seconds)
  done (took 1.639135445 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.371464538 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10991425 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290529894 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070486832 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081353632 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248213947 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065084404 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069951135 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069977234 seconds)
  done (took 2.607941171 seconds)
done (took 13.869186283 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078631449 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08427247 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09307328 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336539199 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091372649 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065715509 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11597536 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187012729 seconds)
done (took 2.253717471 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125519883 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.555113334 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.364696287 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192723133 seconds)
  done (took 2.307832189 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.31197861 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090795725 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058757077 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066228352 seconds)
  done (took 1.729684668 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0656383 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068171718 seconds)
  done (took 1.334311063 seconds)
done (took 6.699381962 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06635586 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065253227 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063449127 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084487293 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065074943 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063062956 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063070512 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06547002 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06552195 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065521204 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.065468385 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068358486 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069088433 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063069375 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063227784 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06553073 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063153901 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063268808 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062986528 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065717007 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063295156 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06518929 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065871712 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063108778 seconds)
  done (took 2.808498698 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082036166 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066018714 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071420246 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070723024 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069525644 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07064461 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07063489 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066039212 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071167295 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067573744 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068921396 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069029242 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067676091 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069278158 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06774489 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069425978 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070596151 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065884622 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067672872 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069522398 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070731994 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065816257 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069032041 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070505602 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069372396 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069048396 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067634607 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06574339 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070928276 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070214033 seconds)
  done (took 3.28861387 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068892787 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063379287 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06409251 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07001982 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063338387 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064293746 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063127247 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063488406 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063947269 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063468304 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064414527 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062904089 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063422599 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063945071 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0641296 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066447179 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078197576 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063733852 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06357143 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063616766 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066874918 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063342829 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063088554 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063032219 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063160879 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062666326 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063600457 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062904334 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063777963 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063123792 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066091127 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06686192 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063115595 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069717252 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06663644 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0629249 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066843175 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063564212 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065330776 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063243732 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062926657 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062943895 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062865268 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069715503 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063156798 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064809219 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06370887 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064424759 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063416995 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065736814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063275854 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06335805 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064890283 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064681999 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066767961 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0630012 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063666755 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062649117 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064191444 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062895022 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06274783 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062773435 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065487404 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063488151 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077279543 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069973501 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062960203 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064293422 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064309576 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065963844 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064902177 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075848556 seconds)
  done (took 5.882597288 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089377642 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.196267502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06477157 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064751448 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06153222 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065057362 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066800146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063719864 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065080091 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069099402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063805103 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0649311 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064730936 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076272291 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063831642 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064776819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069306513 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061540332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063455826 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066628802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063654288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066626252 seconds)
  done (took 2.812965105 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152234921 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069586882 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104370113 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072235696 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066807844 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072027301 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06919153 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069150499 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069567844 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067566019 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067547665 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06920016 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066930546 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067411196 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067997638 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067594953 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069593002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067814255 seconds)
  done (took 2.568426036 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076151048 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066128796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085895452 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065548964 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065298916 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0682668 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070009788 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073545434 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068013735 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066030775 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073517981 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068004898 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067664258 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065416939 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067959256 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065872351 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068026781 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065359011 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073434099 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070100728 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070006512 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073632805 seconds)
  done (took 2.745292896 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078805282 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067920944 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081923583 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067734298 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061791898 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064042374 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069386001 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065636729 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06959408 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067362589 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065367315 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063929871 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068677117 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065554268 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068738587 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065890536 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067404331 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065931097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067413834 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061625219 seconds)
  done (took 2.568267116 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086381715 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06702556 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067316165 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074972109 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0672376 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067263815 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074640029 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067322023 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067257475 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087025685 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067328089 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067086422 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074600018 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071843008 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06687521 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074376123 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073973238 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074318527 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066899243 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067195008 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086605862 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067156207 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074063875 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066835114 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06729287 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06708121 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066826098 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071541067 seconds)
  done (took 3.212690038 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066221486 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065651849 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063595848 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063472181 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063358757 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063762758 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063305688 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063235667 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065441966 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062941307 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06544421 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0654686 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065555894 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065335746 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065494556 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065634302 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065915004 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063227741 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063336531 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063231745 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065362691 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065478746 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065410779 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063077034 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062805652 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065486601 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063442736 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063173575 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065365755 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063318326 seconds)
  done (took 3.150970206 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074245826 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072012814 seconds)
  done (took 1.364420556 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062952967 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079106341 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063157632 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069301593 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06923434 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066201456 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073051545 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069462433 seconds)
  done (took 1.766929221 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080393386 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076864481 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066928443 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078828222 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075626126 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081929178 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13109519 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066479271 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072029289 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063906082 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078541217 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065193827 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071423265 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065964361 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070949188 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071553186 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063839681 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071731068 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068406263 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0644533 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066904881 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074225895 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068154562 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061476818 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066527869 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086893563 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07634368 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065579162 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06835501 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072958489 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071321049 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060036048 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065495838 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066150778 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06395393 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075467358 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080345977 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071455014 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074304149 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067172644 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07632691 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06119957 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070192572 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072380221 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075591281 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066053739 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066429194 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061277262 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063866545 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06761781 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061251619 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066084663 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060701177 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072467253 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069564711 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078130621 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064607772 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067248121 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068465321 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069078757 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071816003 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067510758 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068210566 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065455159 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07472985 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070105201 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074224938 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061189815 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060321999 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064223365 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075558964 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087693518 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071780061 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066607797 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067302318 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064040209 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069140625 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067317556 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071808785 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072071401 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066511538 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071638807 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073355426 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066421866 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069163617 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074249465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064378347 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068912577 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064469104 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08192856 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065032676 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064843658 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064063045 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076571604 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069738808 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065921398 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064127492 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073669656 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06060522 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066325474 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066742164 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066245369 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075443387 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07049173 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070291611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073804576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072173777 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065094016 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067772299 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061970598 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065523348 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063807372 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0716466 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059497362 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067529826 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065480552 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.189906295 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076104571 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065020595 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067485187 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07420172 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072728865 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065708609 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062987397 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069250716 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066187851 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069427004 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073984412 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065363727 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061973461 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061486601 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069596685 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066710606 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069632419 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071354495 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068857706 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060997511 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064609913 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071117078 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074574155 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066747296 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06788394 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0722831 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067515678 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065424589 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072555464 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068523253 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065402468 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071575556 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067866611 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062772072 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06934244 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069024266 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065051539 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069626691 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069807345 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068430554 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067419916 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064768721 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074408469 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067317858 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066823457 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066582514 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065154142 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076457807 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069050743 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062012944 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063605676 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075481166 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064555023 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066254453 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065675914 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068603751 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066936958 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06422341 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065710712 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068434841 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076564186 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0701843 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066904096 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071429994 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077592979 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066336604 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068743602 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065650441 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067089929 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066913634 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074912949 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071414864 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071159167 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068721313 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062931689 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071358135 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07334586 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065097275 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06400475 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065371836 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069829899 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071777112 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06992788 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066728134 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064265399 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066683133 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068960958 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068496755 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065701253 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065293354 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072342881 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064134096 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073217451 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066946287 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075617626 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069421335 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061365897 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068859222 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064387957 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072180897 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061188282 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064160462 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065199548 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066765571 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064447592 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068071581 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059815587 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071805346 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072190363 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065479875 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06429552 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064528223 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071226386 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066636381 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068231584 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06852385 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070866962 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075006307 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064470814 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068332094 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203658184 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066953884 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061025824 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071953859 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065761928 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065986671 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065530108 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064782777 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069221149 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074832943 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072789052 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060383371 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06850621 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065683793 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066370102 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062490658 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071334162 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069152594 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067977882 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072503878 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067443539 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066477301 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070072207 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066133831 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067285921 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067933901 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069086705 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067272016 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068197369 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066729418 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068963416 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065571713 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06496806 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068155347 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066317035 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066782952 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071667146 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065942653 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06641601 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069203301 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067148632 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067177824 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066404644 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066042458 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069196826 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066920339 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066496336 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069010114 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06169556 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073623591 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065895464 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07383361 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06672848 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063739846 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07319605 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068993838 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072243884 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067577203 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067524596 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067632451 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065700502 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069677655 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073381173 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063880809 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07596117 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073556873 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067064666 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068789941 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066405886 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068208254 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065260229 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066894127 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066732698 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066415193 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065996439 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070496499 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069106967 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066968235 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068026467 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067235473 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066878204 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067390566 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060921933 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065913234 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065936878 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065744111 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075655656 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066989602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066308244 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065934971 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067315374 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066001433 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063369495 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074434068 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075725469 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066949858 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073177264 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065727519 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067842153 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076171983 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060687768 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064400089 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064668438 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06422902 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073222148 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066508988 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074370294 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065659957 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065110039 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062804274 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066331141 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064828575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060088569 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063190143 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068532123 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064106896 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064434559 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064944308 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067847479 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065716143 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073545262 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064157343 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065468 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.196518613 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06415025 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065963398 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065983088 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068725122 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067345524 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064487799 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06480591 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066180718 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06688018 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067824088 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066160919 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068529689 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072966318 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066199775 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069287655 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070289452 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064191544 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069154563 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066988927 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066895359 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066414224 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070242668 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069989358 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067260552 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075928819 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066647027 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067415379 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066595444 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065256436 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06604799 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065903367 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065922125 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06581414 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067647429 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073604524 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064406793 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069252418 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066252173 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066980266 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072277009 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068109416 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068542198 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07236923 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066448889 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068074211 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073970917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070563829 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069763472 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068268044 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067846191 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071313256 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066034176 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073013653 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066746389 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067246599 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068564113 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064524988 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065446535 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065933837 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065884883 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072240943 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066782339 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065673513 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065673944 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064574298 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067522078 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069205519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073932212 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068227581 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06919224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061499917 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063141152 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067331509 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064207544 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067837217 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068669703 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071920479 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068522171 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066911287 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065132359 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074925788 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071567169 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069524399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064008287 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069637171 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066817938 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068199381 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067034533 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066126945 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067338378 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070110356 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06750759 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065229819 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072816622 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069555142 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066942577 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067531999 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067179724 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066269868 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061622607 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06672311 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068065014 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071170282 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068455985 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066247499 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076393385 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063953736 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066355608 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069112269 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065101579 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07039837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061549671 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067241457 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066220868 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066149871 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060360472 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064172024 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062987425 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067198783 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064420706 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060371575 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0744923 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073615262 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067902165 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064228077 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063712941 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060215937 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060134773 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064420261 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066049007 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067093706 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074637022 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06405186 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06445047 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06042116 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065353385 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067701572 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068586352 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063023185 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060599201 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064521717 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067801708 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070716909 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064204542 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06464381 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068307863 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06726985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063260627 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067885705 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062123481 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068171415 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076681702 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065668951 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065811104 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.070440916 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072665311 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06541881 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060453307 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065346479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067820576 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065318366 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065554465 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065928909 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079526317 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067945726 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0644447 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064147652 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067153288 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064689283 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072390216 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065734742 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064538392 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068297403 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065971968 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070323603 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066498866 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070143305 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06646035 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06631778 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063185924 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064674744 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062843213 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063083301 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064529733 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064720581 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06842803 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070510504 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063256955 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073665172 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072754079 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066203243 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061929381 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064266171 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063152193 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059232846 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064471408 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062526723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063183841 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062297504 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062920733 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065018395 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069451213 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064599729 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064309262 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064157768 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058620505 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.066119323 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065930525 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063931542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061539742 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063665591 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064172353 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06725722 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066463436 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062137564 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065261393 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065414963 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064570987 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059594939 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070336559 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063139065 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06571088 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063262725 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063499424 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064571166 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067218654 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068028723 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065428795 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065484401 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06761337 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06583965 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061532807 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061560043 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068434856 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061826144 seconds)
  done (took 42.009057385 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107521113 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065462075 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065191166 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064918852 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075957258 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065965946 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064396863 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065641261 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065504919 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067203112 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064237907 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06387077 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072413633 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079387204 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075472985 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068566851 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063913294 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064975821 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064246067 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064609514 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072396892 seconds)
  done (took 2.927220152 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075385249 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072021531 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075018844 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077042323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068875916 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072078215 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074151639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072116505 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077315365 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068324988 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077113152 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072288996 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06867724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077204104 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068134983 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072305303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07700082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068504485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071749815 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073579401 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072020574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07313456 seconds)
  done (took 2.92394106 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067788514 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066911915 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069018134 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062611939 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06757095 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062245029 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070514907 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064858354 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070135016 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065927745 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065718746 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065739194 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068809879 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062390804 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066967062 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0646209 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108331946 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069559791 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066411344 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06767979 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062188443 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068647599 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062245053 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062780158 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066095761 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070313985 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067000821 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064619079 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066268918 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066040533 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066114779 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06476495 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068324487 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067198173 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065535917 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065612666 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066205319 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066037571 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062340753 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064853662 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06702318 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062574744 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066651767 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06794885 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065106378 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064149889 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068244372 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066133449 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061846769 seconds)
  done (took 4.600315142 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079391032 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109065706 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068056484 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088778809 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079932542 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072893497 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070231932 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08966305 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063841453 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064956397 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081662278 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081902556 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066317636 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070426148 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072489542 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066047032 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067126663 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065028974 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069819642 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065533018 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069990486 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072786582 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079967081 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079103195 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070496832 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065517392 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065906398 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071043834 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078587043 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070485546 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070614798 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071560012 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080656543 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068448797 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065679685 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068336379 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081704725 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067505821 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068928135 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064390803 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069098659 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07089841 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073000554 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082267222 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06696827 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071988717 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065925024 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063542507 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079580394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068987107 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074653048 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080058265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070185258 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066619616 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071236507 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080690574 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066323924 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064755252 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069584444 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078096518 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064438215 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070172825 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080413741 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068326907 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073481885 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080007574 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071783546 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070720604 seconds)
  done (took 6.396522976 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075891299 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072308765 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080553215 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079594685 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072335634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072590021 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072686487 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072690389 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072238854 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076712344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072801252 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09298388 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068291899 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074947158 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072489543 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072739953 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072529609 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072728122 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072517604 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072691088 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072671629 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080029457 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072442651 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080001192 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098050873 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06802903 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072152806 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0725524 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080103248 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07225304 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079583222 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072321438 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072602529 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080176121 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079283559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072097125 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065594266 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071952116 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072538891 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072187314 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068713401 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080196051 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072157524 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067973767 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072587271 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072089081 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080042602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079093837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075141852 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077805245 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072632229 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080018741 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072455541 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072534409 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080266018 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105117868 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079651729 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079730935 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072239326 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079753756 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079779236 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085988694 seconds)
  done (took 6.048841523 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083020292 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074982285 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075995821 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061685447 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06489101 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069964377 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064623942 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064529677 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074384313 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07439243 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076477156 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069770501 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072410789 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076572444 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069798734 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072520585 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069812865 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069974001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074168903 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069748984 seconds)
  done (took 2.774707637 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075095409 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082794052 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067123469 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072377195 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069194839 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071995176 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068667143 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069351542 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067110134 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069411223 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075782743 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076117089 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067129891 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071739423 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076182112 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071712356 seconds)
  done (took 2.493184176 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073951856 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072539528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079483678 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06638793 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064961851 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063093035 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066030747 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061875086 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062801996 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077968204 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066567094 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068405046 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06621004 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065173263 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063331794 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068863863 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062888923 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064270718 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066544383 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078539094 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077410478 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064890301 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06739615 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066349036 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066553825 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071480264 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065755973 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064341661 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063763115 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066868882 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066833116 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069879518 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063819468 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064478689 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06559707 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064848745 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06604923 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067016806 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068767585 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066407524 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064906765 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066093602 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066117698 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067006387 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062736758 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066615811 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062408605 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068241617 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064471012 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066305591 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066158999 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068426681 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066569744 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072331229 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068633289 seconds)
  done (took 5.037422365 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079626135 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070331445 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062764661 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06428811 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069278031 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068282505 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070175006 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067843305 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068052468 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064452057 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068097122 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069140963 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067871461 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069971677 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067923221 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069788846 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062181988 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067911907 seconds)
  done (took 2.582589807 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071527687 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066600065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073222455 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066026247 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066035372 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068357788 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062436794 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065225553 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064877628 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066049006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066122689 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068660277 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064972907 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068917484 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066495493 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066461656 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068585039 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064921852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066146665 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062435551 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06894663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064894128 seconds)
  done (took 2.815041617 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071631098 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092392675 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137271275 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083742381 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081740051 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078747556 seconds)
  done (took 1.894806034 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090884817 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079206863 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066994882 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088067475 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073337274 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06739964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067295853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067444835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075832415 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075840459 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068020883 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075752253 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075953202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074954401 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072933027 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073396759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067590996 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067351358 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066423858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083671571 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067563503 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075679722 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067260898 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06689575 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067227226 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074710117 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075114515 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075628366 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066872578 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075405676 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072900446 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067175701 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075697825 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075454886 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069058755 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076208603 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067425463 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083517551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072959745 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075155962 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068895547 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0732019 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075792356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071882536 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075449672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067345938 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071770967 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066965628 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067550104 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085075715 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072799732 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074431751 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07303563 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075688794 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075591244 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085886625 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075883022 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074639308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073006321 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075745621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074580482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072584454 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074273588 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075846021 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073125239 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07772975 seconds)
  done (took 6.205785854 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080734937 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086124118 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067569826 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07611366 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074439465 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067343603 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067751181 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067488262 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067320367 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067171505 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10641324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067627766 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075202308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075126202 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067888364 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067496435 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067325737 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074952694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067320616 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085443191 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067188179 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074587576 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075253214 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075005329 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075699461 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072981738 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067743559 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067450934 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067368035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067573948 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071900171 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067341514 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074782506 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067028483 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074730098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06756879 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067267817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071824759 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067306017 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072835298 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074705203 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083857226 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067433957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067180298 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075826196 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067678311 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067557561 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067369023 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067465192 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067315276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075768098 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075743854 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076273756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075705024 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067641919 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067746127 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067544679 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067793757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067658717 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073162763 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074922422 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067696004 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08551527 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067587551 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068016076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075175593 seconds)
  done (took 6.117866463 seconds)
done (took 128.19441216 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183480371 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167607129 seconds)
  done (took 1.696180905 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068338475 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095284837 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076785746 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128335505 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066906087 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099630489 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098789964 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078611361 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06637424 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066376922 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066248441 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068143672 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130520193 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066639529 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06630346 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068336364 seconds)
  done (took 2.669300612 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096323654 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.17248442 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099277096 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06545293 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09649892 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072828253 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064979556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074954325 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071066291 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065305753 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073008686 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070651008 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065597684 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070709652 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07091117 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073093983 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065200266 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072745332 seconds)
  done (took 2.802109085 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099732201 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089911299 seconds)
  done (took 1.554054672 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158004169 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105601335 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150279025 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.337638545 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.160279704 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231098708 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128216367 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128230117 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120399701 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122971996 seconds)
  done (took 3.001489469 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097400512 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145954725 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254976575 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114786305 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072519521 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09072218 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115867908 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077561836 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077979022 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077452401 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077184895 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076192209 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095825256 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073638573 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073514287 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075796371 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098698001 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072969435 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075546646 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073660435 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096030611 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065650332 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073657539 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07260086 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074390612 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074311882 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065552076 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065477033 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073663516 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073412496 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076225364 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.08890361 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07445845 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10336744 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069915679 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104590696 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07573023 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070790494 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073374985 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070905889 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075108547 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075730704 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071765832 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07552513 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065132135 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075857899 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065755106 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065875001 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077750928 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066390883 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07820705 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076723683 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104056543 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066474793 seconds)
  done (took 5.888443512 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.661175979 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103096886 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069821874 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107757795 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0958756 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071938284 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.687746069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09065205 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172795995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091727111 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08792963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070370148 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080643692 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082751891 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108385125 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100944533 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093267128 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070956682 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100586187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.09794054 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067882456 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09315389 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089485183 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.374907027 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066910773 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069619563 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067780959 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070165843 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.109895052 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077924177 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070085811 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120172922 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083835342 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.120462775 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067236306 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067594525 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067648678 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07866412 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176229986 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131487846 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.129543369 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066987784 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067736334 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069051488 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089107887 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067198529 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10913176 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079377763 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117476647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069761731 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069455807 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067256159 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068773501 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079120861 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076820167 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080198162 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.228859877 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067833135 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067827988 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070882571 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176726082 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078602127 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078140037 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090973833 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.128577065 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067582303 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.687552295 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082981668 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067278183 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069134772 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067265012 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068895788 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.198138087 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.118033301 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.342756547 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070005608 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070412935 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068577145 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.160723419 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078556625 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068152783 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110780051 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067702366 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068557993 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069779874 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069293193 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.115399567 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079260779 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070409922 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067455607 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069927879 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068202527 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066991343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.16163365 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080768406 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078889565 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.158985488 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069677167 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111749934 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078843649 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070328682 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079790212 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06836151 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070237706 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069532569 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078605983 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094808447 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079123711 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069895908 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06843182 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097567172 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080339786 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068013677 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078112082 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.396538062 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079249415 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067457796 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081012965 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068216056 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.110251189 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070352721 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174756543 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068778049 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078806305 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068522427 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067316318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068280498 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.110162609 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069715056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068717443 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069268074 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070043031 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079313085 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131962064 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07031445 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.159071897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.133079297 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070206572 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118563622 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068343047 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115608382 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069601413 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069011409 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069861276 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.701172387 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068073149 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068731907 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069653743 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.137370852 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06764778 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078336545 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076641983 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066917501 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.688150053 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078534408 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.206268883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080504301 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070482787 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069047854 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068469132 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070275937 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109500195 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142125043 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07030212 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068387884 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077235367 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.111212132 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067477812 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079516582 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077718703 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078147571 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069218387 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069747235 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080967865 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116858159 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078563078 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.134019961 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512322297 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068154319 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077512475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141559103 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068596365 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084446586 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068231677 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082270357 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111157083 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077339862 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.224971682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.113236677 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.138222222 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080419454 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082259088 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067704351 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068525898 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078874278 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068142684 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069853045 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078118442 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070107541 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069687319 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083805438 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068600438 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172424819 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067104913 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078852563 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067040116 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069565332 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082695153 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068182993 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069988679 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07881307 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070017523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07719198 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.685095741 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077827579 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068245834 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07001657 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.134198538 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.113628474 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068200021 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067934321 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070249087 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.10908712 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.158238915 seconds)
  done (took 28.044473811 seconds)
done (took 47.024720698 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204951303 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148196268 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199744324 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116441476 seconds)
  done (took 2.13027141 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119992028 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100004658 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093927072 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064830062 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100687934 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065053808 seconds)
  done (took 1.944406859 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304224372 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206866175 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17885037 seconds)
  done (took 2.082787464 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194305616 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18443109 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.388791378 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.248637355 seconds)
  done (took 2.5187229 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140790519 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08812701 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067200772 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082798118 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132364743 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159717761 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100000534 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124320432 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077901115 seconds)
  done (took 2.420953767 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142995529 seconds)
done (took 12.645045714 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.236376669 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.188076634 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.147370753 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094035185 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162064954 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132063933 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.118883128 seconds)
    (8/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.201895842 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.208959762 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.220409622 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07116407 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07147611 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075957997 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081840823 seconds)
    (15/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072679976 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070017333 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077624077 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066307019 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073178525 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.099508871 seconds)
    (21/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079577136 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088080491 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072089157 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.165478623 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068690016 seconds)
    (26/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075247819 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076586767 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087318673 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065521284 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.167881086 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113530151 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094278033 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072808317 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095121046 seconds)
    (35/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148149458 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072152845 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071317567 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.178341001 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096968908 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 0.126336742 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065157262 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213936935 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088961005 seconds)
    (44/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109258219 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.138311927 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082454501 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075048382 seconds)
    (48/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.166916886 seconds)
    (49/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071440129 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153683722 seconds)
    (51/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06927429 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094368956 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.14612177 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065415001 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076179392 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.142448223 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11647181 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093112804 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097740697 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072494208 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090342018 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.161627949 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052379144 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128446395 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067751304 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075740416 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066084763 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067248113 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 0.124087626 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095887803 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.179798082 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.161912039 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.191723103 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090884109 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075135746 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.154807471 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106202489 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074858679 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 0.137440537 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074632996 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067745586 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174123622 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051046209 seconds)
    (84/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.292988598 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051506558 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065859397 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.152977796 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.1029971 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122907095 seconds)
    (90/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099677151 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082751447 seconds)
    (92/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067779704 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066528781 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051038724 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.066439778 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110699906 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072988884 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089971673 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054776144 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.170815672 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05431985 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.159597972 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065844588 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05257382 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079762937 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072279541 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065082429 seconds)
    (108/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103862145 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133732915 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.137738703 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178620687 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061350135 seconds)
    (113/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071412886 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09978966 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107234524 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.314814508 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090566654 seconds)
    (118/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147519856 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065937055 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.136325111 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072202563 seconds)
    (122/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063968758 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052547861 seconds)
    (124/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.13700838 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07267732 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089562887 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05117561 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.136290913 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107729644 seconds)
    (130/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119105749 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071895621 seconds)
    (132/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.0531634 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109471079 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.1422345 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062020988 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052843734 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050871242 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070756079 seconds)
    (139/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080554564 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065303391 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.131984711 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075816662 seconds)
    (143/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051626587 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.104272756 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073112229 seconds)
    (146/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169482398 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07176794 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.145675636 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076206689 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065140597 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131244508 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070690011 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072235198 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164662035 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1241262 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071530803 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.136282257 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096102162 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088566749 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065001227 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072277117 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051015439 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168437239 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062640077 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.178946173 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101477366 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072884204 seconds)
    (168/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050970864 seconds)
    (169/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061757515 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08129237 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067199225 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066611144 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089385226 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075374006 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087379474 seconds)
    (176/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113819021 seconds)
    (177/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072558163 seconds)
    (178/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076998679 seconds)
    (179/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098713815 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066439518 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050964691 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071221801 seconds)
    (183/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067659998 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088142583 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078714168 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074972391 seconds)
    (187/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086646969 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064850284 seconds)
    (189/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097285714 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052290813 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071452875 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080194034 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071244735 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073010899 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203772796 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.156305117 seconds)
    (197/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061846097 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051750992 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064262149 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051451633 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065119542 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051226531 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051274918 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065421064 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073010443 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142662991 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07465987 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051984725 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089307269 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089471641 seconds)
    (211/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06805006 seconds)
    (212/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051270172 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051620942 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051710315 seconds)
    (215/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061645595 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051956776 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071461052 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.1548892 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086694138 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076498121 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052252829 seconds)
    (222/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071772453 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064656698 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067362288 seconds)
    (225/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06259449 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067212855 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065610652 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070847477 seconds)
    (229/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052906614 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073622285 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138179265 seconds)
    (232/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071056889 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073057022 seconds)
    (234/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073246509 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06227395 seconds)
    (236/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.168938968 seconds)
    (237/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074186591 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145522813 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.136646431 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074768605 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052815704 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065866197 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054065396 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093378014 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144787424 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052643901 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133457832 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.070873954 seconds)
    (249/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183130266 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053483777 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065061886 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07190507 seconds)
    (253/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062227142 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166607535 seconds)
    (255/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072713638 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086577616 seconds)
    (257/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051327179 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065125106 seconds)
    (259/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06579225 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07149949 seconds)
    (261/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109072719 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051386084 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050820911 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050940083 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065115369 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088540071 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0520056 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073015157 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065181532 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069890566 seconds)
    (271/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052498157 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08831798 seconds)
    (273/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067148644 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066551675 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163536333 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069788132 seconds)
    (277/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052779055 seconds)
    (278/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052097225 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055034707 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066873713 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066026798 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065951253 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173681349 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072234999 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070909836 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087148845 seconds)
    (287/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052360976 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065061807 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063846439 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106914097 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065359062 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063793952 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072911683 seconds)
    (294/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064408673 seconds)
    (295/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066315387 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06582791 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052841647 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052882719 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088610082 seconds)
    (300/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077970351 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07101304 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051445039 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05278731 seconds)
    (304/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052311847 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065360424 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064924947 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052618166 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07035125 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050937998 seconds)
  done (took 30.137331229 seconds)
done (took 31.544545836 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084697867 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091484443 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074400771 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091678268 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079674839 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076459313 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072054492 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077764652 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079066835 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080663335 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077381521 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055086272 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073335128 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073503684 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073939279 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090281109 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077255944 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072112822 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072829755 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064802487 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072295955 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065110199 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066891948 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054857131 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077272141 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070840864 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071774052 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073517676 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065344454 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065619929 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068484222 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072548345 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064870582 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077779006 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071889854 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072403966 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07407827 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075774593 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067144571 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065643925 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073513983 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065197169 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072466533 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073089641 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071890846 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070876954 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07256507 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077683226 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090086587 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067367491 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074417641 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07563979 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075504275 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072031221 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068789633 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072533384 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070187304 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090005123 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072758421 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067538782 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07386731 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073164691 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070652562 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072204805 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072044983 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07459091 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074865951 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070592041 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074021479 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070770718 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065148986 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072285785 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06849207 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065319746 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074728823 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076416534 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06419819 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070680795 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072520794 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070773286 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064748659 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067464888 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067161855 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071081924 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067270209 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054923286 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068736656 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072165838 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064571106 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072633355 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071472043 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071734189 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067227746 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07475681 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064710864 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070634216 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065241894 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065255397 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067159566 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068724852 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06474543 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067064456 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073704293 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066382164 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070978856 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078430828 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065338636 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071415835 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064190361 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064730648 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078780863 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073933232 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065498843 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06775884 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064773952 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071978578 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064378573 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064878077 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064871615 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065227465 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070564894 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064944212 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066811098 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071469562 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077135968 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064550481 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068007277 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066808951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064661368 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069796152 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064628411 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198909523 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067484564 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061963496 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067675464 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065982523 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072465928 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067441476 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072418259 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06675862 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073546174 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070378983 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071130098 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07044772 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064333339 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058853432 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067949834 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067703375 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066557257 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065561794 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066702074 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065531956 seconds)
done (took 12.390896851 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066089078 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14164064 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097886836 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093814763 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084975732 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065522288 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075318392 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100594428 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067571193 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101348799 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086071058 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084517463 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111449565 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064538999 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065769047 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069575909 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066648199 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086115478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099952966 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086362601 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108056945 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064749164 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093314212 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088874698 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086252864 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10121342 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06615031 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069356557 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069204784 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091391312 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085652959 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069011198 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066095113 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097266782 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091655819 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082864897 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065814171 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081887212 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065694706 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065812264 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.086438947 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097553599 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07946409 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079736609 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071963575 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068383698 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067133068 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082999388 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088391521 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078141151 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085650961 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102247017 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068337915 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.079745394 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064462243 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085025227 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079628232 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067859187 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065767854 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067979773 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06516052 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068896545 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085743697 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088365091 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069598346 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07966982 seconds)
  done (took 6.817727442 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082316654 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08920429 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082232024 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083006862 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06540548 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066280561 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066341346 seconds)
  done (took 2.032081879 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067233289 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087069697 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087832548 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088130459 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08371814 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086294987 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075515711 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066472775 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082221265 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067245377 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086854519 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100631564 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067542234 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072452186 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09010739 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06638329 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089660062 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066314815 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069153505 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089399048 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068400419 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.085337596 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068185696 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066406881 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079955993 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066640015 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112172227 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070510081 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067529415 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069223731 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064468953 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10555826 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079667287 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073051188 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065919557 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080515058 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080809858 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064389492 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082225452 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071121882 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079764677 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066634547 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067189088 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064320235 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070819183 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076992819 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067283755 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068151548 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069123199 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085683753 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067392702 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079586369 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066350298 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069900193 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068145069 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071073804 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075882044 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067338324 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085382557 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067784547 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082604845 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082200961 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079774524 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082030641 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06880122 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079911707 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080153707 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069018674 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068350576 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070163333 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082080318 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064147786 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068558814 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076727033 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06847364 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088904662 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088818107 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067711567 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075901895 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066389117 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066710163 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06632531 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088222456 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069266194 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066056708 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070159641 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069251359 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064103079 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065872944 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069402405 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064499089 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067954111 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069540591 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067308174 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068837719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082655764 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06687274 seconds)
  done (took 8.727427349 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068882925 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067845068 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069051832 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067115323 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068201888 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067108671 seconds)
  done (took 1.93267293 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09310645 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069615162 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079964695 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071966543 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10390772 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080575316 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081059423 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077945682 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083490744 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078546538 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080674679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081788669 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086164184 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072766095 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.080260006 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072013947 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.080879851 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075659876 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077723072 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072991341 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086105015 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072241283 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072813852 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080474215 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070123662 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071727063 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07588474 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078358186 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078194634 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078456957 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072285603 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069772423 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069556689 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078035063 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08077938 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069644642 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071865194 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070508967 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077266754 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069904825 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081052379 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072387914 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074149278 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07070956 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077945234 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069953834 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07104146 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07586495 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080385904 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071043505 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070529675 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071358382 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069619916 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070645278 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069936155 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078092595 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070345974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080560249 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072305665 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070292065 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068828845 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069975541 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077101257 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070154584 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078550895 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07047748 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069354396 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072570575 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072900817 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071400672 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070515142 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068484886 seconds)
  done (took 6.922546299 seconds)
done (took 27.918668034 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540030155 seconds)
  done (took 2.026260686 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610947095 seconds)
  done (took 2.122052032 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.431019379 seconds)
  done (took 7.93814523 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389813056 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.50214564 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704518698 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129255165 seconds)
  done (took 3.278374504 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672454272 seconds)
  done (took 2.190388114 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208486271 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19485021 seconds)
  done (took 1.929702009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365995014 seconds)
  done (took 1.872518166 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.098945403 seconds)
  done (took 2.607591528 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258605599 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.148409954 seconds)
  done (took 1.920631221 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455469139 seconds)
  done (took 1.968473545 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.772780456 seconds)
  done (took 6.283826457 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204293907 seconds)
  done (took 1.762287444 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236524195 seconds)
  done (took 1.749205865 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.724976097 seconds)
  done (took 3.236570104 seconds)
done (took 42.400399354 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078873129 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080055123 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08005262 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077449951 seconds)
  done (took 1.81654991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076045681 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071990908 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075616619 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072707698 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075785576 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072271624 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073555597 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076339058 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07184792 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072514983 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07177927 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072245879 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074215509 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073651721 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070222911 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073915442 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074938719 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071817027 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075361461 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071910071 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070499231 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074459739 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074211319 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071116892 seconds)
  done (took 3.273623402 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076871761 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072524224 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074051764 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071071763 seconds)
  done (took 1.814654728 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077161836 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09083418 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087819077 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07632244 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090784243 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085243119 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068223257 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068323982 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070223144 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076424603 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067344709 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095226661 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086355999 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075945246 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078353816 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065367614 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067752978 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086136271 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076401441 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076629052 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071597213 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076276651 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067480242 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087113777 seconds)
  done (took 3.385748372 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076576291 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102274963 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076928776 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086771581 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087904684 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064886 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073663893 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088157527 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121317996 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064873008 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069323051 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065226064 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071913797 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064805605 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075466514 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103274357 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107180333 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067862437 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094666206 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065323847 seconds)
  done (took 3.154424641 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072459436 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069107323 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065481961 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068877868 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076641462 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07221002 seconds)
  done (took 1.952758041 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067349902 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066964988 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066468814 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066093253 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071443904 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066609678 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06551975 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067097003 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066721806 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066542666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066082751 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065327502 seconds)
  done (took 2.325025937 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332628352 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067899264 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067928533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06541792 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06997116 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065965719 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079187764 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067564992 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089346366 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065777445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06617652 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06807154 seconds)
  done (took 2.631882356 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201243334 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075559842 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232549618 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134877439 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110541813 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114366544 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102545836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111532064 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141123411 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100655489 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164347696 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163175127 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105583957 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134629808 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088452614 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097479258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152805729 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160209891 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102161954 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163451492 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141664436 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12341128 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144212552 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100241843 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105269747 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120495728 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070687654 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079752465 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167114024 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129088325 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144285204 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1095428 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092589801 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172990242 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168386913 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140046947 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132518653 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08308243 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100825775 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131769541 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196336448 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088273655 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160982145 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243176261 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080757811 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13813212 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117216716 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118254263 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105045544 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088862811 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142979177 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1805148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136551258 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086491092 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111570904 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113600233 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113634546 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101643687 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178745326 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159503671 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12561256 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070669025 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098360673 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150805862 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129394449 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107236107 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124252325 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091512327 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130992599 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15183885 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116628812 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140041879 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127399598 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087757517 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116925145 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137515502 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125805803 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167034923 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122658696 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072107677 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123219304 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102215906 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080611246 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141241587 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074968013 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172383061 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097169393 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105305944 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111461609 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107192408 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107469065 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15858919 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282167536 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102739848 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065307708 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102439279 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118470559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145864572 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086884337 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106669123 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114433312 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076950786 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137124687 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073854864 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122126638 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074865371 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122914493 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127692369 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075187557 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121841314 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100084824 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098654771 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130138029 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155884588 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088014659 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08132363 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163798251 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11997833 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101806382 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141289861 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152780056 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097249048 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101007608 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147569059 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176270826 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08866835 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160188784 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106015041 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082788255 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086846593 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122182008 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110502993 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120628995 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081799978 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117352553 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165531888 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074769018 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094392158 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131604997 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078421889 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080010752 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101496393 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099204979 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094189929 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098953727 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102733981 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136851276 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121529939 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246332754 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124886392 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097776351 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167449707 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087705629 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09935793 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103023687 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069334723 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134032806 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153370215 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079284137 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161564137 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120668721 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103531697 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117841825 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081457194 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138042324 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078291376 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069339001 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143393248 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108170201 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108764658 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148407754 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103105518 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124030316 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117225973 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131703235 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129513633 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126876415 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104061767 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086344227 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109128043 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124121416 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072580152 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089953163 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079189637 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102476093 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094144533 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08278026 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139363487 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122665378 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099110115 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109447567 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095275584 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145004844 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075886819 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127137048 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117340311 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092498898 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149721619 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149329867 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129457332 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097700743 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142508048 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069507546 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214702431 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089554182 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121851377 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083040574 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083685912 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11685132 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145472242 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12656221 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136881101 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109807052 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119040564 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152263006 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069716188 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113649726 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144119733 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119416775 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10361417 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089609972 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097809044 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140182664 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106279056 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178433355 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111430789 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121053045 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150141391 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098405695 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078718744 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103183047 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132789799 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103491208 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14146416 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097768285 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087424509 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108598889 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073643053 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09864092 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128419051 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117849606 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133091644 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113375558 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130826495 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076476133 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115374589 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118795641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120590996 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063656941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117295327 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158879734 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092701111 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1159727 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1503101 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078358361 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121989168 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31538792 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143780481 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083395204 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108570602 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117691975 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126266703 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118029115 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138395045 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108506882 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134675743 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108187052 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083575378 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086142466 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096107759 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103810186 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093492932 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106312661 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112849903 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094376909 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129893597 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101571712 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108110425 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115462552 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095877271 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088092851 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095967107 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171131104 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117301731 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1673806 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098024744 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141961484 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161091613 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07402586 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078287541 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077258094 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137950844 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083733906 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129131052 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096996518 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104319097 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122186881 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139288942 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093824719 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068162318 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107126137 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132570518 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110941979 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096668922 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102595028 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160095507 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09950906 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078507942 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111794256 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103060469 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100957618 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312173789 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062002355 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096802565 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075195601 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082880386 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126574763 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150345108 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07962758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102463554 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117076021 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108858554 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126002442 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099851732 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097661111 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112744282 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147929129 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126609748 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089483219 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110868352 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127780055 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153999225 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104144187 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094286306 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169013523 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165494157 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15728931 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087704756 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11241252 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111965286 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105840771 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136636612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082552975 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160996639 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081646109 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133724614 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102736535 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089251613 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128231924 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098381354 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087551072 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145661881 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115955918 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081876826 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080807211 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116462517 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119017684 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10494257 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074964192 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13669232 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072317906 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129852552 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165830602 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079978673 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10211787 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093799462 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078248537 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105437435 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100064523 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084317847 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096699531 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165371414 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084678268 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143150602 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135416674 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108696627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129997243 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096008263 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.631213393 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07539459 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147672357 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111615132 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163915243 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093996372 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113015232 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105039165 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117830929 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137655204 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100888093 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174037041 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125452986 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.111598765 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077319764 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098670982 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098237971 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085120881 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101157764 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108725592 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110376041 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.08982489 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111086976 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117624174 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079775105 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092035582 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148888372 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112075699 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137085164 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13465149 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081141202 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109468392 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127876089 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076236058 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113215809 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139961857 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100534958 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093314218 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076583353 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.095198543 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156597601 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070894946 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147547373 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111800373 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103201602 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106074579 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104154873 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121269716 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100784895 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113676288 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087135031 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.102270948 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106449722 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077277556 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073665415 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099132654 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104579823 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.091592593 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091290404 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09141164 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140027416 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068867064 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089695201 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097453656 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137906941 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161735814 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084533122 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079587802 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11028907 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105546369 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.105569385 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113146297 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075108624 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078551931 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076807101 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.075641483 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.102325198 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106137235 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097486126 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103331442 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150408681 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.07898894 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.218117289 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089763149 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098912415 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.067425974 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074366097 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090309498 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090970425 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101792526 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094870222 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156168482 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090306859 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.084915623 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086780613 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.434387406 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084129157 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128615493 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110701153 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11900051 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098345375 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06438852 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110207387 seconds)
  done (took 57.55407362 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110720768 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085674502 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.10003078 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152721185 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124652351 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214339662 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.174104095 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236199885 seconds)
  done (took 2.895734338 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071236604 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096928427 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103443422 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08504176 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068904916 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070358702 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224790368 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083821206 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068423374 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090412403 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08172849 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074025389 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409128556 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067961312 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070809157 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064332423 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069224222 seconds)
  done (took 3.475819821 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382412333 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.3729241 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374757193 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074613422 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.779969099 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089899341 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.108231613 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097568952 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071799515 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.284978131 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.709641365 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092861074 seconds)
  done (took 14.121065618 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076519443 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070768421 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08485452 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084196296 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07317546 seconds)
  done (took 2.069927022 seconds)
done (took 102.025546866 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081084321 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.294809014 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054192515 seconds)
  done (took 2.057184737 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082958353 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084610644 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084665614 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083436644 seconds)
  done (took 2.021429221 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074856764 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076492156 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084520264 seconds)
  done (took 1.916575095 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22339033 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13851586 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087359592 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082399737 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079014832 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079272226 seconds)
  done (took 1.928211822 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072717253 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074938206 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072850221 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076564439 seconds)
  done (took 1.97987686 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076465736 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053043252 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055620495 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055917643 seconds)
  done (took 1.925141945 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08561367 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078543486 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078407904 seconds)
  done (took 1.926502885 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105752021 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084511169 seconds)
  done (took 1.873622412 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081462021 seconds)
  done (took 1.761972893 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097863634 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113058409 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127540021 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108467948 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135367482 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109048779 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085530342 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086614185 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077054378 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087165471 seconds)
  done (took 2.707196955 seconds)
done (took 22.304771568 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078239968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.456262498 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360620866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091245552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667904438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356951488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00256362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092235973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120816836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067844029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084215468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649515149 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.952571338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.414519561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94310111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414496574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649480985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068220917 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068020844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068344043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986003934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068233332 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068063214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068636007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648052471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372043645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068464668 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.41435639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068338336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070009528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356188871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068717672 seconds)
  done (took 16.532212843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0715392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117220185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073727391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084347804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070996996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069861788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071591825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069301663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125376618 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068102062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084920895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071085355 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071873378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068868633 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08738846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068693762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069281609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069324995 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068251513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06893416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086564041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06823048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068867685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069248227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068558286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079997126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068652429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068670439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068730004 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070236628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071160414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069209181 seconds)
  done (took 4.10277377 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114755458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124047851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074690949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102591341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111706852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0701166 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142656828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092629158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127045157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068473822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085092904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068662205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101228339 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069400554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088050395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068770994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069360446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069203189 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06867804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068792076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087322157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068243294 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06884417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069234312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068783982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082139859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068747555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068857449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068680062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070458782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07179847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069230491 seconds)
  done (took 4.344400342 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071999519 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075275435 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083002931 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083598363 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069283875 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071715253 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073127288 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069921333 seconds)
  done (took 2.296534483 seconds)
done (took 28.96664969 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078415259 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069334806 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072755224 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081445453 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073487551 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078437392 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067453374 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07505679 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072783383 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073422694 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075074593 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06783975 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071860217 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067738205 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07405114 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068342629 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079261973 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072019703 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079022012 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079328757 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070472478 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073405806 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074266045 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079309441 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079157641 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078810476 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07702251 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072807636 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069130051 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070844127 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076637718 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083547204 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068655725 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078898003 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068164016 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06804488 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071675626 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068253844 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079510216 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076966373 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07010103 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076728502 seconds)
  done (took 4.788157568 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087927239 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091775832 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084808585 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062115454 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06707099 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065618752 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08938502 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060003867 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060060672 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088209927 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056480204 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059759374 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063094635 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054561361 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059872429 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057226738 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061978031 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056327422 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05977183 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060010214 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058752647 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054684979 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060591133 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062969754 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056855685 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06262545 seconds)
  done (took 3.409137179 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074568598 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083828576 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088503511 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128421841 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104041703 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077303978 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077975787 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087728324 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085347117 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067541414 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071249442 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094176366 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088439537 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074090139 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070531961 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084330382 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082617573 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069686497 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074114793 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091661268 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084668369 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078035656 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093250415 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080852401 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067713642 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070186746 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07171282 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081632471 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072668345 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076597469 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071989349 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071887216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069883775 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079245299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071655283 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069694441 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090380534 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0778886 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078950489 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068764326 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071154558 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069320808 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089974755 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124284308 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0678654 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074800056 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076474401 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07783246 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068116595 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086920127 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079502436 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067978268 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071129647 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067256443 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068242665 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081278706 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070367967 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070061659 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076609536 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070975708 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080857973 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071886755 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083260353 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067616872 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075028102 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067299411 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068611847 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066613741 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092513524 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069214593 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108301684 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069028304 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069072668 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076268132 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075748992 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084640947 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067966555 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083531303 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077343159 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07122058 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076803334 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071379403 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07138464 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088146882 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070168074 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069418062 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068522307 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073265024 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070955106 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068659954 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079953146 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067885472 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071596122 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084033048 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067576087 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069220842 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073682709 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072492059 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067505641 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078719685 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072590855 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068514971 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076769306 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068023724 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071025131 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07793057 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073964164 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066932632 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072216444 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074079163 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068730234 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069655456 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071170746 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069502921 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077236393 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074244598 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071980082 seconds)
  done (took 10.654977807 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159955028 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151385074 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070464584 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143927024 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076479069 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07910229 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146814505 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094423598 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06807347 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068941136 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069597895 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114855077 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106247002 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.128637114 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081953187 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070804757 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085830306 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119124001 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150063818 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141911708 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083726943 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077194637 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070282956 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06950573 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074423283 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082367088 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09052405 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07715695 seconds)
  done (took 4.491167946 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080653443 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100888288 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073931138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089331644 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090575646 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068168499 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070514794 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069585409 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080628922 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078672795 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06818812 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073429607 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074433727 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074471365 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06891978 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07494531 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075338277 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069529386 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07103441 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073129486 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07773532 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080760379 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071818297 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067377636 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074517695 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06769791 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064609116 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084278679 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068680802 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090671167 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066326552 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075392772 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081772042 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069166373 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06806855 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068276776 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068042594 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068189348 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069778141 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066899607 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066962754 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058056071 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067318325 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079391617 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074071604 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057099195 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072821633 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073131127 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073015822 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065948892 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071279182 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070838236 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071197793 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075206332 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072859784 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073145525 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069284327 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066568011 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075621224 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067980322 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06530265 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06658532 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072805442 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066558503 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075800979 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072574918 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066622018 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067462209 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069720428 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074156445 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068089504 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070816519 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065634181 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069636685 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072966107 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069944511 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06942622 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066801663 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067935324 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068409625 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056115109 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067913213 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054516112 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07131358 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066414199 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066462157 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068008259 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073029591 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079958083 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069641195 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073642008 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069071672 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067343398 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071257064 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061015408 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070786188 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083093768 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082545637 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068079392 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066008821 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082631237 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072712324 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067000399 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057173635 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075605666 seconds)
  done (took 9.237468251 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095160117 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088338802 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070491585 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083523803 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091646394 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087590685 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075093934 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077063765 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069652127 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082734151 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073909562 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076903447 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068416203 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077724668 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094477639 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077277429 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07046317 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077199991 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072592033 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101730369 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083076222 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082132166 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075538132 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068784288 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07588392 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080478207 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090574511 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08031971 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078592101 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075881777 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081095956 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090220367 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074370676 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07247185 seconds)
  done (took 4.46714964 seconds)
done (took 38.740918901 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.792236822 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.960717545 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.777164099 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.12345459 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.823776438 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.899028146 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.782667784 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.786334342 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.00081696 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.81688041 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.99791592 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.821985215 seconds)
done (took 65.297260887 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.796048552 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.913120499 seconds)
    (2/2) benchmarking "String"...
    done (took 2.074532641 seconds)
  done (took 5.697546215 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.058535547 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.300021197 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.013401716 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.764979576 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.770694763 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.073084741 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.567480069 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291394516 seconds)
  done (took 30.491472261 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.024256931 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974516931 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.453213614 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.495791303 seconds)
  done (took 15.713307964 seconds)
done (took 63.556909782 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.779537727 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.763774886 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.772014204 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.749223977 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.82304015 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.780258237 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.07620344 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.782632032 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.765619229 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.753725381 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.765641107 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.187731473 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.769113385 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.043968836 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.766681045 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.783344948 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.820969855 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.276842833 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.922551586 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.774100178 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.785710166 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.82930638 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.76786657 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.788437288 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.784788536 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.77148794 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.223351854 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.781324208 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.699231606 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.770500082 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.835537479 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.135453358 seconds)
  done (took 204.038863954 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.7688101 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.585319833 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.726805524 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.812784125 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.013489439 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.00240987 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.918068074 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.183500249 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.772357936 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.797177324 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.952205742 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.768093198 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.965627717 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.773090232 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.776011224 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.878484979 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.946398527 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.977680321 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.770541676 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.040840479 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.777656414 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.744932619 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.695403169 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.930244827 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.797179202 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.879379963 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.7960558 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.798014703 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.967327368 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.917062261 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.810661917 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.778365576 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.975286326 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.639780765 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.771761309 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.795687258 seconds)
  done (took 169.217522693 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.141904688 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.767088397 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.766633579 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.767844136 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768050414 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.773619358 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.767721822 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.891412704 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.897630447 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.232959621 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.329395649 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.817202177 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.766700747 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623088084 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.767889926 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833993957 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.779966343 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.771955968 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.783322567 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.792108851 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766890521 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767284006 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893770828 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.782249271 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.846564785 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.772994558 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.766524537 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772386981 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.139535233 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.767247883 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772425852 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.010073301 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.77591562 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.768036192 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.699850632 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.878793085 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.860489694 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.769598054 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772981561 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.7677416 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.988070624 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.768615646 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.768532812 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.77060893 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956004371 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.767202759 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.894672416 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769034943 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.297505424 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.768795724 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.768264064 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.646582671 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.484139466 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.771062067 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.769373221 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.771078018 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.769110508 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.768549532 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.773651531 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.514362522 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.845898261 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.769766762 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.772844815 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.77437971 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.769164098 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.947501298 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769650856 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.051617186 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.825983835 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.880564228 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893302331 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771235144 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.835477828 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.86426778 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.769892074 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.76957924 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.768873992 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.769646482 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.849789386 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.768811458 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.77030399 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.892119677 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.777192612 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.770806486 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.817777305 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.839058928 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.769941633 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.674134635 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.77253154 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.76977151 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.108009432 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836703001 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.770356951 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.769985732 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.769803963 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.770325552 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.898091779 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8948927 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.560467849 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.774234053 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.652377677 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.773382492 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.909218148 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.89462428 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960700139 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.772649248 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.852492649 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.77517938 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.772067676 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.771645267 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800666979 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.770786955 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.829405232 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.77388186 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.141884512 seconds)
  done (took 402.681418777 seconds)
done (took 779.848252441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.468051415 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.433255285 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.534126613 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.449691024 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.424897409 seconds)
  done (took 14.024083583 seconds)
done (took 15.736730277 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.85820631 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.861828569 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.795646958 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.858681197 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.790724652 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.858863028 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.842896647 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.796641746 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.826334823 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.797388037 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.827063982 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795505601 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784548483 seconds)
  done (took 25.408813326 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.004498748 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.010022115 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.844267488 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.005477551 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.820901949 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.015391622 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942572411 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926412124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.924170363 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789683952 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.786800373 seconds)
  done (took 22.786128967 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.02288048 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.022185615 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.84898041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.028571511 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.822689336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.016938133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.941715705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.929482691 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.925252018 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.787859419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.786175418 seconds)
  done (took 22.849637385 seconds)
done (took 72.758096965 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.781759729 seconds)
  done (took 3.497866083 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.805821469 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.942165774 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.785932264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.785954602 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.781990998 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.782448643 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.78656602 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.782389132 seconds)
  done (took 16.171345224 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.781920494 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.781648967 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.778357405 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.778668619 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.779748847 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.782780105 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.781366004 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.779448287 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.779074399 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.781600596 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.778392413 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.77965317 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.781316994 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.779372159 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.782058991 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.78179933 seconds)
  done (took 30.204898703 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.781690629 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.779173139 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.779913982 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.78088331 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.780675517 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.780633546 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.780672216 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.779825607 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.779904292 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.780303413 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.781199694 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.780005512 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.781448142 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.780152559 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.780092742 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.7812684 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.780392692 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.781290447 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.785369648 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.780912652 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.78174123 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781519712 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.782061024 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.782867484 seconds)
  done (took 44.464272715 seconds)
done (took 96.053665685 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.512083187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.540639658 seconds)
  done (took 8.772066224 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.790169757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.788630974 seconds)
  done (took 5.343289026 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.789400979 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.788391189 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.789502847 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.78948968 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.789630317 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.790565932 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.78902225 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.789575858 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.789147577 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.789634207 seconds)
  done (took 19.618753613 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.789953689 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.789748395 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.786510267 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.790034493 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.78967902 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.786761367 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.790139033 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.789927731 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.79000178 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.78689488 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.788994214 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.788768445 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.790345055 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.787189946 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.790537819 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.787643989 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.787263612 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.78855275 seconds)
  done (took 33.923567468 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.791275081 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.791021605 seconds)
  done (took 5.307387823 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.788543697 seconds)
    (2/7) benchmarking "second"...
    done (took 1.789118608 seconds)
    (3/7) benchmarking "month"...
    done (took 1.787738117 seconds)
    (4/7) benchmarking "year"...
    done (took 1.787983031 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.788710007 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.788077757 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.789168634 seconds)
  done (took 14.244986807 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.791897683 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.958392146 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.028200424 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.484297675 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.792609033 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.795723929 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.773652351 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.79463447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.796216181 seconds)
  done (took 19.941426736 seconds)
done (took 108.869864322 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.637562407 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.787735742 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.191013087 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.8497161 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.841574894 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.128413336 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.827122375 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.014243914 seconds)
done (took 43.00329846 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.788627197 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.262053492 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.276779781 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.540480546 seconds)
  done (took 11.806616099 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.771086073 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.332233501 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.832425105 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.380702231 seconds)
  done (took 20.056200596 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156256716 seconds)
    (2/2) benchmarking "read"...
    done (took 2.15655299 seconds)
  done (took 6.044168861 seconds)
done (took 46.423755162 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792334848 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.791513244 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.789841146 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.79325955 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.791717004 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.789597159 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.789323328 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.792415517 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.792702453 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.795537113 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.79225622 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792902092 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.79039717 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790088271 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791050531 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792591088 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.790683402 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790357579 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.790799419 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.792434712 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791437696 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793178102 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.789890359 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.790304255 seconds)
  done (took 44.724517667 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.794691181 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.791219299 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.793827551 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.793248177 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.791665221 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.79374014 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.794411438 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.79120332 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.793448244 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.793743436 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791615244 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.790967213 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.794879984 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.791502457 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793850998 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.791821623 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.794673166 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793204024 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79432293 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.792303296 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.794713211 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792646525 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.792406637 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796174793 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.792324121 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792140301 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.795203863 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.792948915 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796117055 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.793403294 seconds)
  done (took 55.528561957 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.79951495 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.802811052 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.795176299 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.796614567 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.796240583 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.795093646 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.796172087 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.796040627 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.796451635 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.796203618 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.796290132 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.795491087 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.795341459 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.796325568 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.796828535 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.795739391 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.796196443 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.796426271 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.796168301 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.795643646 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.79690771 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.795442588 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.79546496 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.796493791 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.796319481 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.796740301 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.795632448 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.797055361 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.796142066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.796184618 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.796623826 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.797030077 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.795707526 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.796832657 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.796007542 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.796534589 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.802525365 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.804807216 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.798489711 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.796539778 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.798326973 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.79733031 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.79820414 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.797686363 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.797133036 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.798392741 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.797902216 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.799024412 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.798213747 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.798642704 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.797798475 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.797572825 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.798196251 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.798749728 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.798610952 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.797523996 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.798381397 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.797750546 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.798441337 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.798513957 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.797664824 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.79821084 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.798081453 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.798037551 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.799886852 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.797769428 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.79857226 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.799155064 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.798411853 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.798935656 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.799432107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.799727482 seconds)
  done (took 131.153700202 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.799068766 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.796193022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.797053696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.796701004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795745875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.799916745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795894976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799071114 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797100874 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.798714212 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798998382 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796034915 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795767996 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800742685 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799480131 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.796223324 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.799370651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796383437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.800165255 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.801394776 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799853895 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.796903831 seconds)
  done (took 41.290790541 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799860488 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799345624 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.798964693 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799123767 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.798116552 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799314691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.800513327 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80057907 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800877124 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797379719 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79758788 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801488543 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.798218177 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799422038 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797773997 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798172759 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80129325 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.797934126 seconds)
  done (took 34.120676305 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.798774478 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.798021739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.800626302 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.798241424 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.797499697 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80185971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797940614 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801850488 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.800882888 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.798692286 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.803311228 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801188956 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.801917518 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797748293 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801754388 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.800371728 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.801844246 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797805402 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802252766 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798231892 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.799402548 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801391391 seconds)
  done (took 41.338696206 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801857771 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.80138152 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.799625426 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.799564245 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.800519978 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.802773072 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.802055172 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.799006946 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.802184694 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.802271742 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800185769 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.801893643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.799388636 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.800713751 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.800549459 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800676569 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803300653 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801587636 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803290171 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.800170029 seconds)
  done (took 37.7601082 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805282219 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803814286 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804313477 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804308273 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802891932 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.805415705 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804165844 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.804442789 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803791968 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804714683 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803912001 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805321312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804766034 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804889826 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803848334 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804146903 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.805512498 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80532647 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.805075912 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80524198 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805009369 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.804363603 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805512483 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.804800324 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805646297 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804283452 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804723659 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.805873335 seconds)
  done (took 52.270812562 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804943397 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.804171089 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.802507607 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.802426134 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.802838212 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.801689123 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.802248383 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.801447454 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.804951465 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.802024503 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.806432123 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.804431536 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804915625 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.805247182 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.804730677 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.807985011 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805247327 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.803840241 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803182465 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802912083 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.805241281 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806280154 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.806445068 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803713047 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803114563 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.806052334 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803911632 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803392031 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806646152 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802917039 seconds)
  done (took 55.86621718 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.823920939 seconds)
    (2/2) benchmarking "in"...
    done (took 1.82551691 seconds)
  done (took 5.390994909 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.802731944 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805791211 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.805500968 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.804534835 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.803933333 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.807054754 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.806882067 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803745886 seconds)
  done (took 16.18060128 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.806503952 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.806408081 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.806878791 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.806290115 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.806552294 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.809436568 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816169115 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.807030308 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.8098369 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.808029077 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.813907388 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.815511843 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.81213541 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808064198 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.808166949 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809214077 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.80725103 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.807915286 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.808322657 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.807678935 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808390671 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810035632 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.811051097 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.805052636 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.810136774 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.819949229 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.813877751 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.807255798 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810054844 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.813987382 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.808217417 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.804948552 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.808866727 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.809086376 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.808130477 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.808790115 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820147744 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.809558281 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.818506334 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809472195 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808621698 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.805730601 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.811132911 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.812868209 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81019581 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.809616956 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.808845447 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.806824753 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.810096705 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.812196357 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.813504791 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809390202 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.807553536 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.816545716 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.811568023 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817133737 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.811295448 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.812238197 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.818040309 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.821141707 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.826153162 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.81701318 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811171184 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.811801778 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819012385 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.831845312 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817049032 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.807205102 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.807315856 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.810815886 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.818634251 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825707465 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.820134683 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.812422711 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811483888 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.810587912 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811825637 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.810826497 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.819447632 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.814022545 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.812243168 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811907746 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.820729942 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83106705 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.810923342 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.811259608 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.811995879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.811222634 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.812617769 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.823442924 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.813335926 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.81112049 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.81243978 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.812259689 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.815498468 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.813177847 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.811950546 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81490337 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.809060182 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.8127354 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.813930846 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815586823 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.821575678 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.813718423 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813501041 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.821528797 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.812891774 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812214048 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.823268619 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.812262884 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812294864 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.81412566 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.820990428 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.809694167 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815608005 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.821635857 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.813662736 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.814290292 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.813872434 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.81269331 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823009657 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.838357987 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.81374029 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.813128564 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.818716966 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.824543973 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814230634 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.817270606 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.812932427 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.811214714 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.810453021 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.815430626 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.814006685 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.816485426 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814528769 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81653092 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.811566182 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.813440801 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.815202247 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.814838719 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.816789493 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.815338863 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.81712615 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.818245081 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.815735868 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.81691933 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.822538919 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.815092522 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.815968609 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.816242394 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.811469587 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815168164 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.817289376 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.814998868 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.815543925 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81558862 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.81495272 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.815390124 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815378315 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.81516778 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815293632 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.816696014 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81918952 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.816521222 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.820766281 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.814734904 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.812002636 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.81521166 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.815875829 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.816108862 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.815526912 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.813783947 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.818353829 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.82262396 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.815141761 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.816735261 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.821699034 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817565887 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816160706 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.816517357 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.819044844 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.825448834 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.816426325 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.825392987 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.816795602 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817209674 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.81606953 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.817769377 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.816923138 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.818212866 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.81944116 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.823576787 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833124293 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825553017 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.818689427 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.820196017 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.818200513 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.821038241 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.823297178 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.81774638 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.818085226 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817812608 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817091241 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.818212679 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.820912432 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.817895183 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.818347777 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.817569269 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.817756217 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.818952372 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817997356 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.820510512 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.820425506 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.815181571 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.819060304 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818463754 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.818023721 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.815286499 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.817565734 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.818402814 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.818212303 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.819738568 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.829237842 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.816264531 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.820094461 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820059886 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.81825734 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.817851283 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.818982027 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82196642 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.820358716 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82791913 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.821300811 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.820229841 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.827208655 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.819978075 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.818872509 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.823088605 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.819051711 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.816085631 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.822073111 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.82642041 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.820095478 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.820145426 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.81992887 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.820458962 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.819077767 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.828825937 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.817333116 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.819071763 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.820562162 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.823687983 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.816812922 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.822558428 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.821889794 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.821901966 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.823040322 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.820464968 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.820650976 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823612458 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.821435074 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.820321374 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.822383723 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.824424918 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.829205467 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.8266485 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.822213231 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.824336799 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.822063473 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.8238 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.823034102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.821435021 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.820782666 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836290691 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.829029678 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829347272 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.825235392 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.821302702 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828847328 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.823284089 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.825935339 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821914826 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.822689923 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.821977764 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.821744118 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.818893601 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82303757 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.821397033 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823595362 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.823084145 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.825819525 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.82136177 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.822202312 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.823872231 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.823061383 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.822131745 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.822522643 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.821656558 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.827430591 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.825061036 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.822907904 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.823065364 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830974936 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823389735 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.826162509 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.82356648 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.822440089 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.822612274 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.825085275 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.823538747 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.826509121 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.830841527 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.826202365 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.833039426 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.82466878 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.834183467 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.823771024 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.827352972 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.83174625 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.820716045 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.823519961 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.825228411 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.824804177 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.832782493 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.824907459 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.82545482 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.827959573 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.825461552 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.825765093 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.823426226 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.824428579 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82405387 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.825338652 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.834317117 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.82620794 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.82904217 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.827580362 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.821668192 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.824750819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.824477104 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.82360506 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830885241 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.826614037 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.826687496 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.825299121 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.827143134 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.82524314 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.825459634 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.824960394 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.822374727 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.824639232 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83323748 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.826701397 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829820666 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.826413847 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.837390868 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.826168899 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834671422 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.827131663 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.827183883 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.826393828 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.825860619 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.829241823 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.826519655 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.828571689 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.82692724 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.828076242 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.829992187 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.826993563 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.83012812 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.82719922 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.827450835 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.828036282 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836161121 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849514218 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.828892744 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830918541 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.82334376 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.82994687 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.83163389 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.827492587 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.826024356 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.830719144 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83774296 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.833876778 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.827885892 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.827879508 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.827500765 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827537711 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.826986824 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.827625714 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.827588879 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.827906706 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.830824606 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.828195678 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.834178189 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.827546964 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.829493749 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829623159 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.828986412 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.839712086 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.828303663 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.830006375 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82834398 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.828130114 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.829264859 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.828697841 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.829224203 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830800184 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827809434 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.830163546 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835318918 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.835368004 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.83238427 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.829508668 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.829491328 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.83155289 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.830951996 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829955469 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.829544366 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829972654 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.830696836 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.829196458 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.832810696 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.828733221 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.828912738 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.830103556 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.829167513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83234027 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.835856244 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830207081 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.826987354 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.829580557 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830302023 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.828573841 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.832170637 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.8423756 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.83327615 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.84043406 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.838889222 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.834525887 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.831286998 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833078066 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.838211045 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.829871017 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.832288596 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.829728279 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.834286231 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.830945195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.834676459 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830517556 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.838833133 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.831631424 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.831561304 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.841052085 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.832440054 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.830905078 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.832969048 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.835575688 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.831885517 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.828152164 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.831544021 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.831130861 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840689479 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.835050523 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833579394 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834419058 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.829776835 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.832901662 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.836082539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.832405957 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.833224846 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.829089705 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.832333722 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.832787119 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832262932 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.82916917 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.832691713 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.833285118 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.835742086 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.839472897 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.830725761 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835505097 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.833469468 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.834651762 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833431642 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.832940482 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.829964961 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.831049768 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.834420689 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.834547953 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.834939262 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.837098679 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.833365385 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.835197512 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.833405045 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833813507 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83608872 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.843997025 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.839846726 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.830467643 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.833536147 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.835004026 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.836978927 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834614751 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.833772323 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834558001 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.837106597 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.833292496 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.835234514 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.83347087 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.837201675 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852245238 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.833437352 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.834929938 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.834865609 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840759775 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.834832191 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.831551964 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.833861194 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.838078707 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.837901833 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.842788629 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.835535684 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.842674226 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.835702493 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.837039296 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.839254435 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.837985157 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.844004713 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.839570855 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835729543 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.836447516 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.841209714 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.853198808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.834891949 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84535249 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864507421 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.837315068 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.837149878 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.837554602 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.835514469 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.835834329 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.839049199 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.836792473 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.83605289 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835677514 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.835906146 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.83749054 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.84285692 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.837642151 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.836057008 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.835960142 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.836812626 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.840373707 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.834047676 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.837263068 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.836415626 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.835979375 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.83714545 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.836499287 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.837874173 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851679683 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.848515968 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.836352511 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.83751925 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.835033889 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.841543898 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.839895956 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847392797 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.842791734 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.837870647 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.837307781 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.839255467 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.838401084 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.834240541 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.839454811 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.838031173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.837207279 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.834767593 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.853922639 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.845607345 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.845096051 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.839536034 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837501181 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.837846149 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840350587 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.838120744 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.839232992 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.842249403 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.839904494 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842146703 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.83752039 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.838542313 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.84187354 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.844676596 seconds)
  done (took 1089.436839378 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836514286 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836037524 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836543778 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836468526 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836177217 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835649287 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836155458 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835700597 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.835381949 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835748811 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836830384 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836513089 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83669235 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836106958 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83619904 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836274224 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836369716 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.836591574 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836753608 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836059396 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.836999538 seconds)
  done (took 40.334192091 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.839555346 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.83647939 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836397675 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.839184747 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837097749 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84028366 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.836221412 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839812752 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.839162534 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83758349 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.839249559 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84015476 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.837808513 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.837279601 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837744021 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839786876 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.839782419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837955121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.840420929 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.837953439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84088975 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.837387944 seconds)
  done (took 42.222347923 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.841544101 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.841926023 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.840314188 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.838153414 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.841318977 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.83905756 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.841998322 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.841347768 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.841675304 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.843409374 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.841573403 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.842936362 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.848406766 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.845591664 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.845931273 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.840934399 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.986139863 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.842686298 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.842016645 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.841910397 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.838012239 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.848863433 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.839430777 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.838501255 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.841536441 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.842811148 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.842939264 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.84190202 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.843350461 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.842965952 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.846216601 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.842112118 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.842346485 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.845129755 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.84290539 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.843146346 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.846604924 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.843016841 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.840463644 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.842582853 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.852631649 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.861310005 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.843828482 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.851839552 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.842632154 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.84227869 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.84680873 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.85051737 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.840823182 seconds)
  done (took 92.253145615 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.843436271 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.843238371 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.840875237 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842570498 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.843639477 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.842740119 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.844377569 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843535165 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.840537962 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.841344965 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.844680648 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.840186082 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839984129 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.842145045 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.842304547 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839706764 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.840119512 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839777062 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.840113233 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.84040101 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.841546144 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.842428065 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.843228668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840060436 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.842527888 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840842795 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840657907 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.843635483 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.840346682 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.841101618 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.843629511 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843388059 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.843588814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.841368807 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.84141779 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.844161709 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.844726509 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.841008965 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.843970778 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.841157544 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.843020359 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843497756 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.844499042 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.846214484 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.842827849 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.843216045 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.843000787 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.843459197 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.844483504 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.845168171 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.846328371 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.843847514 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.845915806 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.843897013 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.846483311 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.845880948 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.843944212 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.844096416 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.846414206 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.843541556 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.843946175 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.846420378 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.845079432 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.847151839 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.847106564 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.844616437 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.843505727 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.846756603 seconds)
  done (took 127.113973678 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848607816 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.847407428 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848688198 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847303969 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847986385 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.848145356 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84777774 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.848015525 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.847361179 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846984256 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.847188353 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.847734804 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.847699792 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.847311971 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.8486356 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.848249887 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.848399911 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84812295 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847632733 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847998593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.848082556 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.849402136 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.84830344 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.848962296 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.848689232 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.8486962 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84941466 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84885936 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848799233 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.849013682 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.85002589 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.848967993 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.849007527 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.849618297 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.849254713 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.849292689 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.849739734 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849257087 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.849611589 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.849110689 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.850126467 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.849067821 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.850047456 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.850137653 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.850733361 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.850452514 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.85052979 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.851002891 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.849585675 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.850365547 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.849736754 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.850486537 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850279912 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851126889 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.84994305 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.849931059 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851078971 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849872692 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.850638143 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.850444418 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850524038 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.85069523 seconds)
  done (took 116.429390359 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850649342 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849906452 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.847200526 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.847888112 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849626391 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.847334106 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849686971 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.85010927 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.84975826 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.850445156 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850696418 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846826777 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847690025 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849884419 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.848222859 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848012323 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849186751 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848580987 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851058671 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.847183678 seconds)
  done (took 38.763974089 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.848718204 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.850785656 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.847896831 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.84885084 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.851684803 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.848655754 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.850913866 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850786941 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848665084 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851710084 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.85121905 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852262492 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849009559 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849146972 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.85188906 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.84988658 seconds)
  done (took 31.387238669 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.849067246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.852393082 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.853333561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.852887573 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.849473685 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.849052154 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.8533909 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.850103414 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.850589188 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.852575797 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.852598133 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.853167841 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.852955172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.853897166 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.849400218 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.853782138 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.850145969 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.852775923 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.85310226 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.85384735 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.851110222 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.850156193 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.853197638 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.855653268 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.851044574 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.851294726 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.85043023 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.852267094 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.850721155 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.853534892 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.850423799 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.851139018 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.850593872 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.852929861 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.855134219 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.850927762 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.854031823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.853216172 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.853469999 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.854761984 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.853896782 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.850980198 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.854446501 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.855277138 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.853463101 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.854544029 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.851733059 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.852199564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.852240677 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.852038266 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.855560572 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.85537584 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.85511124 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.855773467 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.855675393 seconds)
  done (took 103.68059925 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855024222 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.855135278 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.853024933 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.855487124 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.855766229 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.853047389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.856193194 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.852534151 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853224253 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.855379244 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853734553 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.856080229 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854159771 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.856319576 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853866992 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855700462 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.853353625 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853330258 seconds)
  done (took 35.171432428 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.853716852 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852949473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.856103487 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.853559113 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.852962097 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85636355 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853718808 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.856503917 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85636346 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.854347602 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854421176 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.856465309 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85689003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.857492923 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.853759737 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85356632 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.857288257 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857022931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.855975153 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.854469165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.85632417 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856568756 seconds)
  done (took 42.607333452 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.85773104 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.857900027 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.874080224 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.900698606 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.888056396 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.857200706 seconds)
  done (took 13.025816357 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856044716 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857723409 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.855304709 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858503286 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860181965 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855559895 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854624265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854671582 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857971719 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85619792 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854545473 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858713416 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859057836 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855747083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858371251 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858627994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85651966 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856488629 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856350277 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85918137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856646475 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858474049 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855976223 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856133795 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856051813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856377214 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859065324 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856773034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856262095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85938015 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859444018 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857512699 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859101025 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856276229 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860584295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85978415 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859079281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859257633 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85996698 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856924046 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859772404 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858924293 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860396876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857665591 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860623187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857042993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857396032 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858065217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857825264 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86063254 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860215239 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857927678 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860734643 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861474146 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860769886 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860758252 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858244699 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858849533 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861087116 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859608589 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858331396 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860424767 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859094135 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85994767 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861084447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858876432 seconds)
  done (took 124.438500629 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858729353 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859505674 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859438129 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860269898 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858907355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859030725 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858627741 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859935056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85887921 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858798894 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861739753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858428582 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860781416 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859564627 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860076703 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858901699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859901432 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858768213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860942336 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86292223 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859258059 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860015603 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860181176 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860337155 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860023774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862159227 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859027186 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859459031 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861750871 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860243058 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860878425 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859799243 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860559914 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859337699 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860687773 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859597811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860128355 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860749477 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859492646 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864001705 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861326115 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863478303 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860448993 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860713482 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862535394 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861739525 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861122713 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861389571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860951326 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861659155 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863695221 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861976748 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862084365 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861807548 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860855397 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863024501 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861517156 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861420934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862106278 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861750762 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861436199 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864683853 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861320401 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862272158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86142651 seconds)
  done (took 124.609980964 seconds)
done (took 2538.827376046 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.881928622 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.955319888 seconds)
  done (took 15.634457745 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.028768429 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.9785955 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.864597311 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.902562336 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.863811388 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.883681845 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.867413934 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.863669358 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.863873248 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.863828122 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.863085867 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.05107353 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.858881895 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.865126207 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.86541185 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.956012306 seconds)
  done (took 52.240587974 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.868081472 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.869283141 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.895198219 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.870023451 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.86801535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.89655696 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.91512598 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.870919343 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.984228201 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.889062453 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.138766697 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.870723427 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.867153298 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.048942836 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.893983926 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.898777146 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.059532027 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.135871993 seconds)
  done (took 36.639176248 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.155324147 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.877419681 seconds)
  done (took 10.832612139 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.914801081 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.870887818 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.908280046 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.914545848 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.898646665 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.864570015 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.9223742 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.912494954 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.87073312 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.924054484 seconds)
  done (took 70.801874947 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.876818768 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.869167594 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.86878995 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.86703009 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.86156202 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.861060797 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.869987853 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.86112569 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.278599832 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.946780727 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.892332979 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.873836265 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.870045616 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.870748604 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.866472721 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.892593903 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.009671833 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.866293822 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.86663405 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.87477683 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.869204068 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.938232417 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.898795941 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.869372056 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.946489926 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.277395251 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.87154649 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.880790315 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.031893947 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.867223222 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.869000701 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.869678982 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.873038181 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.376736461 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.326412206 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.881953056 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.878034287 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.878009939 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.866785559 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.979563282 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.870919108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.874837236 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.862081003 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.300871662 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.99298763 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.943684545 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.798988939 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.874101154 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.870296783 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.916341289 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.870839063 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.870956311 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.884400921 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.534839299 seconds)
  done (took 137.563546432 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.906826827 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.350274079 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01862136 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.886697306 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287250509 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.228150377 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.865467787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.04464577 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.901195865 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.246008719 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.108702538 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.113780297 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864823276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.868462748 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.864275896 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.865109878 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085306279 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.063637399 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.864886708 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.866540306 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900748288 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285138345 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.055125514 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.029807624 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.892153299 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.22354667 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.058414422 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.116687638 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.87019167 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.864539799 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.069088019 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.876608155 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.87036381 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.867258997 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.098171959 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.100213666 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.094626767 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.866547182 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.920684936 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.865949724 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.903829164 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.220087953 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.100369707 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.067096794 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.177816215 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.22219455 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.866703107 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.865820781 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.873905717 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062196584 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.101194743 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.270014006 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.058981333 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.8721041 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.127336392 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866419866 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.925349326 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.247109025 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.164615282 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.107174943 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86957169 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.86911497 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866254832 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31467387 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.870213418 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.105511918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.171760589 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.868855984 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.108504026 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.109119781 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.164285707 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.23620408 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894570253 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.885721087 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.915993126 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282412587 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.069201702 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.250645327 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.915623509 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868075987 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.093795474 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.870093217 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.108986437 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.317111496 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264615854 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911522277 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.892929179 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.867659964 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.247994733 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.246897065 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.104832222 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.196668604 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.098568641 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.923635773 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867448141 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.868907281 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.8990818 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066619204 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86834971 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.232997114 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.244714792 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.643527562 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.899982199 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317734135 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071430985 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.869120008 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.86891688 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870929418 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.074304505 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.934240933 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.890104224 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871323647 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.246288611 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.739014521 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.035019003 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.5988786 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.067512459 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870717205 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265546756 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870610842 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.248651791 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.892190303 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313804164 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.345629987 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914350762 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.080697265 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.199612351 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.870402079 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2658247 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315370954 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.05859876 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251309478 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.628731691 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.873995873 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.297908607 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.909491699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.893883733 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039704776 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.897023027 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098043823 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874325426 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.27397157 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895514227 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106661735 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.061767267 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.281888577 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.915365194 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.075508796 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.902909126 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005048771 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.89189598 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.877773676 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.053684489 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.050668407 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870599365 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.423441162 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.873245927 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018330474 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323052386 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896322495 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.075025116 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.873721446 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872351081 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.099976066 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901927075 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.507725866 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.875638705 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.111593531 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.831159595 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.325636849 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.87090325 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.315484339 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084031085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.895078691 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875292112 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.673658555 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.871784377 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.032286654 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03548142 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.632865346 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87417987 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.224866108 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874893837 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074195953 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.876730475 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.873421318 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.229259504 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.942356468 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.874210384 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.883995842 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.87584393 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.87556347 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.235119895 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.901289172 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.595610708 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.013275232 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.275752808 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.186059593 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.270394306 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.922705369 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.894141595 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.272275681 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.914639813 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.073963114 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.875581804 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90009474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251590311 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877022161 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.23694619 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2954895 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.895888228 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058431386 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.876680059 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.956468308 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.875597137 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.082407702 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.102461902 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.876825788 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.879675849 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.061035029 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066137839 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067131015 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.897616338 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.890716096 seconds)
  done (took 964.863201895 seconds)
done (took 1290.373690106 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.876247734 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.879686114 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.863022224 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.875871366 seconds)
  done (took 29.310345247 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.88390378 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.880249003 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.881172281 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88035032 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.882879069 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.881265045 seconds)
  done (took 13.103065632 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.926766309 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.877380388 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.877701813 seconds)
  done (took 21.496034823 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.033772467 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.825879865 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.138823566 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.384969018 seconds)
  done (took 12.197809088 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.883084151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.882773736 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.881590636 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.882742407 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.884282399 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.885912923 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.88301565 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.883791194 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.886347614 seconds)
  done (took 18.767571526 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.790076403 seconds)
done (took 101.479857254 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.340383086 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.745797453 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.039889288 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.887268894 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.981664049 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.900056208 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.686347983 seconds)
    (8/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.88880067 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.240055672 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.699007776 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.075157093 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.198534085 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.981692944 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.875212586 seconds)
    (15/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.902721076 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.938652905 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.915462003 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.959096418 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.90202911 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.132980131 seconds)
    (21/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.039660885 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.117003346 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.004335917 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.410633864 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.940371934 seconds)
    (26/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.960866607 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.002759484 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.926276239 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.86212221 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.306107094 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.951660786 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.381896802 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.90392065 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.555458109 seconds)
    (35/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.14414803 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.082034894 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.004805731 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.832130874 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.882030721 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 5.768372628 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.513712224 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.864899309 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.096629822 seconds)
    (44/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.508574463 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.148504501 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.425395271 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.884973295 seconds)
    (48/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.077685905 seconds)
    (49/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.904900826 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.624663411 seconds)
    (51/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.977669095 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.50815793 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.07649354 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.515876285 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.879684697 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.297417108 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.001911409 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.188786174 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.043063625 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.990225484 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.134281178 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.480994019 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.16128621 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.985430769 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.941621776 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.878924371 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.968151121 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.937585506 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 5.959658416 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.931052097 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.019366741 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.837758386 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.866280767 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.148999387 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.183530114 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.880471076 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.880610608 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.906066263 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 4.912139736 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.879364953 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.944501866 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.880343436 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.813693168 seconds)
    (84/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.296087827 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.338719734 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.571394016 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.869580023 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.969238243 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.959167489 seconds)
    (90/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.297961829 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.605461138 seconds)
    (92/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.005196316 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.981221437 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.134433343 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.847279263 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.395413369 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.906698961 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.655010528 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.874626808 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.869762439 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.868916304 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.640595996 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.134305042 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.87229098 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.506548215 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.964158406 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.005025253 seconds)
    (108/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.932679645 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.906213593 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.73347353 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.022809899 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.17394903 seconds)
    (113/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.969014411 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.883203246 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.047125863 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.702366286 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.571770285 seconds)
    (118/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.320124067 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.242840765 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.250981898 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.412550772 seconds)
    (122/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.872975519 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.174229736 seconds)
    (124/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.423448713 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.080540915 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.927356389 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.251953774 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.996970337 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.9153425 seconds)
    (130/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.906841342 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.908839867 seconds)
    (132/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.317191633 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.946717866 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.906116206 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.073436484 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.386137394 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.76191575 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.107796893 seconds)
    (139/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.595090725 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.245588394 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 2.365125777 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.892977559 seconds)
    (143/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.279052967 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.900169087 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905950813 seconds)
    (146/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.884220056 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.179624407 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.941961753 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.931370203 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.044607398 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.986371876 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.415004871 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.149014179 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.899284542 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.889471163 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.987565877 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.140985245 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.870634291 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.885444319 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.443735182 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.912499799 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.170416077 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.884480651 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.519082494 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.885969621 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.138656793 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.908586246 seconds)
    (168/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.524551284 seconds)
    (169/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.740532247 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.916010578 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.887506715 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.935443652 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.57310652 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.036452072 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.708430639 seconds)
    (176/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.879250044 seconds)
    (177/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.912756048 seconds)
    (178/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.971524207 seconds)
    (179/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.329506801 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.946470034 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.260561114 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.869049488 seconds)
    (183/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.989579902 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.689992435 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.451903651 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.992824354 seconds)
    (187/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.968482742 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.2517935 seconds)
    (189/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.074116349 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.872597867 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.913205572 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.594864452 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.911535801 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.927914023 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.871738688 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.054522539 seconds)
    (197/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.164076011 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.246352168 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.944383313 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.628427682 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.407095625 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.349625875 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.51635856 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.580102518 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.105836613 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.908929166 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.535320552 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.865472226 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.160432391 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.576956049 seconds)
    (211/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.993919246 seconds)
    (212/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.089736623 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.518205716 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.892887252 seconds)
    (215/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.192380424 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.87229875 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.91074514 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.075413704 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.904665056 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.896523085 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.498191791 seconds)
    (222/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.423619293 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.930087375 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.895252259 seconds)
    (225/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.786206644 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.889223194 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.523392046 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.905994595 seconds)
    (229/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.705404508 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.970265654 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.888026027 seconds)
    (232/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.913814142 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.897173325 seconds)
    (234/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.896622146 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.762383941 seconds)
    (236/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.966186015 seconds)
    (237/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.93917232 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.889462534 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.74793593 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.936920042 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.565507219 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.891046643 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.904377308 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.940834655 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.888676522 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.99232145 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.914239123 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.917672981 seconds)
    (249/309) benchmarking ("sort", BigInt, false)...
    done (took 6.904459346 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.055602347 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.051701637 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.916030382 seconds)
    (253/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.772796782 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.890948042 seconds)
    (255/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.890880051 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.922994713 seconds)
    (257/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.176894843 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.405014441 seconds)
    (259/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.889693776 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.917281738 seconds)
    (261/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.452453413 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.837611773 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.273371765 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.184779289 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.241610455 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.732525088 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.514343797 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.269677313 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.336956541 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.988680226 seconds)
    (271/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.155278765 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.648253969 seconds)
    (273/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.968402254 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.941791179 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.892217903 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.905102938 seconds)
    (277/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.549372321 seconds)
    (278/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.506418429 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.370941053 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.99728987 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.887113757 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.89817267 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.906401431 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.969099292 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.973369046 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.914768578 seconds)
    (287/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.050644799 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.591534724 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.971520944 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.873087239 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.371803801 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.000476226 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.040130473 seconds)
    (294/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.992575433 seconds)
    (295/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.887845283 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.134543847 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.874384969 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.875280122 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.094555696 seconds)
    (300/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.492495681 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.931125405 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.144350269 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.084130423 seconds)
    (304/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.159925141 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.448103779 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.879709701 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.888133892 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.92709154 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.026756052 seconds)
  done (took 1056.845525938 seconds)
done (took 1058.663948384 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.922284159 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916463674 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.899529995 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.92131662 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.01224702 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.933038142 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.91104818 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.901887012 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.948202197 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.949995372 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.899010546 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.933525845 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.902664842 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.902022994 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.900576795 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.915711563 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.628250542 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.903251603 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.918592643 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.909466103 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.918262483 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.90081988 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.951175144 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.933814417 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.905380956 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.904358811 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.904800591 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.921300699 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.013752692 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.905292182 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.905448689 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.912021232 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.627312193 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.90028971 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.895738684 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.920940555 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.91306788 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.911094203 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.905292988 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.934222685 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.900052775 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.903902899 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.90361298 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.903045241 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.903260867 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.906730733 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.904169301 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.908914175 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915711152 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916734949 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.9031814 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.919356946 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.905792372 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.902527469 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.913556265 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.903065281 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.906240318 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919488376 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.922167137 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919043251 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.615513658 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.908542089 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.905538618 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.920677843 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.911385246 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.945541139 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.901465564 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.906980229 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.90438888 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.913004628 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.942669241 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.914052489 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.906844863 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.918713111 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.938254209 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.619359984 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.899532352 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.903576796 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.911758796 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.902602415 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.913797951 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917045844 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.909724993 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.905045897 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918952246 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.937213993 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.915609513 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.906277169 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.913859427 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.925632166 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.913316531 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.91537833 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.908002548 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.900831569 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.915385063 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.908823618 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.908944464 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.908932001 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.910701493 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.917210836 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.904381296 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.924433794 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.902478618 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.901780237 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.905693381 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.919946315 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.903937121 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.908601221 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.928480248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.954637202 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.908942512 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.619105661 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.910900035 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.923287336 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.915321795 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.910454275 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.902267794 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.611380147 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.910940727 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.923966781 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.909208521 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.905826852 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923383341 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.909475683 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.904100245 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.623615972 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.908680937 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920483578 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.029112093 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.916832163 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.938634608 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.905287206 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.90952697 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.935634926 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.923772152 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.93898212 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.910286448 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.923084043 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.924118648 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.904408499 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.918123757 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.918565832 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.908334998 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.913301734 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.902724824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.936708767 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920708867 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.921187173 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.928867695 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.029948274 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.905350092 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.612224364 seconds)
done (took 306.860709606 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.967165159 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.897618336 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.003197966 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.903864966 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.987942635 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.005205539 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.901411224 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.901959699 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.901702421 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.282262798 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.901848487 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.902950581 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.901206673 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.9013872 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.987069151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.904239766 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.901240307 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.297386691 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.90535048 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.976106946 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.902021882 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.901682137 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.904645208 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.344335712 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.904671742 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.905569642 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.975205561 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.904489086 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.251636732 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.90279041 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.90664063 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.303903168 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.999788019 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.921716385 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.915470837 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.912514836 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.989390592 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.923175821 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.986492074 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.986831661 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.005856603 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.944474449 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.905172731 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.904734117 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.907838488 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.908448853 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.903042287 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.93162593 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.901697312 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.904498225 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.246072623 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.916083086 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.912881322 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.904485979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.904404613 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.928285354 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.904260813 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.907878836 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.001237175 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.908885753 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.968959304 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.288358936 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.341828173 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.906613728 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.900881831 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.904968023 seconds)
  done (took 186.97510404 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.973213119 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.981192497 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.993644476 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.908802821 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.957032718 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.997326489 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.909420199 seconds)
  done (took 15.558687584 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.913636053 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.907911309 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.95767007 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.958205705 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.909293676 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.057921938 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.90909089 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.920563785 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.90631035 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.962498028 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.910445756 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.908930687 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.91573075 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.909366883 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.966017411 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.920453074 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.024212201 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.911168887 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.909700752 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.067338005 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.907319781 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.916454175 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.962044676 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.920475254 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.909912261 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.916996219 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.491130467 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.90970057 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907267401 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.908632915 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906822695 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.948758832 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.909719265 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.903205745 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907693451 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.026441292 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.910500476 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.906561404 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.909163603 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.905441768 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.909782552 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.909180572 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.909867003 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.907448344 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.910238448 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.934402868 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.91053604 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.910405834 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.909688433 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.910227119 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.96129341 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.910350234 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.908457472 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.907865787 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.967265546 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917572781 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.91171176 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.90763629 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.91137833 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908672093 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.068420086 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.95990452 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.910603875 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.959172332 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.910672188 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.910719525 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.909922572 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.910803202 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.966008277 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.910346436 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.959843796 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.908155463 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.068375203 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.936056693 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.911533401 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.914529694 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.91442454 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.911936682 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.912500287 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.918568356 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.909312141 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.913143966 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.918611296 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.908667247 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908455808 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.020639181 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.021316765 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.909419417 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.925711763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.919500454 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.908843069 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.965034064 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.91104514 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.90972108 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.965160595 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.028085343 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.965965642 seconds)
  done (took 209.788302382 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.917323758 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.920720131 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.913837397 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.928516415 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.913476867 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.344128729 seconds)
  done (took 13.781348516 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.916069659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.913608191 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.912911103 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.913158804 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.91408589 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.913805346 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.914277825 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.915510118 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.916998011 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.912970767 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.914542201 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.915874669 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.91532451 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.914389321 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.914455948 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.913378641 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.914734311 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.910830774 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.913118383 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914501719 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.00726106 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.91415743 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.914910817 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.915503988 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.918009586 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.913967079 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.92202186 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.91364315 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.914069225 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.922390618 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.917616581 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.916421787 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.915967544 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.921247717 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.919423474 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.916151208 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917180857 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.916602831 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.912619724 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.916467939 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.916828776 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.915477805 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.914527961 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.916639385 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.916809074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.920112937 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.920437442 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.923914403 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.916128909 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.916559021 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.916493335 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.915683349 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.915735725 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.9173295 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.919744846 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.920540845 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.921150898 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.91803813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.916183943 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.91752812 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.917093843 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.916612059 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.917769269 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.920672658 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.923009211 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.917601156 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.91765253 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.920117178 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.918008256 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.91603382 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.917873641 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.91375006 seconds)
  done (took 140.928985403 seconds)
done (took 568.86624457 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.003705169 seconds)
  done (took 8.851427328 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.908578884 seconds)
  done (took 8.757807751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.558265312 seconds)
  done (took 17.405195204 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.937998446 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.957152417 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.927561888 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.913989835 seconds)
  done (took 29.584465863 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.949371094 seconds)
  done (took 8.79748819 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.90975845 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.916576961 seconds)
  done (took 15.676248443 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.600891361 seconds)
  done (took 9.449156888 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.924581826 seconds)
  done (took 8.773629911 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.930312315 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.938658761 seconds)
  done (took 15.722116889 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.895956714 seconds)
  done (took 8.744687635 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.793354953 seconds)
  done (took 13.641420036 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.915926935 seconds)
  done (took 8.764900822 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.9532499 seconds)
  done (took 8.802524492 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.34693075 seconds)
  done (took 11.197956572 seconds)
done (took 176.016026439 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.912198114 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.916040944 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.915801397 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.912441622 seconds)
  done (took 29.506674086 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.951799884 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.951079804 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.95439732 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.961974075 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.955140739 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.968265127 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.954933227 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.953914662 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.963351182 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.954906467 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.953807462 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.953517576 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.951360959 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.94575644 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.953984819 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.953280641 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.962579315 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.952691196 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.946925126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.955209293 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.919105042 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.964409573 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.955709822 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.922350603 seconds)
  done (took 48.710553734 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.11831271 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.990799631 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.071569053 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.973911121 seconds)
  done (took 10.005301637 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.970181138 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.971336099 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.983413512 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.022240245 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.049371323 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.979956652 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.945348483 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.940031009 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.927730657 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.972107386 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.047591485 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.988141875 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.056398508 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.920360765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.112301062 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.919532701 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.919439939 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.971431994 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.025119971 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.037357905 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.919315895 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.972217622 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.976250705 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.991493239 seconds)
  done (took 49.468751864 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.917668561 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.926655273 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.925859197 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.919791367 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.91960141 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.919996511 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.925502445 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.92088265 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.94064835 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.920637903 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.918879387 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.9197676 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.918547606 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.92012722 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.919597587 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.931983438 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.934084432 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.920324385 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.923282922 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.928819218 seconds)
  done (took 40.323786827 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.915056324 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.769641045 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.266322065 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.170598925 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.918379723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.916323504 seconds)
  done (took 31.808615761 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.96797449 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.051487177 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.92557825 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.150694675 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.227704964 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.92322602 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.921541294 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.082549401 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.293063048 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.27490717 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.974061888 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.964150963 seconds)
  done (took 26.610377605 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.930700337 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.916992439 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.934118112 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.932389662 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.948566541 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.925381632 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.927807346 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.915333812 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.95136896 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.955334899 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.926388256 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.9501694 seconds)
  done (took 45.069243982 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003243744 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.021220784 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.430959545 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639452646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291826564 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126150142 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.604168248 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313552124 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.919166742 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188312866 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.595190036 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010210374 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172257107 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932472696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91689365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.644658918 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144421515 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.309334904 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917943975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.034607705 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943185949 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.915428202 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.17194224 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929702361 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126149278 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.048452997 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.17537525 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.914695642 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138611799 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928059794 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92402537 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916573956 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188303184 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429026834 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01037614 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923494882 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618440778 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.625106869 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.913598491 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.101298756 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335020192 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918319418 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923006179 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913830105 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846635144 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92853228 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315126011 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.919669703 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.623305889 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.912112653 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922995727 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006966565 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.916398294 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.728497803 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911232223 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.913569411 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.909553975 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91943737 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482603696 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.45280557 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.927001126 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.848529543 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.004091678 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.029701525 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446989143 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.012485644 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.917281248 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916405625 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84797846 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.111787458 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932809288 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242102052 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.935463695 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563836534 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514344369 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.558052341 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846429127 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360015231 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.914245757 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.853328334 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140784263 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916107658 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849016933 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.859929365 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848939083 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.446238233 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922378708 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.99493893 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921272446 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308690952 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925460499 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934046618 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937544523 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13821852 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.956039344 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914429228 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.316816063 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056496356 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93595206 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310709059 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84844101 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.918565813 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171596503 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.125783022 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.924393026 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.653800639 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070725285 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914838593 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.933413677 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.932695059 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.92807567 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.418551557 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925530434 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.461462576 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935035453 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915974859 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470505787 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9156528 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.01901477 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.559739467 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100907933 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.478544765 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916301575 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997845153 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.918110159 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.916397237 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.118679267 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433484129 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.916089227 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.918920022 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929107279 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929112417 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.91760364 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861038782 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.914600484 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.58897997 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.921521447 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14100039 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.922025232 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193463909 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852014001 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245394126 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006998831 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.140026205 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.935752159 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.917111076 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178623886 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929603957 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.935475131 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92930714 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935882401 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015073378 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939105656 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.935773096 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174992899 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.922426512 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.92146441 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.141702342 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922742039 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925226444 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.923679838 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755196755 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412886622 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892824158 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925506699 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.807659516 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.932185829 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982276131 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922506473 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927701977 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.239486473 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714787017 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.922569767 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.915904095 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142822192 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929175649 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.14041719 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002539716 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.065784794 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414795533 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930628131 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.852711262 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.629553319 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.611542457 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919255424 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853753192 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918451073 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92826105 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93041017 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.135107975 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424941528 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91973548 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.05872809 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.928278646 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930238835 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.924409919 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918747758 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.201801872 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.467724079 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924321843 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.935550429 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063189835 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.934136504 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853496143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923678223 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924683913 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.92023103 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919327719 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952668803 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.045575315 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335929622 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181759219 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615506058 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931081575 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.128926878 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.940219653 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.920771986 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.34393968 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925068363 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.945401551 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931383101 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.93210948 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.138127259 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.595144095 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49084312 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54335025 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.361725382 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.62953016 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.923270284 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.925724578 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323945835 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855660325 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.485680889 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047912922 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32370853 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865882213 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071768021 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.935250268 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.479428305 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931898675 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150005737 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.630964033 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.358727453 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936642559 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133986057 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957345689 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.922882987 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853469911 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.210102233 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131443958 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368475808 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003911325 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322183672 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.351990499 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.927963948 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.922227498 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.941612004 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03535777 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.637730566 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094089342 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927009541 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.591487971 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335328153 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930161667 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.149239705 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474142536 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930602772 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.074122657 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859731153 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.934478317 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.934546404 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.924855934 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.698148167 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.643465707 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.177405709 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934301456 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858394839 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923520498 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.386690538 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.774716091 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.9293632 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924210064 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468092755 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.92636666 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150185374 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.944266647 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.186188736 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929412729 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858198337 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858349909 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.618109878 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930197627 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910676607 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292316868 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.998014767 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.927513471 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924612679 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975590913 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18115005 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.939018893 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421208897 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151814283 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.71041531 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947046947 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.024882729 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.383813368 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.916023475 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.925794117 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160143434 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764779015 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149615054 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.420072624 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.837881018 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925336191 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136723234 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924972137 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.595841351 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115976388 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.638249454 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.951537103 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543794154 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948698424 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.594671733 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.84392976 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.016930499 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934611247 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005255059 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937234095 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.936869192 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93775732 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038146096 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.596292282 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93051819 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.940708346 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019597981 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.487157311 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.206923026 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.932904396 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427607201 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544416842 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435194453 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937847003 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927137772 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93208557 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861083613 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078303214 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.153576163 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200740362 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.059558651 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.063500231 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949623101 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396491398 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.946910951 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141078253 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203672911 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.823174432 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944647293 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942196631 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.928890001 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939379299 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.140402191 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300007941 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363072095 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050742624 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936557464 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328499749 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202665299 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.929128443 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929078673 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517302918 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.955988113 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.957678697 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.934563065 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.634315356 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080528177 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938913971 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459548462 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940805437 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.084756857 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.702771844 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.10865927 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191307852 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.185343184 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938856809 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428778629 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539418411 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192144988 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997466027 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94138995 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.040338255 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076672496 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.667959011 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930743689 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929719653 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977939647 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.640404808 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939944758 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439805347 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192348904 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.928968188 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.672140766 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953823873 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.940815173 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154638151 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.454170567 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154908287 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940689958 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937186909 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.746529198 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440576094 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942132485 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864951749 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.934932717 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11715593 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169306253 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953714456 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.3838103 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.642636783 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384899255 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.901391168 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953233159 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.940767993 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.55491743 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43917089 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.212172718 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320758113 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.488265861 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.933036411 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207562573 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.936578032 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.943275612 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210344825 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.935344615 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.941343673 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945518109 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.430031474 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.492880534 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.946041627 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.123857983 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.874411352 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273071672 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579845165 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86844259 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.942556158 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.059504097 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.932935343 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.06416793 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943664429 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.683258076 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940681541 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.692892917 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216370535 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.937436596 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.928407496 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.404056241 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.944257216 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941747142 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142750209 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940587094 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.60935723 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.284730493 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191306554 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.93357813 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.922461697 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.938912632 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93310728 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.921565837 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132726628 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.148613431 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371270903 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.93984547 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.946045798 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938338619 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.149945751 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145355435 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.629179503 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948727077 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940254703 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950963029 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.848140019 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435708404 seconds)
  done (took 1817.054376683 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940203066 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.950983319 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.950243881 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934520988 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.97459272 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956399998 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.99962638 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993272717 seconds)
  done (took 57.571194074 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.933543217 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.151086397 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.97135432 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.939049454 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.945371098 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.950286244 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.262289173 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.93749584 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.945837623 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.945592071 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.951934941 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.935960927 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.444985941 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.946340465 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.941927314 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.925852916 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.944092167 seconds)
  done (took 75.94492409 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.936167731 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.065044737 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.957657639 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.938163237 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.348479475 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.953716771 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.617633068 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.943628885 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.95311283 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.045647178 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.59530646 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.95229409 seconds)
  done (took 91.181159094 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.942215798 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.943497445 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.942496948 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.943397376 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.942855717 seconds)
  done (took 11.586691959 seconds)
done (took 2336.693010991 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.333220815 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.423677039 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.365558634 seconds)
  done (took 6.662231399 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.087462701 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.136946503 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.257127809 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.263187483 seconds)
  done (took 10.621078596 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.22491953 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.313822036 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.170854361 seconds)
  done (took 8.586227572 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.935294686 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.944114108 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.017004905 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.939215712 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.941150838 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.942015144 seconds)
  done (took 22.701168528 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.944711362 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.946516109 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.945176378 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.948035809 seconds)
  done (took 9.662177783 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.926444218 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.6512965 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.927708527 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.941837385 seconds)
  done (took 21.325742723 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.691845146 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.70303104 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.688463013 seconds)
  done (took 9.960654532 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.959255552 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.79044512 seconds)
  done (took 11.628216614 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.219821842 seconds)
  done (took 4.097372025 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.076345494 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.208942574 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.869020299 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.685360517 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.869714134 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.552455343 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.037499698 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.757591564 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.679914135 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.385448079 seconds)
  done (took 31.000581657 seconds)
done (took 152.347901638 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.775122811 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.338925649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.145442282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.785274231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.189529971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.14534149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.365554556 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.75556439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.273151512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.267710835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.808959411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.189388417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.099351975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.309804558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.096982479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.31064019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.163238312 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.81108467 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.489707675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.653662962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.388992254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.38442425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.645538142 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.423441495 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.185168508 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.095647817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.964658121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.333150628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.632002562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.000294952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.1189567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.796143248 seconds)
  done (took 195.822735669 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.943820585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.961306066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.943910907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.944136872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.875185992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.965960951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946275565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944431192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.670251531 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.64724874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.96582604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.859824863 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.966318263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943701288 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.94454261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.944071727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.794033923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.966856136 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.944904355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.94463805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.946196064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.754173645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967110377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.77353871 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.772288851 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.965706663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.944665624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.949054275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.945320981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.945148809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944637984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.944670875 seconds)
  done (took 222.851430888 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.95911096 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94545012 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.945327325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.945199103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.944728505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945692223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.944214358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.956228788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.944963917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.94564921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.945794128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.945320522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.946507095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.946342207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.945685735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.945901342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.946401426 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.946101571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946442619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.945602898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.949127725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.946174108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.946832433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.947496782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.945949744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.945332999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.945422743 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.951718736 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.945563536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946131083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.945951899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.954502821 seconds)
  done (took 224.190333478 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.148319874 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.952809464 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.953640483 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.909393312 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.953691102 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.953115749 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.944769334 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.142305756 seconds)
  done (took 19.84124396 seconds)
done (took 664.584001315 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.88078812 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.619021498 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.124128013 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.975249281 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.539568684 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.97730313 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9742944 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.089213265 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.35598815 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.079251902 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.993750556 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.972022476 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.113251191 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.970878692 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.170168881 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.043378078 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.714940752 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.815444371 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.223032327 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.300577353 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.171129789 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.26486091 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.08896623 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.395483002 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.118712467 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.290939836 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.447960643 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.715038626 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.972993618 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.223602115 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.228024625 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.659249869 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.98710845 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.987214711 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.041586079 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.024524764 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.680549748 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.98802162 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.130449912 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 3.056823159 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.31944912 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.176560421 seconds)
  done (took 114.786450187 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.94467293 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.94475346 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.943860076 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.945352671 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.946525424 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.945373587 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.9443563 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.94441383 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.944967569 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.945063766 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.944492385 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.946213787 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.945036901 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.946536029 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.945173237 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.945114321 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.946824311 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.9482838 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.945791209 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.946095265 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.946346342 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.945761263 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.946890937 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.946094758 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.946668282 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.946530844 seconds)
  done (took 52.474262488 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.957217706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.154345189 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.276533089 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.963621993 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.957645857 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.961875859 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.011343799 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.959133203 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.959990832 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.959662535 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.085070609 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.960346631 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.97833327 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.284134723 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.960574848 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.958279684 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.958279382 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.958450139 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.162741821 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96835719 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.013846408 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.960169153 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.012887471 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.968394199 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.960658549 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960094191 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.962084647 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.464012693 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.959661269 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.085765955 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.484399394 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.012064163 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.416109655 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.287256073 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.486095422 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.962392116 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.959371836 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.09060434 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.961821552 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.95966893 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.012110326 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.961884298 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.28534378 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.507573141 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.97997448 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.960339518 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.472593299 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.090608728 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.125175677 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968470569 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.29195208 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.963711402 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.962748962 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.962131627 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.124012914 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.968301404 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.960816804 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.337603516 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.964406533 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.013528526 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.961555659 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.961403268 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.175625153 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.961391472 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.158525409 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.96195239 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.968594742 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.961572929 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.28701762 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.963778585 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.527110502 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.979999882 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.961307203 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.088026728 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.158129659 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.513397423 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.963745792 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.178299828 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.428927336 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.013894071 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.965675035 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.45677848 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.017347359 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.96574119 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.963254394 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.964048774 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.962776127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.007424909 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.013953768 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.46501444 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.519658146 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.359043775 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.016876982 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.974895905 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.962581034 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.340528436 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.964270227 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.963330926 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.283696454 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.530149649 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.982659774 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.9702831 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.510074011 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.983356472 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.017190484 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.968671819 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.294015638 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.964599861 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.006652762 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.963393919 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.969632332 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.966250161 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.016230254 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.967181918 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.963164312 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.500285092 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.112915108 seconds)
  done (took 246.237154287 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.959007202 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.957201055 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.957612889 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.957754899 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.956281096 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.962759005 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.958230596 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.957617802 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.963950809 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.957890865 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.958456847 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.964636182 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.96006112 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.996598461 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.96645981 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.965007297 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.567104144 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.95995569 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.96884783 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.958882439 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.695482526 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.959161662 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.97147171 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.958702294 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.960809111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.96327044 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.974107175 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.959883066 seconds)
  done (took 170.192363801 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.965301069 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.3548089 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.96934429 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.045959336 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.990082997 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.962911179 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.043120953 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.995526947 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.968687584 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.962658097 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.963661015 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.170592578 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.966880781 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.313956664 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.082553352 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.044364751 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.313201586 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.967629041 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.963958452 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.964345321 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.04618592 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.978852595 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.170758049 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.349407629 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.967058631 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.356347334 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.957385235 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.966624759 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.965954204 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.358406336 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.966324101 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.172868972 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.020257515 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.998967396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.356506442 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.313580267 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.310650392 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.046018977 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.968341808 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.965175126 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.964350576 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.956113544 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.3512487 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.968074615 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.967699673 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.344865291 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.969266987 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.968829232 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.975962348 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.96513655 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.999122598 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.000046679 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.175129859 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.355198924 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.018166658 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.988232199 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.046619335 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.303768094 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.971005829 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.313192597 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.956607899 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.352252759 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.971211725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.956688686 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.967247096 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.971925362 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.066629514 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.046197263 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.314754254 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.969669607 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.31375385 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.06788268 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.967305638 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.967517555 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.969722459 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.362319481 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.317657366 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.066944699 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.050193316 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.106915928 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.958084935 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.968340746 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.95851913 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.021482011 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.968539251 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.362150231 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.318057643 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.970794209 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.969963408 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.970129617 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.971584816 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.086021545 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.363449336 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.024650929 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.307471472 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.178448435 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.181033397 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.972796041 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.99957139 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.969760624 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.181622915 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.973132228 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.999722888 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.349303509 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.181969049 seconds)
  done (took 220.717265003 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.144459 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.817521658 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.031924566 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.057129518 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.408553985 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.477549656 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.948246158 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.017998075 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.035848437 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.05945726 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.449319223 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.057898255 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.102234192 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.017246698 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.563664491 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.008198896 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.033303675 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.054540485 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.053929593 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.839351736 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.489095367 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.205173436 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.067428697 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.547319015 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.001478117 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.547993929 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.644769023 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.438508394 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.097570847 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.785259297 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.410533359 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.920370986 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.492463857 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.453069045 seconds)
  done (took 82.181574501 seconds)
done (took 888.472258827 seconds)
SAVING RESULT...
DONE!
