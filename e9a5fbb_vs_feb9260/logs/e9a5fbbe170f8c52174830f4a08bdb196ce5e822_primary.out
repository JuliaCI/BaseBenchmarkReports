cset: moving following pidspec: 27358
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.998977833 seconds)
loading group "string"... done (took 0.550678296 seconds)
loading group "linalg"... done (took 8.922793377 seconds)
loading group "parallel"... done (took 0.170934632 seconds)
loading group "find"... done (took 1.455962089 seconds)
loading group "tuple"... done (took 2.107328744 seconds)
loading group "dates"... done (took 1.3821736 seconds)
loading group "micro"... done (took 0.220436954 seconds)
loading group "io"... done (took 0.633630734 seconds)
loading group "scalar"... done (took 44.09444848 seconds)
loading group "sparse"... done (took 14.044567885 seconds)
loading group "broadcast"... done (took 1.158707806 seconds)
loading group "union"... done (took 15.565402866 seconds)
loading group "simd"... done (took 5.433787431 seconds)
loading group "random"... done (took 10.700482557 seconds)
loading group "problem"... done (took 2.189679484 seconds)
loading group "array"... done (took 26.041831238 seconds)
loading group "misc"... done (took 1.09966127 seconds)
loading group "sort"... done (took 3.714243489 seconds)
loading group "collection"... done (took 22.242060988 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.642607922 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121067105 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.168951537 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.198849043 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196708776 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165073638 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166392449 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.565326031 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.985570084 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217701254 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145997857 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.559289631 seconds)
done (took 5.881559633 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.240599883 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.439297085 seconds)
    (2/2) benchmarking "String"...
    done (took 0.114927029 seconds)
  done (took 1.231735497 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.097403709 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.18054902 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096258576 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112622082 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113414661 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112796697 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095762942 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113006771 seconds)
  done (took 1.504825137 seconds)
done (took 3.760916522 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492258658 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.880318081 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.509027184 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142250481 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.162322791 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.152916691 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320597016 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.176507397 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122713398 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.117893033 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174631328 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.360064125 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.496016208 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.966334746 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098398642 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130467972 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.089255426 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.711693187 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082007036 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.144158955 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.538648101 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115690153 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.13171829 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140621022 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193592409 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133987751 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.183674748 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110163016 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675826066 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102308722 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185856629 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100842713 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166334414 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.251781104 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09795175 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094430238 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680624149 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190248262 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.1151303 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104175565 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684678721 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082585582 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.20659504 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.115677971 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.124868232 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.20303091 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114756092 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080551991 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105126931 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10917909 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168030228 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46711782 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10774709 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149418962 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110494157 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.729165891 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097801517 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157703042 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141457307 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108622245 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.098445774 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.121199306 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160479334 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110731201 seconds)
  done (took 19.984191141 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119935039 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143250689 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09627481 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143092385 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141909029 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100023263 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084944367 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097134612 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126801621 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189481056 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12453366 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146240125 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09343949 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081600264 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119901489 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252666432 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107818484 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124479884 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081748178 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109115018 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142931708 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098089924 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111378021 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111909579 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171594429 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207477968 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110563381 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126060671 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096196894 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101451499 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144145557 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163787326 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076980802 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097041876 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186219207 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122403283 seconds)
  done (took 5.249770906 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.20725396 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119598816 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.198365776 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.185244545 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151918989 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.171842516 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122613888 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.274598815 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.205314732 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184071817 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116669203 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116369271 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079945743 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.100285183 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078831223 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.701619738 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183134621 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154216683 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128824521 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104900861 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08470818 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380439391 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102722612 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083309477 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105141226 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074270586 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.179080804 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10599273 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.305128056 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12001005 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087710771 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137239374 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.218195442 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132440304 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126159898 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106114676 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080978259 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.239892388 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.139107097 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091529282 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.10045876 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128846273 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119371494 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136476903 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104027458 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113782788 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22802671 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102622583 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121008744 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.075933762 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199333508 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097406495 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100824473 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.357889368 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120761945 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088015334 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.102193066 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281747117 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134160193 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08516959 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078629109 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106116355 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096826587 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40417834 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09223667 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.889724985 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098810251 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159503096 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10199274 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108928737 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087463735 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10421733 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104008689 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099562411 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080077619 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099445487 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079903301 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103306185 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116185554 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087196646 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097873822 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149559599 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119314366 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118941285 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111132915 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103601422 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079832263 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132600948 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.133267456 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098131904 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085994705 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.151646292 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087222444 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.103351227 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11704856 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102376855 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128838484 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100167592 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08198637 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17809464 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082016589 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125891201 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102314163 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114230836 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12292508 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099187999 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085100444 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098227937 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08045598 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164513053 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083112449 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079912256 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103801684 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113105804 seconds)
  done (took 23.948950443 seconds)
done (took 49.861739542 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.47355886 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098664545 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.117399422 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.117920411 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.116857972 seconds)
  done (took 1.682731447 seconds)
done (took 2.412138089 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.343877714 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194308026 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101425907 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.201674334 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087947122 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.209227729 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164803222 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11901858 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205454462 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101902233 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183575645 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101512573 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090648966 seconds)
  done (took 2.863123701 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095626155 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120419183 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082574307 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111581431 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076951277 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11094488 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093169914 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.141521784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092337745 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104229605 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077044927 seconds)
  done (took 1.832560575 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092642486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116331893 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082731155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108432293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077157292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090513629 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110099269 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117492941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091921404 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104981235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077452494 seconds)
  done (took 1.796270407 seconds)
done (took 7.210808036 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.069384909 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.083292104 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118775327 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.164990562 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.338377118 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211654002 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.503545992 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134562534 seconds)
  done (took 11.540939919 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.135101001 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101606683 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083681113 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100919728 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084121378 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101881435 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082995891 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099182275 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085657905 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100655545 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081813035 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100967945 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08144033 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098986753 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.080736657 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101775389 seconds)
  done (took 2.313374062 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120284959 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119653155 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107127731 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111588798 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086784524 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105573905 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088573478 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104801676 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084720464 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103320264 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109390599 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091457678 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106908789 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085383243 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105640268 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110567784 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085050403 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105076538 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090126729 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10570584 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09324364 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104730858 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107231415 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092086861 seconds)
  done (took 3.266824299 seconds)
done (took 17.848028256 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.175700756 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086754282 seconds)
  done (took 0.994061433 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104397119 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122646033 seconds)
  done (took 0.963988892 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109106265 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100672328 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139619843 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1176123 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084476434 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10043427 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116972029 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101969749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083126319 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101851644 seconds)
  done (took 1.79393624 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088799448 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103631207 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091333354 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.122477909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112517232 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085813125 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105227825 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088422272 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106743288 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082708604 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108907931 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119184262 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090439303 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121841567 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089125265 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107150211 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111439491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086638241 seconds)
  done (took 2.560517962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084843136 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085140984 seconds)
  done (took 0.910395982 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086050306 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098248085 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084819296 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101802638 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081448643 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098408217 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082013319 seconds)
  done (took 1.374531713 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.548284718 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.245635512 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.346837088 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100481815 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.157517952 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.378589296 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.139524999 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116469068 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.116255257 seconds)
  done (took 2.933028403 seconds)
done (took 12.267378247 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09376052 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.194395537 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.683262658 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120715658 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.081037246 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162030809 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.268642968 seconds)
done (took 2.345103424 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362227462 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.128190085 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090816296 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080761323 seconds)
  done (took 1.400076241 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081407522 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105556055 seconds)
  done (took 0.934252095 seconds)
done (took 3.084551185 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.117576945 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100043258 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079372898 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100377855 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081341934 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.097223043 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081613165 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.077424706 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095556398 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080094376 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09804488 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081183737 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097541394 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080575402 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095314104 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07807195 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077728659 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097819214 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077786276 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095761499 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078546745 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098304632 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078811773 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078234639 seconds)
  done (took 2.907709865 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102589203 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09981984 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086688682 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.105217954 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085487438 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105541616 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104123096 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.082051574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105033935 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083391266 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102855956 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085649772 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101081758 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085968085 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101626 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103671965 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087929867 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099402365 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08323927 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103212705 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086648142 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099642539 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.085688113 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104883057 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102819462 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085841141 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100285009 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081715504 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104526057 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085850123 seconds)
  done (took 3.601713921 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090005352 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077546374 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097913772 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089755656 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096681134 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08236003 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096573533 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079065435 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09755783 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078232358 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097566904 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078132202 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096498791 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080228684 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079419653 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104196901 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116098909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078918872 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078935968 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097970172 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084353663 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097137995 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081321898 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09734081 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078728714 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096914705 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080217018 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078141716 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097755152 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07873811 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102189681 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085259194 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096193294 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091951497 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103810757 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078898105 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10538367 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07872541 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097384295 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079230003 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096659809 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078781449 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078843369 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.110258439 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082267922 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098004802 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079029838 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09934784 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079835955 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100438038 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079092985 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096534829 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081570538 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09873291 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085416477 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095664911 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080468775 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078226902 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098423453 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079358574 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096764917 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078566505 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.103499169 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080723505 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121313951 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091307706 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097420131 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08127112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101395541 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08772937 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098566359 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098448703 seconds)
  done (took 7.250514235 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084882015 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108246381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081940402 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099220373 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077391686 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079659704 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104920746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097718177 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082322002 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117764059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080860806 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099273091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081890797 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101320909 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080981368 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099463171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090760877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095670433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08030318 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101428862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0806473 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104029209 seconds)
  done (took 2.787238854 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227477548 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107313048 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146805269 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117359338 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099665034 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115236318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104443333 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088221242 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104877918 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090859862 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108349286 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086717672 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118521513 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108084245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089857113 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109362736 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105346897 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090966287 seconds)
  done (took 2.77527054 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096534911 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101541094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.111347377 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101612141 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083033734 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103839925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088999391 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118615109 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102553699 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083144704 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111829401 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085606443 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103320995 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082659331 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103834325 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083342171 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103218438 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082816864 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1110104 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107604097 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089670119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111696835 seconds)
  done (took 2.926343282 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100197369 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102719616 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114961016 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105590187 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078705398 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099796873 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090111181 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101222301 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108980361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084772286 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101510234 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081284319 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108015188 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082736648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106559156 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083911051 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103443924 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083396477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103524052 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078233645 seconds)
  done (took 2.676592564 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128406434 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11808674 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09924385 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128611394 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119138651 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100071644 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12880802 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118307459 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100597585 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13164498 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098929242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118911 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130000257 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108018533 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118193824 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129216817 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11152424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129887298 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118346911 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10075781 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132356415 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118334148 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11155547 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118074723 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101741623 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119715357 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118151972 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107883787 seconds)
  done (took 4.027599346 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083451833 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082099432 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098715119 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080314413 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098715715 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080253286 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.098327627 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080720878 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082191501 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099178432 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082923824 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101399555 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083329112 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100781802 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083347652 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100444006 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083273421 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079930299 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097904321 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080729317 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.101408513 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082474265 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101529786 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080544868 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097061192 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082943149 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080744129 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099019797 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082712469 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098129964 seconds)
  done (took 3.44898764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09180867 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107384692 seconds)
  done (took 0.960587036 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081036391 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119914157 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080565828 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105998154 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091068151 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102552314 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093527437 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108369582 seconds)
  done (took 1.545973148 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.110158004 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.122940026 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089497482 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115123171 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.103705345 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.122723744 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171566756 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090158647 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109703083 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083920247 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.123957528 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083409696 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114759558 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107854948 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09497099 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118087031 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082288469 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113388512 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092114651 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105083552 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091187281 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119738109 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095566447 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.110937534 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086676934 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115224455 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117576289 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097000914 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1084146 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096994012 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110106288 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078141317 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107842714 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089619893 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100139976 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.104130112 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12158812 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089954657 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113990684 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108746075 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09493166 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097406303 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095685848 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110157189 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098408079 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10864425 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090564309 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097823672 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084681726 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107346849 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079621137 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10678361 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078910994 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113443992 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09400313 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122387939 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08773971 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108137676 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089994668 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108174646 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092085263 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108232087 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113169573 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088533676 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113630758 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09479603 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112521224 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080439189 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096200062 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083343343 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114005038 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110712184 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.1161764 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090070486 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110470089 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082869001 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108917763 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091067036 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113586517 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.115235026 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090313253 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111358182 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095951835 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10773286 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089242309 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110424574 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086642495 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10692499 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085744265 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125487302 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087428212 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101269007 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085750071 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11527014 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089414172 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.107681323 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08608924 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113768988 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078097591 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108928072 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090291718 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111166978 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116377533 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092236054 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109466155 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094893439 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.116129466 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090731305 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108403612 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081648869 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109585937 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087355084 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112257679 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079811374 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109363191 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089201169 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109200837 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096862526 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10559419 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090190195 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114831687 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097704668 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10663607 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081537656 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108627192 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08966016 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113122262 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097172923 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.107646284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080606784 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09880959 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094787101 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.108113197 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091671469 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110432592 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108921397 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079537145 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082595711 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.119202056 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115415352 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088970445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110280151 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095808258 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111339862 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089290032 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11475247 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088681721 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104796267 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095037855 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108683964 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080572337 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114332269 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089155535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.107016373 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090680441 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113953086 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089696861 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110537727 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087708401 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110447375 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090356716 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105589425 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090611492 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.107840499 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.117503936 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090777505 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099643073 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083043207 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092094236 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.1058734 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090493691 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105518629 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090370596 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111502014 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083828901 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.107829505 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089430443 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122064706 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117594425 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092056994 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112585265 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.0983542 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.109070499 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093112878 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.109118793 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093126154 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.109818232 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094956227 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111688932 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091780797 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108573507 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082420932 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111642082 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096754677 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104616392 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083244439 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104747756 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091150594 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117661428 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091028824 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110639525 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088571012 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111686615 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094870029 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109221704 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088859411 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105195183 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09060983 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.115023506 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092780005 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11131537 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097955425 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112427126 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08055765 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116372255 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087161523 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114550799 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08145946 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106265485 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086832211 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113559296 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088372711 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109128572 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079748259 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115560874 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096475016 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112470888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086311341 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.111401182 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119750789 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090568314 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113419236 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092413273 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113319791 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105410981 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10546517 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090209272 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118288974 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091080163 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100276543 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094148882 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.108937983 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085544973 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.108862123 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088128701 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110705223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093456397 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112297107 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079337448 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109288086 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.088760215 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106739566 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082248907 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116471629 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091398574 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.11039413 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119213583 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092882537 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110376056 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094118755 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.109602466 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092941719 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.111713027 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095507654 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111157008 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090588223 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105483362 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09214967 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105241776 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084998586 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109035112 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091597034 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111375008 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093445918 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.109344671 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097540839 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110551507 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09252034 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129658315 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108475909 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087424372 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111284876 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09485547 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109615871 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091304586 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.1007775 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097762894 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111102129 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097904799 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.11022443 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084044709 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111365664 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091697143 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112437927 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092841452 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111888049 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090054405 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.109643073 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091541789 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120125463 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087961951 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.118369096 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093284237 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114182809 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110104214 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092668788 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109439735 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087490701 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110158645 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093194791 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.111329311 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.091198015 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113034073 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092224003 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110353304 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090796112 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112193552 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092530593 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.11350459 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081179563 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10583555 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087953967 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.1107381 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097105002 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.112426373 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089500614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.108502569 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093754013 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108679072 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084417592 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.115705676 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095301999 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112028148 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102247336 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10677732 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092946624 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122167639 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080827383 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.109211927 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085426194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108019701 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098265109 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.113071345 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097979172 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112521773 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087418685 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104059086 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09340968 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109421239 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081776091 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105355485 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096713802 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108889783 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09085384 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.112385025 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095366358 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112981898 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097223998 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.110288598 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091765915 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.111978922 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08478469 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.108116344 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088097174 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111755078 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.093543919 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10827496 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085468342 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.110481902 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092475262 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112315746 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091389596 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110296515 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098335962 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110831623 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092830789 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117315178 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08181436 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112952169 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.091787833 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.112303453 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088984103 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113319776 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095568805 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113985361 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097396653 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.112108142 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094959776 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112897916 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085431782 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.112274995 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091834934 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112835894 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089170069 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114307639 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099177392 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.105862968 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092538575 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113302813 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089271675 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113985522 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.093385528 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112273824 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095882252 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.113918223 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09222503 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117501648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09174259 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113883401 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11333008 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091251206 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116365678 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088524679 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.119620591 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094427188 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.113716695 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091186164 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108887509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09261568 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.111617886 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091888437 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118215611 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093929144 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107732164 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088624157 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105666335 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093160108 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117022991 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100340196 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113180967 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094061837 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103374845 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084958529 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114021484 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08948221 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111492785 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096195047 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118381338 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093602902 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110217707 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.090739344 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118499791 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09760799 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116696996 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109069014 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096552923 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.113538128 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093873319 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110410257 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093762094 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113471739 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096006426 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111429071 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089194706 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122416943 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098804096 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115039586 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091983735 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115773097 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092764378 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.104621714 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.094080596 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.113031855 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095888618 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114501727 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093065007 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125389607 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106992344 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092468961 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11712495 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092769576 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118653052 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084460135 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113623048 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095214186 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115323278 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083958492 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108421551 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090564305 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113529668 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089515852 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103664913 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104535104 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119263843 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094144581 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112183286 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092006428 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104460397 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085243756 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109756762 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095996616 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.112090582 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10200945 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109809045 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089006816 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104426215 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09420276 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114333362 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096419354 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105953655 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0856216 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109836472 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094637123 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121276157 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092063297 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.112857437 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095687903 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113803163 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08747384 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118493751 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085760776 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114780397 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106308341 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.115574744 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096067732 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.119149571 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119480424 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.096268161 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104079158 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.095756297 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113143487 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095608385 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.114993808 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096591577 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129913599 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095052833 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10980744 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.091995551 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114635963 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090536078 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122464346 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095427638 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.116476134 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095332711 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.11292164 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094878305 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121297834 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116173611 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094231254 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114766127 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.093024416 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112788757 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.092245299 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.112320736 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.097370556 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.115138371 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093876729 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116354493 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090429354 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124921834 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101219182 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116365749 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085907814 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110445706 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090263389 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105939518 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095957456 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107774443 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091936175 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.111314096 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093558198 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113456375 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095680138 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112165913 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095831998 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.112511362 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084460639 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117017417 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096560948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11652432 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.089080597 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.114459077 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.096242238 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11980443 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099561329 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112607371 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094616995 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112895698 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096711026 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106112097 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09783905 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113303901 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093243861 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110329322 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094753674 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.116534089 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096763631 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116667758 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097356835 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115797384 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09838812 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117779023 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087275507 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10726345 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097782837 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.109710315 seconds)
  done (took 61.665623903 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.159143793 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090128964 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102717822 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083720066 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126246134 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081530448 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101081078 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08463577 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104727361 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099808512 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106720332 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085960619 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128722954 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135368011 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131744296 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121026193 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085256756 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106011721 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085376597 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105949453 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107516092 seconds)
  done (took 3.046063712 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112795372 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121841091 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117860774 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106121192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118217107 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.122851103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102076641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126291153 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.127874108 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118397087 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108384248 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125153421 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.118394766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.098984718 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119135529 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12172837 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107881404 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117833996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124592734 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102347358 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122117332 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122948681 seconds)
  done (took 3.379020253 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099375489 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.092797422 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.121826801 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.086863854 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.113879746 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.087835417 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118924975 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.090283934 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.120525151 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093799338 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112095027 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094105127 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120007043 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.087745204 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.11243806 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.090640746 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119792824 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.094004348 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.116098839 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.087771288 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.135699453 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.107882357 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.08935468 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090479734 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.125319531 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.115139123 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.094375188 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093277446 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112119799 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.093657229 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11065261 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096119314 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119097267 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091112586 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11261649 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0939906 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.115047031 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.088220994 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.1111252 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098340548 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.109558795 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.095376051 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121424546 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.091090737 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.110998822 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096736591 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.114720934 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088243206 seconds)
  done (took 5.796390068 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129420073 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167425485 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098581083 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.172601569 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12619121 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12459048 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092841177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14969183 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107228697 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089087133 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127082439 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123576383 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090311551 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118843311 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092846654 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110523153 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112461848 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098494293 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.11818262 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101293356 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121056266 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112434226 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107840774 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124830358 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119774424 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09433726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115171458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10721709 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.127337185 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11813004 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096766441 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123682613 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13462713 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.117245707 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09222244 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110590313 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105974068 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110462277 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111556698 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08780516 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110944249 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098313448 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112325768 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125556166 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091663238 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112684885 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092601022 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122811663 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127128369 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.095537347 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118804563 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122943715 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094720981 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109699769 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094672902 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12917327 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109371928 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087788622 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11316032 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12422067 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095094641 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.135486584 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127677481 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.095031399 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117313581 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123135032 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092845993 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115943835 seconds)
  done (took 8.655444248 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102461628 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.140215323 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132601639 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112299032 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122239491 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.120424725 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10170239 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.120345258 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100688219 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129158376 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120972383 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.173826946 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.094535208 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12676746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100408616 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121673335 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120833159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100741511 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121111732 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100317339 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.123075726 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132482212 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100699218 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133223789 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133910337 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113984735 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101760644 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120893571 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111385104 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12218205 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134551465 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121175351 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102460266 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132000089 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135624334 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.100905015 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112628423 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101665367 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122608769 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121316871 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094255391 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132927582 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121201859 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.094699473 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121185951 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101737219 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.13398393 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.134477934 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12715907 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109081019 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120023885 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13359819 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101178227 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122127815 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132257604 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14141807 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113947884 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13242765 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121753496 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11261765 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134700423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141298142 seconds)
  done (took 8.243399823 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092737976 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091421142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.111701245 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.089352306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113768286 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090399248 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112007088 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092390705 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090628901 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.114451507 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091779479 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111199709 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089695846 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112943206 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090121665 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109946997 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090211418 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088595253 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113382353 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089899546 seconds)
  done (took 2.813670087 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.102174333 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134760315 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.093185735 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122845165 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.095401312 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122922934 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115459187 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096568762 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113005373 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095850476 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126777827 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105296469 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117092105 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121164005 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105657954 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.121510087 seconds)
  done (took 2.6204879 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114518288 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129202634 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.141805808 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099854744 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.112380041 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101369377 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114408035 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.089771281 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.110467168 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.102445239 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.120796241 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104479506 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.114404106 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.091456039 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.114546592 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.098659672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.109671024 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.097836513 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114099304 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119382059 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121149982 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.116288765 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.094266831 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.115773747 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.095871405 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12242813 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.100580996 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.112540498 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.091965745 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11547248 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.096389424 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.123514805 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.088411098 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.122242005 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.090552468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112145936 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092158933 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.11612427 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098185178 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.115625959 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090360276 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.120181287 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.113482832 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.09524091 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.087355243 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.116435326 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08802915 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.123905891 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.116316156 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.097654526 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.113395327 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.102157358 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.121621682 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105565652 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125916684 seconds)
  done (took 6.789789357 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109402721 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118251392 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099173816 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112076358 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096872173 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.12361075 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097566806 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117353158 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095161268 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.112320774 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09626597 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119418536 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095091207 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118847193 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09563235 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119391584 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0878785 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116356711 seconds)
  done (took 2.762356174 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099802695 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1144365 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101595821 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114473392 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.094203455 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116084128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090071656 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090607008 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113521038 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093007406 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11530454 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.095387892 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113962323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.095237234 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115221028 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093540673 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117155207 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091848571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114813847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089686684 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116928939 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092547262 seconds)
  done (took 3.112008659 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112381141 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.149572889 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108094496 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.160584131 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.120208708 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097546895 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.1318493 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09821962 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139559802 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118096703 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098432904 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118860172 seconds)
  done (took 2.29163457 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122296266 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155720754 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092081005 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119011101 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129614744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100532087 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120068026 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0994513 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133675559 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134493451 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099063887 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133713854 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133305481 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132520899 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106939809 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131921775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119866013 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100491378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116733837 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14265083 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099895709 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134373731 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11995203 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100394269 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121067301 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132054266 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11258199 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135319944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120972001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111615742 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131679908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121471018 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112221764 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13757102 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118589748 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133775751 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100468186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144528814 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129012817 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110854643 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119720537 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129182884 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111831942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129998061 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133509929 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09979253 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128305852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121361145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099472573 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148743966 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13016302 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132749791 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10777757 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137009246 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127598359 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140764844 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127276256 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124402919 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100961162 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12856005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126511207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129629999 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112389446 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135517036 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128924381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132474149 seconds)
  done (took 8.933462004 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136927177 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117205582 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099530495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13738752 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131197146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120046273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101237175 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121284674 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099289328 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118419662 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165826359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116172809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109244691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128740435 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121496072 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100343442 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122851868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133158832 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096921371 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150222495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122553238 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133731041 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110617246 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130612053 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135628999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129492795 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100831483 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123032752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099973253 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123243538 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128838679 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100876176 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133871973 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114014286 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112797228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122401425 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099770799 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130567551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12089486 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107873196 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136242223 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144126299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121980219 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100479749 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134616302 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122056027 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100459101 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117429608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09976721 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119806576 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134876873 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135916169 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108509979 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125790401 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112983891 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093031197 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114948905 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113260779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093957957 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121981508 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125850179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094219083 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142345853 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114397885 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095919573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125986718 seconds)
  done (took 8.703544009 seconds)
done (took 164.464980308 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.115938258 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.154364691 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.111368011 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.181827447 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087548509 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14420407 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120437482 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125079003 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.086831813 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108816507 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088025908 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112001709 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153240426 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108703758 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088218154 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112211746 seconds)
  done (took 2.738350651 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193206417 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29903538 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.116055236 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115248741 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094565872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113103124 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091381536 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11700908 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089701578 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123314568 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110137588 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091493269 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121191461 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091908022 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109875884 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091104473 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122241993 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089968084 seconds)
  done (took 3.025713166 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122740683 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163619475 seconds)
  done (took 1.135915394 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133388897 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196944076 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310379874 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16527801 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118104083 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131766855 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16651905 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128490885 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199616008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131790875 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110422255 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11662963 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140511732 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100661875 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.120058707 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095230749 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144030116 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117429786 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097863994 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116672442 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116741089 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.11834256 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120552554 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098215471 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186689254 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131767504 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116728362 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096799092 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117079823 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096970424 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123181618 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130873531 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108575541 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.195975836 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09969266 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.190523377 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102301035 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116576394 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11759763 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094912382 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12031406 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098900225 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131973421 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115574065 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097055987 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123844714 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095872516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11765504 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123078952 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104897351 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124710251 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121464817 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.411009607 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124705455 seconds)
  done (took 8.076478669 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.844755594 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162302329 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115680995 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.950522371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.156997609 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135201445 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.848561642 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119203111 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.271557425 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.843571814 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134023596 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128502763 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235980451 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26017501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.156021316 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341204493 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.714998201 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128912104 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122220215 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157899631 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121443244 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143752345 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112058798 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.44536003 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117362351 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112817695 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099077362 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127766206 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166544886 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114285179 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096925714 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.2081052 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.273869371 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186071711 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116433484 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090807521 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113940442 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177362295 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27407979 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222653553 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17939603 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08901553 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112831439 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106873399 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135101768 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110559847 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17070615 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181574311 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.200615119 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096429079 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12733732 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101201071 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126410315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168915408 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112749098 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341012148 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345843767 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092981628 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123576713 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111130102 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274077305 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114827516 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209013074 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142194208 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219132373 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091196481 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793868652 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172668132 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118285049 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123220311 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10008501 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120056522 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126430113 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172953853 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389026275 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10842517 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118294005 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09176057 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.258948733 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094787065 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11486026 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172653055 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116189094 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103013862 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131551521 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128005879 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.178979581 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257725585 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129479311 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122029968 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09933552 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127809046 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094074463 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.24035222 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.203249012 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18770672 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.222802058 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127250507 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172574987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1722927 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126549148 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17839948 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124041245 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132150976 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105839051 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223514214 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150673394 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114107314 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098879604 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121716655 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152761949 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095898167 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122533616 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176213117 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491316448 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174746561 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08930735 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119823031 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10192494 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191308688 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101501031 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273798527 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124139713 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176129445 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099533076 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11365951 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122810901 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.171203006 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128721087 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102131448 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128450911 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122112023 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258965544 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226636016 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108268169 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245202827 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185320271 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124273351 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182413593 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10073177 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201710101 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104228235 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126967442 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115508682 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76523659 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127988435 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12287688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098436506 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202644446 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11473018 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095721707 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113705084 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090768097 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817661066 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10599285 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121231544 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102995208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124410416 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100491378 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122350589 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119515507 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169103258 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23896757 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105827495 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124042549 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11371953 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.169841264 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093736263 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114912733 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092922647 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116164022 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102520164 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12013243 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094705524 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201954364 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166649139 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226240463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.531262841 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115734308 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093030914 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240460322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11510936 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312300951 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100812678 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234070284 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175208329 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112061956 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34238511 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.177763402 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205395125 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095942233 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.20359873 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090191392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121064498 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168962311 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115256537 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101201725 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165457147 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1331082 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129487135 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.160794908 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093904333 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237132192 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112802424 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175772479 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117644811 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106241428 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316049198 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116130548 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113244876 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.194232784 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097552743 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115697278 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67249102 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115576279 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102982503 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125008258 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229591295 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174052252 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122972034 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100806628 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127741653 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169340276 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.239801802 seconds)
  done (took 45.53508516 seconds)
done (took 61.356496541 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31998826 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274051518 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.312064144 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203529746 seconds)
  done (took 2.064836342 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.193397912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159083259 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130435155 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115689044 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16170028 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091194429 seconds)
  done (took 1.727273852 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.50478693 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384220485 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.350767187 seconds)
  done (took 2.118567019 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27898797 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.289324175 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367914866 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415283993 seconds)
  done (took 2.341210077 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.222057902 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130689888 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105352523 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.144393485 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177759773 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.184699776 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148846754 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.15808479 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135118763 seconds)
  done (took 2.330592788 seconds)
done (took 11.463555282 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.295877681 seconds)
    (2/286) benchmarking ("sort", BigInt, false)...
    done (took 0.27370265 seconds)
    (3/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.270149762 seconds)
    (4/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.272633924 seconds)
    (5/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122987043 seconds)
    (6/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.184000731 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.097571801 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.200231 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12813784 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.167012143 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094603626 seconds)
    (12/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.123533062 seconds)
    (13/286) benchmarking ("sort", Float32, true)...
    done (took 0.211228997 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113917846 seconds)
    (15/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.272742953 seconds)
    (16/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09497364 seconds)
    (17/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.242456107 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.212112948 seconds)
    (19/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.168106065 seconds)
    (20/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.211505496 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.164626237 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.286070997 seconds)
    (23/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.220483946 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.154406556 seconds)
    (25/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.271069303 seconds)
    (26/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.107880039 seconds)
    (27/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126902011 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099647281 seconds)
    (29/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.169943099 seconds)
    (30/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.248688754 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.212617395 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.177055676 seconds)
    (33/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.131376831 seconds)
    (34/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09581816 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104989647 seconds)
    (36/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.215980407 seconds)
    (37/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119554957 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.104020679 seconds)
    (39/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.160595109 seconds)
    (40/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.160670613 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.147136158 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092393629 seconds)
    (43/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.085970422 seconds)
    (44/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.131940657 seconds)
    (45/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131082241 seconds)
    (46/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098801268 seconds)
    (47/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.207677089 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.149896562 seconds)
    (49/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108877678 seconds)
    (50/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.197131446 seconds)
    (51/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133868904 seconds)
    (52/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.218399137 seconds)
    (53/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.107822914 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.122498818 seconds)
    (55/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.225684892 seconds)
    (56/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094571795 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12802054 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.160806505 seconds)
    (59/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112440289 seconds)
    (60/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118839151 seconds)
    (61/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087392888 seconds)
    (62/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.206180042 seconds)
    (63/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.233163399 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.124789604 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096040994 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121406102 seconds)
    (67/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.142881219 seconds)
    (68/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.1199587 seconds)
    (69/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094200995 seconds)
    (70/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.203736908 seconds)
    (71/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.160368515 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.251410216 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078129646 seconds)
    (74/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.132446313 seconds)
    (75/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081750056 seconds)
    (76/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.119248619 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.090523309 seconds)
    (78/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119623426 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093833782 seconds)
    (80/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.162127603 seconds)
    (81/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.220096244 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.101986815 seconds)
    (83/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.10011562 seconds)
    (84/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.122425258 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110267514 seconds)
    (86/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.126577903 seconds)
    (87/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.194103197 seconds)
    (88/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103524149 seconds)
    (89/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.125201483 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079957104 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.130018097 seconds)
    (92/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196836591 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.130572328 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198855491 seconds)
    (95/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.102488134 seconds)
    (96/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182695462 seconds)
    (97/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135561178 seconds)
    (98/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.25182755 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146644525 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080397699 seconds)
    (101/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.117037504 seconds)
    (102/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173965045 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.122939984 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121888574 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111504609 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122599703 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.130895338 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08010457 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078842782 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 0.193313526 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.12938999 seconds)
    (112/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.209211766 seconds)
    (113/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.207604168 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.104850472 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102503466 seconds)
    (116/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097398658 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121366201 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104943598 seconds)
    (119/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.16938222 seconds)
    (120/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.131302482 seconds)
    (121/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098597251 seconds)
    (122/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.141631547 seconds)
    (123/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079006725 seconds)
    (124/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.102568744 seconds)
    (125/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.129830322 seconds)
    (126/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.129565224 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.126856959 seconds)
    (128/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105885515 seconds)
    (129/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.103015333 seconds)
    (130/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.091801516 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.122043127 seconds)
    (132/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154782647 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.132406065 seconds)
    (134/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127415386 seconds)
    (135/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.189816378 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.117512323 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096317356 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.103706729 seconds)
    (139/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079236832 seconds)
    (140/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.102164778 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.106030943 seconds)
    (142/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.128562698 seconds)
    (143/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.117740504 seconds)
    (144/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197653876 seconds)
    (145/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210028842 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122317109 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092728167 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123196144 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106524557 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121993564 seconds)
    (151/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079767567 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102859976 seconds)
    (153/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.134957329 seconds)
    (154/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120440461 seconds)
    (155/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.102730097 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.10475615 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080448052 seconds)
    (158/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.173790014 seconds)
    (159/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.160175603 seconds)
    (160/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094708727 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.10350236 seconds)
    (162/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173001308 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118956501 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118208002 seconds)
    (165/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.116566735 seconds)
    (166/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132455557 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.128424924 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.129389359 seconds)
    (169/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095773499 seconds)
    (170/286) benchmarking ("sort", Float64, false)...
    done (took 0.179732643 seconds)
    (171/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07918049 seconds)
    (172/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.210945207 seconds)
    (173/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119331835 seconds)
    (174/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080440262 seconds)
    (175/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.169061711 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.209289702 seconds)
    (177/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097560278 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124659676 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.120007331 seconds)
    (180/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099231726 seconds)
    (181/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102923593 seconds)
    (182/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092827795 seconds)
    (183/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.140503992 seconds)
    (184/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092876761 seconds)
    (185/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118033298 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.080840835 seconds)
    (187/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129974624 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.106893952 seconds)
    (189/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.10132857 seconds)
    (190/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170729188 seconds)
    (191/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120181067 seconds)
    (192/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129342453 seconds)
    (193/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09628741 seconds)
    (194/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118331139 seconds)
    (195/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098480055 seconds)
    (196/286) benchmarking ("sort", Float32, false)...
    done (took 0.180215687 seconds)
    (197/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.094557009 seconds)
    (198/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102642565 seconds)
    (199/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079866539 seconds)
    (200/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102481226 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099384926 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115592618 seconds)
    (203/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099391958 seconds)
    (204/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.103016711 seconds)
    (205/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081717015 seconds)
    (206/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.110860323 seconds)
    (207/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097488056 seconds)
    (208/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.195533999 seconds)
    (209/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079788353 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122608781 seconds)
    (211/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081062664 seconds)
    (212/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111224662 seconds)
    (213/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.079787689 seconds)
    (214/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.119476445 seconds)
    (215/286) benchmarking ("sort", BigInt, true)...
    done (took 0.220352612 seconds)
    (216/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097466622 seconds)
    (217/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103762414 seconds)
    (218/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103712172 seconds)
    (219/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.104299682 seconds)
    (220/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09572248 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.131187884 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.122456641 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122993524 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098064706 seconds)
    (225/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.102749343 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081220567 seconds)
    (227/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114400609 seconds)
    (228/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102383724 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115396879 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081689255 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121804575 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080648468 seconds)
    (233/286) benchmarking ("sort", Int8, true)...
    done (took 0.208486491 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123768491 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100311419 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119780012 seconds)
    (237/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079611125 seconds)
    (238/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.221196228 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131231756 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.104760685 seconds)
    (241/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.105542479 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.108917018 seconds)
    (243/286) benchmarking ("sort", Int8, false)...
    done (took 0.199257416 seconds)
    (244/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123022371 seconds)
    (245/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.079585662 seconds)
    (246/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.104031827 seconds)
    (247/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.119356738 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.128999048 seconds)
    (249/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.088139417 seconds)
    (250/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.102850646 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.097194532 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10432632 seconds)
    (253/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.081123422 seconds)
    (254/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.159386267 seconds)
    (255/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099626058 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.146281309 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.10115055 seconds)
    (258/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117603128 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.09190663 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11634346 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112620042 seconds)
    (262/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.104226479 seconds)
    (263/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10338838 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131761574 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098993046 seconds)
    (266/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119402029 seconds)
    (267/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134467786 seconds)
    (268/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.128767867 seconds)
    (269/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.112167428 seconds)
    (270/286) benchmarking ("sort", Float64, true)...
    done (took 0.214127078 seconds)
    (271/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098876884 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123773609 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096631386 seconds)
    (274/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117777583 seconds)
    (275/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.088063579 seconds)
    (276/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.103176348 seconds)
    (277/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.0805766 seconds)
    (278/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08073686 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123679393 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119880702 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096050968 seconds)
    (282/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136493268 seconds)
    (283/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.089663842 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080892883 seconds)
    (285/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.103800459 seconds)
    (286/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095979324 seconds)
  done (took 38.827579371 seconds)
done (took 39.706449673 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.11291424 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160067065 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.10427413 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.147706632 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.129356707 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.110028235 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126485149 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104549187 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.13028124 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130982848 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.108050818 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.110886547 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105213776 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127014769 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.105930609 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148027293 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106533746 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.124726381 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.094771627 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.120413983 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119192608 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.098408748 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.121407206 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.087876675 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.127818675 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103009075 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.122764851 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.105753939 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.120419675 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.09395616 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.118722029 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100646989 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117652218 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123731392 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.122435447 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.096496224 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.128363055 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102479226 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.121892333 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.096436642 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.124745527 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.09667971 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.123438255 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101326931 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12134624 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095274875 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120718997 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129224517 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125397427 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120343553 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101666736 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.127768512 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.105115883 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.124674744 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095490201 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119892958 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096922936 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148892653 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119913084 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097924905 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100751203 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.125530938 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094968317 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120337066 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119196911 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105862796 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12665431 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096424589 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127069687 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.100348489 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.115071211 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096840388 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11797286 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.094543075 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.126043318 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104294597 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.114881391 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.097534472 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.12332573 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098817074 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120087408 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095309129 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121971614 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0977853 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118114237 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088771238 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117560063 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099698101 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120589625 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096386325 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.12242255 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099694317 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.123222933 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103725216 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121147566 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098032185 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.121434353 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.097200047 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.123495776 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094796411 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11633835 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094595066 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.125300313 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094200185 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.122549493 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106537622 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119747508 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099947339 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.120841458 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.097130978 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.13292996 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128972692 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.097989492 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121364261 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.09407224 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124050204 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.095036958 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117442285 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095026165 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120392995 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098512133 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.121087459 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095585946 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12407256 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105647668 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.116904101 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095708026 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118843028 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.098288225 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.123334753 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.097712481 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.118885969 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.096737301 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.114926771 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09527855 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.118474521 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100819014 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118729607 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097203045 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.121550367 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097262666 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.122856231 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.098383585 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.122007959 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094594748 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.113298448 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100205366 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11857292 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.099269212 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.121371339 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097410317 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.116547674 seconds)
done (took 17.953318724 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108057311 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.192211626 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153679289 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.157538156 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154319131 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115473072 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132698892 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153370789 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.105547723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.150235296 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151426109 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143374891 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133989904 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.129930753 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138305599 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.104405632 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.12751871 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138306397 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.139185007 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.149256506 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154260848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.128937793 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124875474 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.148581432 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126547394 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133694911 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.130322433 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12784694 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107082816 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.135341014 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.119832941 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132361349 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129875446 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115500052 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135141187 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101443366 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.138858689 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123991144 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104066356 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.128529764 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139910804 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115661637 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.124661307 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.134670947 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.10445293 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.132039832 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103301936 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126746059 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104198559 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122465302 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132301888 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.124808872 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126909552 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.129506846 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105287017 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128657231 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106133785 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.131919935 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130282602 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107601223 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.128014713 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106527391 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135104322 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145042994 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.127112288 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10645987 seconds)
  done (took 9.431311691 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124734309 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158704355 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135490654 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112022496 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131535487 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092502762 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116817241 seconds)
  done (took 1.81272836 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100221801 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148334411 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128909288 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.152326279 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140754086 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132449609 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13880256 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.120133311 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.117987836 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.131672692 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12356214 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174891287 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120427221 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106683536 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155232345 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.119066314 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130515758 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.120466232 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102741247 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.15425323 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125381527 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.118264321 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133411322 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095518369 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141770163 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096470391 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189220804 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13136346 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094211361 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126237788 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125173489 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.192055681 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1179829 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129934537 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093568502 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149523648 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141696009 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.100838718 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144930289 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099735667 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.142322711 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101209564 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128378162 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.125252206 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103162877 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.135187472 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107083605 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128727266 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101188874 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148849748 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130764159 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118472332 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121473196 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099718379 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129676803 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101596933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134470629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.123297474 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.124500387 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127561064 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12256221 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147725144 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.142320883 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121785591 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137718001 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142989739 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.118676717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125743619 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103494108 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.128235753 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122819763 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.124946211 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.13066013 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.111163593 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129276828 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.12377365 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.148745686 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099838998 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133803731 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124629094 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099118829 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120712185 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112193401 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124325321 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098382145 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138251484 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10820836 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12642414 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098850646 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.143215307 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12449405 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107494968 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132885363 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099473822 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137131493 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149163558 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105299326 seconds)
  done (took 13.105105068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.102613618 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096622639 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.127518835 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121689302 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098109251 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096807923 seconds)
  done (took 1.595540105 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.132439423 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124286904 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112272828 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.128607129 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165532037 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.120923373 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146631167 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129996558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.116267512 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136698293 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.120901958 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.147828942 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.151997066 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103561322 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.145915212 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10316776 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.147503125 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124850571 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111016172 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125348143 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113875063 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128148928 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099891756 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.144793942 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127949283 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.10437108 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128205665 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11230797 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136022887 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10566292 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.128983054 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128244776 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.105072266 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130664777 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.120691975 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.128636646 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098944067 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.131362702 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128563808 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105070072 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148180439 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100300266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.134995406 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.108859763 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.131740271 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128232489 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.107403595 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127308049 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.120715303 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130880989 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.105630162 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129465784 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.103228504 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.13144838 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127604474 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107127822 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.131223617 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121554423 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129108383 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103671494 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.125571955 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103504114 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131789571 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128400479 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10427568 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.130679545 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104014513 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125607941 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101138118 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.129178596 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106133026 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125932578 seconds)
  done (took 9.801937913 seconds)
done (took 36.675754885 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694861444 seconds)
  done (took 1.638923943 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.862983724 seconds)
  done (took 1.811250199 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.356360191 seconds)
  done (took 18.334477766 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.530615211 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.631288143 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.985948993 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176350185 seconds)
  done (took 3.272187404 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.96506216 seconds)
  done (took 1.932813254 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.321329189 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269818631 seconds)
  done (took 1.543247981 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.840794759 seconds)
  done (took 1.800634326 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.587082966 seconds)
  done (took 2.544038744 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.366149697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.207183265 seconds)
  done (took 1.541742726 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.610834197 seconds)
  done (took 1.572404174 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.284316714 seconds)
  done (took 16.253676039 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239793877 seconds)
  done (took 1.216989343 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311864226 seconds)
  done (took 1.276810438 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.573119643 seconds)
  done (took 4.530345312 seconds)
done (took 60.22554754 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110289683 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134609174 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110252376 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131903324 seconds)
  done (took 1.440337367 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.11314729 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129011606 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108762748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129238237 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112571122 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128830665 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102932266 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135938718 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102855562 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131176801 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128960009 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.105507235 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129552918 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103299099 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127913055 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105859334 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132245012 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103015921 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130123013 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104902472 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129430722 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12962556 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108017166 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129713912 seconds)
  done (took 3.821539856 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.110076 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101013766 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129140818 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099928742 seconds)
  done (took 1.407556897 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114065664 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144576208 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118316772 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136135186 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144307779 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118455451 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12611818 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.102112585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.128429527 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111343354 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.12722959 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120751435 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.143989867 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120646394 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114321074 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119939609 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097763385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144948574 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111244384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13811114 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099984714 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.136226577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108479563 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141466078 seconds)
  done (took 3.939165352 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178796082 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.139935028 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149475546 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173986933 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126757323 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124443447 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.125569254 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133579136 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.128697825 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099837906 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124911818 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155332697 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131151465 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127081969 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.10049722 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130929787 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107209733 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130386733 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101823535 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.139302297 seconds)
  done (took 3.604744439 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109636239 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124605407 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096203417 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124161618 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108172288 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126893348 seconds)
  done (took 1.666099773 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09894438 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095395597 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.121008856 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095363048 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.12589165 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096316657 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118762707 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09548407 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094166373 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120603857 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094523636 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119933641 seconds)
  done (took 2.243128354 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.547506089 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.100405413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127050735 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101258679 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129374278 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098104017 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141057771 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097770051 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.207421059 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100553826 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141667039 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.180013251 seconds)
  done (took 2.940813225 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223876899 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105354943 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283428546 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383267953 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167949346 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175142409 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284592605 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178083689 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195579735 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145297335 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21432586 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166131546 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136530701 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212600717 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12263911 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.194263497 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183580742 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209242552 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157812343 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247748712 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174330482 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175283218 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198567736 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160029987 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121058352 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168164932 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126859783 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111154768 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181560505 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177164222 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208363799 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155599185 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121748784 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235796685 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223426689 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186497153 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.337348764 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116558137 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201030555 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19854474 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287704391 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149804131 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204108753 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164487238 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13945257 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190199385 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165170752 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189925968 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113400003 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150696908 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218140535 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184000576 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19110267 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118970348 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333002256 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159977343 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.127889792 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188701548 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224881043 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209121446 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177775355 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.104030146 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220225366 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202049623 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190292073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153658829 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177791051 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106350088 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186564379 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238895111 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188764332 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177270992 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.193538221 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142825798 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171732078 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188510682 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16278494 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187932886 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169338325 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10340299 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158774811 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145779515 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110542362 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196035509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130879619 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224187014 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1437305 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.298958001 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216261811 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167553158 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171003976 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174365958 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177320656 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156288002 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099775225 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15588538 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.180000384 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165989605 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139921168 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139007215 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15552822 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134803866 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160772714 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105124198 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168125541 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.143515492 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176674909 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172504357 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110075979 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174549563 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159232717 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166433101 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180147086 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203951193 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141822796 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113393677 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212025283 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167000227 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145551299 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194369784 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204073377 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182136238 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146348043 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177209859 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204192149 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152190912 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206468093 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151284717 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141882027 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131582266 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167037301 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165508259 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164067813 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137489663 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159419199 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211654415 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.108094488 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146189413 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183137176 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135228572 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109664051 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153859063 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144420872 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122832046 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15918959 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148357887 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164608879 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167416541 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161119433 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139434548 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151731362 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229415074 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11473045 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169219821 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156150428 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099274861 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.214504068 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203612606 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111110262 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194983221 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177821993 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232257133 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172510445 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111957695 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190425648 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138671721 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100790447 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201909774 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140335736 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171718815 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.226437058 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202768625 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175703192 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161190362 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157792538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177250057 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193098961 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16609246 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.127477348 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171898681 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175937138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.13196683 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.130607548 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108836954 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148938742 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111721536 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141355163 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18961111 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172459298 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223117404 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169741604 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120847341 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199141338 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.134549171 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174703261 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180600782 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147418037 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20202026 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200388363 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175957801 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151180804 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179711728 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100778456 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134230546 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140474119 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147597562 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142123439 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143652717 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150799103 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200453945 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184510915 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158150196 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212313746 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175874013 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210411588 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130781169 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171603548 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189084634 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16611098 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167358957 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14144942 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168845756 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195913851 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151929741 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201885277 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170073197 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176633224 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208370487 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165142564 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139186232 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131405261 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177393993 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148722628 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181847469 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155718403 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142581712 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135336538 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14492889 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134378959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190269333 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152160614 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188243956 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175439474 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182651296 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134596277 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152507411 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141353261 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154306122 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.125387091 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179870081 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206602327 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153270151 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168227191 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192944914 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110636628 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34729098 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210075071 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193326814 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146006998 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151052305 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143245309 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177524988 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171360239 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191755399 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153014488 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190321923 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167660317 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.151994515 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115557055 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156728361 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160951105 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160322708 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140880485 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.133902809 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150990639 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192961539 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155436906 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167810918 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173074857 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128582832 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.164238524 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149718136 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219043766 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168223655 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187273176 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166128125 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185386621 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196778803 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133432883 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109111332 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135823035 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192730827 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11310452 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167695873 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218306119 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207414625 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16944884 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180283044 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145260899 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.106596793 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168200428 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157521623 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20768336 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150820531 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144561977 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209991625 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159910145 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112268033 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174332919 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292122744 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153040878 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192189575 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129715759 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28500333 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110368018 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139704829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179036781 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18086397 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14018816 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.164776926 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173221929 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154413722 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180131399 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117776032 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225601563 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218135372 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178537913 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183760659 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153119235 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168429556 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172971418 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194824283 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15398699 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152547193 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146232168 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199644563 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232366535 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113859336 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172060172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171526777 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168102048 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183431022 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143981746 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197345036 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138958959 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176484339 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120873736 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132967322 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167390203 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192544631 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14218172 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194041559 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167847969 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112099159 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136762089 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161189537 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166439217 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12421591 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139950691 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188198906 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137691458 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171723874 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161527488 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140283304 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164116549 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153363317 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112316834 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152079631 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154008635 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116291254 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179822066 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201596324 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140690254 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195571492 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181634696 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175250045 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170104534 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154287437 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642002959 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137985189 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200125135 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15643547 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197753272 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159302919 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174657086 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168753249 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130080972 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175842034 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158583977 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230629036 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175826301 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166678063 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138787953 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12615137 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154955469 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.140505449 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160818205 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143380234 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149507363 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145603546 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164581764 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127137635 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155610614 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148253935 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203611967 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15686084 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193567242 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194541741 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146196629 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174045987 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185438028 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110274619 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170781058 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181505856 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150962978 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160232233 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13858714 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.116265908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189668271 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132911735 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17058038 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141414726 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170667014 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172898088 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144348728 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16819853 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151779507 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141337578 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136512713 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163845292 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165733439 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111185172 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.137841162 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164366673 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169671014 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1660965 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108183611 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180814901 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201734877 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106067743 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143251997 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292993667 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16926526 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204386534 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163901063 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143452057 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125163899 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165358059 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162939419 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168875766 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109332779 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14267587 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140750726 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18763681 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174765026 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139191862 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193696682 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171242612 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198636017 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.145538279 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.273241687 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118530446 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16624521 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.140264338 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137476772 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122703711 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143720659 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153645465 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200662783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188930891 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16366619 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125102354 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136897102 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104513935 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142418991 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181936814 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165418593 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167472167 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152040839 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.099248591 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154343408 seconds)
  done (took 81.601476929 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159195092 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151681047 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155865525 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206057965 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177159138 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265315794 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215731056 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237310819 seconds)
  done (took 2.630075274 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.113294615 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144965974 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.151218208 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132871515 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133020449 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.353886103 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.118272348 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.132532818 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.192777568 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146670726 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131255411 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.625730932 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.106701037 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135715353 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121645655 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132481413 seconds)
  done (took 3.926589321 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.299024314 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538032259 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.961580912 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.239044073 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247887655 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.164506532 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740249729 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.172280475 seconds)
  done (took 12.424276843 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.139638574 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150288081 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.151452216 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.178044786 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.161575467 seconds)
  done (took 1.854929564 seconds)
done (took 124.46277401 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109209971 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133651721 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105309595 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135841952 seconds)
  done (took 1.542159283 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.124351008 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089554821 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.120323528 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088212915 seconds)
  done (took 1.488325801 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.450198144 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.120231677 seconds)
  done (took 1.677423348 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135237074 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145958719 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128669437 seconds)
  done (took 1.486745054 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118241503 seconds)
  done (took 1.193342623 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121621352 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113694861 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152137673 seconds)
  done (took 1.460724296 seconds)
done (took 9.9175241 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126310551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.44340871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394789324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14846293 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729527686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389222806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045501965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16321235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172741055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100868195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14645562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682084838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.032654061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.354292487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015873504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.346432353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713440836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102324148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134720516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101516205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021406257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099009181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12969625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101832807 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708198489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404369244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128125365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.392151399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100201992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13193893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390551347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126462139 seconds)
  done (took 17.141704102 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108851638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.188827553 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108153144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129753038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104629327 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129302915 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10997509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141395851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188174952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127395378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120387054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127050152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105705286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128147814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.123402954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127526551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10335219 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130109066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10863455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129639327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121157372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127586901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102859847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130020721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100067076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141340175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100801534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.14062085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099941662 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133474449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105310654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129385655 seconds)
  done (took 5.044047188 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151806256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199156947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137852922 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135945227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178768432 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130229426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214498683 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137161546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192296479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129061149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11963091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129080307 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.166883937 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101478664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150645184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100189267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130715019 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102250203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135199929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102692118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148231089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099602287 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130546539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102685485 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128744258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114554058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128983729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140307956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103096185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132062711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107401241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127849241 seconds)
  done (took 5.384653338 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110845348 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135304057 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119362043 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146683464 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10361535 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134183285 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108931043 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.130843443 seconds)
  done (took 2.065087589 seconds)
done (took 30.711432839 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123240669 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.105324175 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.144276202 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.142185123 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.112332571 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.163225464 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100370822 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.112433071 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.142864839 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.109267435 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.146073681 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.099831461 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.130434787 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099280497 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.142975801 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105525399 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.144938916 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.110366086 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150374268 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116748486 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.129966642 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.113527664 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.140044805 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.121926774 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.151538933 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.149774038 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.117675687 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.136488251 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101147553 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.130012011 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.119106522 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.156321651 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.103496954 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.147342106 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105416169 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.133986305 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.10135286 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.131215803 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.116714979 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.140752812 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107445785 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.141951488 seconds)
  done (took 6.371521962 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.134010296 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.175110767 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097908886 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.128021986 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098469027 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.170705707 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.16711621 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.09802571 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127490092 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.127250315 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.158370456 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.098968661 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.127792929 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.099071369 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.127426439 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099467359 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.155496314 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.125754357 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.162352735 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.160856848 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.148919258 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.163345759 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.165538356 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.126666081 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.174335186 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.167428299 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.122773338 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.168155222 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.15921569 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.099586317 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.162661251 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.132175196 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.128083988 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.097788174 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.172902127 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.1683497 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.129473052 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.171838735 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.16245216 seconds)
  done (took 6.545194048 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114176293 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146402997 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128588995 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20259051 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.17098061 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116861084 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144619299 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119271436 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158353312 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100473123 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142084341 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.162545868 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119293885 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.14090088 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107706121 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144637895 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.121420329 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.132842019 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10849908 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.149224879 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119662234 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144067523 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115990495 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.141682016 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101354635 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140012856 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107164258 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.145341058 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136986449 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111544938 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134070688 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106870219 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132442791 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112645421 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133796981 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109790214 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152415992 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112581859 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.144543262 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165139659 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11216884 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134692442 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124788679 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1789508 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103465239 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138573153 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112062513 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140569441 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100560102 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150751727 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116183266 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131679264 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14634365 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101730585 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128739801 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110355331 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103332374 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.134296677 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110273753 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.135405638 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150148194 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.111493117 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138848062 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104676863 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13672338 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102843311 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.129226336 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108149026 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.155565735 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107900324 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164475826 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103073266 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137798311 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111180923 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.138113812 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111563565 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.131714465 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110327133 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140062797 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107682661 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.139317421 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104931265 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.135056014 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120792312 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146253659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138849134 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108298215 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137471117 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105917654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133289256 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117205867 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.133701365 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106563841 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142203482 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103537602 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133882453 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108686896 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137147692 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100831534 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152243207 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108426937 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.131428966 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120297052 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132168287 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106330027 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.141091312 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114819673 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.131227076 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106684364 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137188467 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101037259 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136617337 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105835946 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130651483 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114536887 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.143790148 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107034045 seconds)
  done (took 15.988803665 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.255287089 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233307467 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203582204 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316273078 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154871137 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.136940373 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.259165878 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155012959 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133460115 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17281784 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187876902 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.19983408 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.188198054 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.198925083 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.192992943 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.10344222 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.16672857 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.187658851 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.235507481 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.283255764 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.165907035 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.147969903 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174792707 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171281213 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.119590865 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.149161684 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.157391607 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125382058 seconds)
  done (took 6.279309823 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120284372 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171780055 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.110431655 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.161596877 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157913328 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103224574 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.137869481 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103556048 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146694743 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147374753 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104212896 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137976428 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.109071063 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.141677973 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.102419233 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.140574179 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.11268305 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.141022202 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105408667 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.13633881 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.119845904 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149717085 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136959218 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.11011375 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.149990007 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.107890447 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133103175 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.154285623 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112992696 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161565537 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.099407588 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.140853923 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.145166997 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102471727 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137937958 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.105622077 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.10375477 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.134733202 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.105613485 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.129227476 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.102065559 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.122401873 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108769528 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147173267 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.109864213 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.134610036 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136627429 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.107392748 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102637442 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12923556 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104548066 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.134889526 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106965089 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.148465887 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.104929236 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.132802343 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.106354224 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135019933 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.111692964 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.135129098 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100559076 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.137371489 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110428904 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138189678 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111229176 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139649263 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108570066 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.134213567 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.10846474 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.140461689 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.10484579 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.145435837 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100004214 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.136173586 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113821285 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.145117279 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.106637377 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138756323 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.138786131 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.10271493 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.093041696 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.131177304 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.089592631 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.136947136 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.102535692 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13743485 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.105985838 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138614531 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.11933306 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.143335636 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.140745686 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103913342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.138439685 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.107511809 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.129419546 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107802265 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149450295 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.123797564 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131967524 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.100043463 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153871275 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103630602 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130292598 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.091523578 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.141196563 seconds)
  done (took 14.17895568 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133967247 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.171207324 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103345206 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.152021559 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.16780983 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.132503377 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.14812348 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.11210131 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.133105751 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.123929676 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.139880479 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112019922 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.141314607 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.11842046 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162018831 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.14594374 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105053127 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.147558625 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109238631 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174411844 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.123124675 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.160234228 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165320312 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1151757 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.139138302 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.127286647 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165652258 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.146175927 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.117069204 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166218903 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.117039319 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165065866 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167284073 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.108917861 seconds)
  done (took 5.831537484 seconds)
done (took 56.270770606 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.231610053 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.403529411 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.179422034 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.179438416 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.211002877 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.226269382 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.182882063 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.371374034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.873371377 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.172658021 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.177207727 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.177113595 seconds)
done (took 27.489853712 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.223381794 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.770064104 seconds)
    (2/2) benchmarking "String"...
    done (took 1.493157058 seconds)
  done (took 4.361039154 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.175606589 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.176032467 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.421078473 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.178976225 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.194469836 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.195151638 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.182513314 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.182757035 seconds)
  done (took 15.63294448 seconds)
done (took 25.492679705 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.234723013 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.360447166 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.438512797 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.191228322 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.176433039 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.17934729 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.1781077 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.19950152 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.182361811 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.192049637 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.177310972 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.447994947 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.189781117 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.563906124 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.176766985 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.203381549 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.191490068 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.42503608 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.176780925 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.216101127 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.175308888 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.164494661 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.207469837 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.213271714 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.188788034 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.18831483 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.18690154 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.183840715 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.371287076 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.177645471 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.216517593 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.179114991 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.183296683 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.177180132 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.284477905 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.197332939 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.35930881 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.179743477 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.162305069 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.18507233 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.380967953 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.564095479 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.176145304 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.176799842 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.181588816 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.245207201 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.16385937 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.902500207 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.181442186 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.177112133 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.212251325 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.553572897 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.188622189 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.184119986 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.195998296 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.408576154 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.198828591 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.195063395 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.202065738 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.175672615 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.177462096 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.177211458 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.216579216 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.182656485 seconds)
  done (took 141.799236713 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.176353689 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.181101842 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.181891892 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.240316871 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.17961831 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.181133798 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.174250058 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.177334314 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.181956129 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.208616345 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.179592838 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.175802718 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.181560163 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.123115377 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.176089357 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.197670234 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.17932596 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.181854459 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.176088599 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.175964373 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.203307002 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.1799177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.196705987 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.183616641 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.221374721 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.267428952 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.206159469 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.19803089 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.18082422 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.175432761 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.215961855 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.240815247 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.756162877 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.03293489 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.184047454 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.189240731 seconds)
  done (took 79.359278252 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.17526012 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.178711225 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.178544536 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.208353873 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.180891781 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.717231282 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.721307341 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.909221386 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.366968283 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.437453111 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.408139479 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.178397875 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271625258 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194506162 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.179453507 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.194636436 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.204943597 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182076165 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182498602 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718141165 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.19371818 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.347991008 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.346766614 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.195095584 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210062783 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.573002429 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179491573 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.210359232 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.505732601 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.223917265 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178463774 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.523495534 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.41406374 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288980667 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179805497 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206284688 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.181026443 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.454104869 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.175043502 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178831263 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.179171845 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.183911401 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.81695423 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.18347339 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.706156046 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182248845 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.08175709 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.178210907 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.17724131 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.142404894 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.771839137 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191458843 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.179323248 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.179712942 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.177655544 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.17747625 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.204273416 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.155834198 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.269864876 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.177571536 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.181120773 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206566515 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.177001939 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.214092887 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.176508707 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.352606152 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.238147258 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.282771947 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.675325261 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182637319 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273041217 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290060062 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.174376242 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.176640216 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.172615073 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.177128661 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.285122624 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.174784663 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.552462717 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.339885796 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193696774 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.314635316 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.275207696 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.174336593 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493884508 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.180149669 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.175308392 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886059845 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.179268436 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268965373 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.176111083 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.177442552 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177787112 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.176650106 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.552699803 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.674883638 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.346084587 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.180688091 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.181992071 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.381567334 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.180337086 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.562452486 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.659801144 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.785970058 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.180237178 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289742366 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.338524506 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.192032912 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.18025503 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.307101345 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.17667646 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.237537477 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.176478057 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.577787963 seconds)
  done (took 362.288220209 seconds)
done (took 584.545062491 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.86781375 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.822234122 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.944877648 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.848464818 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.816763342 seconds)
  done (took 10.396264532 seconds)
done (took 11.488553149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.354618619 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.350856171 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.230720149 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.357355121 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21067544 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.373473524 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.334766112 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20160075 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.276687847 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.252185465 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.278356794 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230538836 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215614348 seconds)
  done (took 17.766617358 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.425896023 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.180906955 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259655558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430528383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221630456 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.439566331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.515541799 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.181591938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.323340188 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.193858787 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190809554 seconds)
  done (took 17.462684323 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.434807056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.181717742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250253051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445738423 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221622862 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430485322 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.472922767 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.183995919 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36226394 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.192793165 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.192452017 seconds)
  done (took 17.466919544 seconds)
done (took 53.793468881 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.215968151 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.338351983 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.207051125 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.195977483 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.190277211 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.190917391 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.192323907 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.191136182 seconds)
  done (took 10.82027789 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.183767744 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.184294353 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.189632251 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.189109953 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.188767197 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.189763922 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.190271091 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.185448024 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.189732238 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.188964318 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.187765669 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.188668077 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.1887781 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.187776657 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.187468668 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.188950753 seconds)
  done (took 20.109985916 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.189738031 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.182946841 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.187270043 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.186622628 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.185554646 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.18525696 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.187104896 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.188764339 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.187008008 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.187965354 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.188109899 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.184031298 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.185414768 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.186800511 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.182914308 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.186964722 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.187406523 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.186881463 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.191450443 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.184035291 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.184504396 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188030019 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.184112338 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.186994766 seconds)
  done (took 29.5808986 seconds)
done (took 61.610055481 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.183911399 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.197415178 seconds)
  done (took 5.482621212 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.249753291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.249331144 seconds)
  done (took 3.603169759 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.190755789 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.188230803 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.190010125 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.192194606 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.188184828 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.190147663 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.190588965 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.189552126 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.188188357 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.190173965 seconds)
  done (took 13.000418417 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.191048828 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.191556449 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.189811459 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.189085758 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.19071148 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.188984291 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.193705475 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.192211302 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.190773911 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.186509819 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.191928926 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.189436864 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.189304672 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.188415917 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.188156469 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.193493196 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.193331128 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.190223832 seconds)
  done (took 22.533070876 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.202330423 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21270563 seconds)
  done (took 3.51928837 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.330150035 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233819853 seconds)
    (3/7) benchmarking "month"...
    done (took 1.30859852 seconds)
    (4/7) benchmarking "year"...
    done (took 1.297742729 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.234573977 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214083668 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.231977839 seconds)
  done (took 9.95583269 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.193891713 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.386479588 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484727024 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.761430683 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.191440676 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.196745419 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.070825301 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.198849497 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.19924722 seconds)
  done (took 13.787723715 seconds)
done (took 72.98562101 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.185576773 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.240256658 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.188884207 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.201125541 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.486463913 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.216489181 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.187517804 seconds)
done (took 15.811325168 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.180824425 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.17546936 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.189386191 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.194541384 seconds)
  done (took 9.845304299 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.147555488 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553092408 seconds)
  done (took 4.805342945 seconds)
done (took 15.756477218 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.197561782 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196038121 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194087971 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.197859729 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.190667753 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.191362666 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.198824258 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.1933685 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.193435242 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.197680842 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.197755959 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.19532994 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.194360695 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197222022 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192224861 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195819399 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.190487163 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19439467 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.193923489 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192794602 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194505092 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197446836 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.190252952 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.194415681 seconds)
  done (took 29.777977365 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.197084255 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.192987076 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.197846565 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.196436552 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.19552572 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.195120651 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.196135305 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.193376169 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.195298656 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.197877807 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194807914 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.196070395 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.196308228 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194218576 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19680979 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.191199405 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.19825625 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196126505 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200116159 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.195931837 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.197531176 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196192464 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.198570519 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198002304 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.196701673 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196332568 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.196152358 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.196264769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194200069 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.194909456 seconds)
  done (took 36.991416229 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.203203539 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.199119035 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.198424725 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.198616886 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.200546072 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.202780637 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.198751364 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.200407792 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.198855977 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.199370619 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.199152777 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.198482102 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.200178167 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.2015467 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.201891431 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.201471766 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.200366072 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.198612734 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.198964927 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.198868052 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.200895147 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.199914445 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.202419594 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.198557551 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.198913019 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.199776279 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.197611434 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.201153031 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.19596912 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.200587636 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.199287163 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.196724834 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.200178391 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.200348468 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.200930381 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.197636027 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.203925902 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.203431836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.200630431 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.204460564 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.200262181 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.201402218 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.202397366 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.198042293 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.202949511 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.201904918 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.199971167 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.201529725 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.200783381 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.204689883 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.201749483 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.202126702 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.201757021 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.202850896 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.200548472 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.203949784 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.202299595 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.203933054 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.197455729 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.203474667 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.201708336 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.198210908 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.20247443 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.203559997 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.203906984 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.204029766 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.205202376 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.203024197 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.203941286 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.204046758 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.203712057 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.204921201 seconds)
  done (took 87.586674224 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.204281324 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201516623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200971903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202967879 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201307058 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204258302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203150126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205792233 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199442648 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.204807811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203374637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200748777 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201616282 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205923984 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203969672 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.20056383 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.203404188 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20335698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.207429426 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205562691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204922763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.204277833 seconds)
  done (took 27.587798238 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204020011 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206443317 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.201922139 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.207259272 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204404701 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.204526101 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.209469648 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207302008 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202397558 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202144068 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202745625 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205063715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206062436 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202241502 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201471736 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206508769 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204096353 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202569947 seconds)
  done (took 22.795593333 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.204154546 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.204202362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.206742825 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.204283204 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.201321475 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.207136114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204727085 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204579331 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.207401813 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.204907244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.208406964 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202635022 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.205719812 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204295159 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205328953 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.204097587 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.207796544 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20413233 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20590526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204388872 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202860045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207720601 seconds)
  done (took 27.629436834 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207137202 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.206766853 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.205865808 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205395119 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.204608178 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.207012858 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.20718508 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.206748212 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.207529806 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.213184549 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.666307786 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209049515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.207594826 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204370682 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.20520734 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204183728 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209009867 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207659174 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208800512 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.203353777 seconds)
  done (took 25.712506318 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211913547 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210830755 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208533246 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208340535 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211145751 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.209148749 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209085856 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.209332994 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209209639 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.212247319 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.20916068 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.209800487 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209134961 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.209980991 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209808015 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210186335 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209023352 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20955749 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.20819649 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208204382 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212219352 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211065108 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206592425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212222922 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211313968 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213028662 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211593285 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.20849952 seconds)
  done (took 34.99888668 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207379932 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211989077 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.211113787 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.200609986 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.201047707 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.202027013 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.200617519 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.197295041 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20234248 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.202050845 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.202189858 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.201745037 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20258158 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.20148994 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2009707 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.204650943 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201582603 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.199081227 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202357162 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20170221 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.205971505 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204340219 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.205161433 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200149334 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202459065 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.204909982 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202483079 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.203121212 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205502654 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200780831 seconds)
  done (took 37.213844108 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249770187 seconds)
    (2/2) benchmarking "in"...
    done (took 1.249626578 seconds)
  done (took 3.613494782 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.201916203 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206095634 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.204926461 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203141681 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.199389287 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.206474969 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206734315 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203921645 seconds)
  done (took 10.746857906 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.206286583 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206035641 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.204357973 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.206878808 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.205194216 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.206058394 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21095863 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.221585152 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.204617704 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.207421839 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.213213225 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.214296794 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.208523774 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208171833 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.205537644 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.207233136 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.20798816 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.207099944 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.205861917 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.209569108 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206873665 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.209659986 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.20789474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.203881247 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.20902872 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217495254 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.20937291 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.208539171 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206902363 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.20997719 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.207349336 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.20430559 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.209113907 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.208898337 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.210837817 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.207686039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.216859512 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227317545 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.215087047 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207625674 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211529274 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.207135186 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.208231337 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.211383304 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210597103 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.209217772 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.208621516 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.205483037 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.208981956 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.211714365 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.217047801 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211294713 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.207237293 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211591729 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.209984447 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217260946 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.227297148 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.213692459 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.220733343 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.220413624 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.221415818 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.232345844 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.210903593 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.211182145 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217873089 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.23376103 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214321588 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.225495366 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.207353341 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.209981883 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.219168152 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223479439 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.233042262 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.211175269 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211858007 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.211228498 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21329217 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211499525 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22055356 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.233591137 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.211966617 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.212544798 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220697717 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23278484 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.211384719 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.210341178 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.210313524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.213166932 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.216394864 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219569241 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.230130142 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.215848249 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.211477509 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.211242981 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.212350213 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.213745468 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.213631468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213308934 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.20944031 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.213393392 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212986951 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.217244288 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.220974618 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210033494 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215347656 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.221265881 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.212941198 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212201713 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.219859246 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.215676108 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213505019 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.217334562 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.220043829 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.209294462 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215018013 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.221276399 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.215043113 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.216537225 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.214702995 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.213644392 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226053724 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.23928758 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.215157454 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.215418767 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.216123646 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.22541484 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215598043 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.218734313 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.216932995 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.212716526 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.212267561 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.216784726 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.216051213 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.21499859 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214487982 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217463737 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21200975 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.217660972 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.214859153 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.217973245 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.21791846 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21559902 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.215322744 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.217306559 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.216330595 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.216625986 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.221810083 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.214244764 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.217293773 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.216527161 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.216009954 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215775409 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.218079191 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.216713329 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.219026705 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214477986 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.217389506 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.217589874 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.217920067 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.219180406 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21921365 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.21798458 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220039423 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.217227975 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.225315671 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.217350697 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.214203539 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.215747432 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.216895138 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.217391621 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.218510141 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.215934625 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.222083508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.228595718 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.221998252 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.220884222 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.221064444 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21825854 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221652874 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220115291 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.22314074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.226756111 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.217868081 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.226377085 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.219583066 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220641224 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.222434215 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.221408952 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.220388133 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220188804 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.22421303 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.227730125 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229796703 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240712394 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.217978556 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.223884859 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.218845559 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.222981675 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.225013731 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.220702768 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224969111 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220828459 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223608748 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218482968 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.223528507 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.220754743 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.221415974 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.221269957 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.221334037 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.221873271 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225386498 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.220761344 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.221860605 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.219343313 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220524604 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221538421 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.221837725 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.219951489 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.222608497 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.220510803 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.221524418 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.222446785 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.229681007 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.219673371 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.224499299 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223229902 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.223750171 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.221953041 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.222920009 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224936919 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.222610699 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229569636 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.23888133 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.222666006 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.229277868 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.239580534 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.222425957 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.226341354 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.224635629 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.221767907 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.224948325 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.233188412 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.224690839 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.222457891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.223212574 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226550377 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223559709 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.232757277 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.220545955 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.223873014 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.225387543 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.226144704 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.221804932 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.224944985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.22255763 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.224348089 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224983869 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224958262 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.225069839 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224797407 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.224598447 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.226278649 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.226993353 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227527666 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.233514594 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.233436215 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.225010582 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.227872502 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.224240856 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.229295944 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227356045 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.227096065 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.226609238 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235540472 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.245357459 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233369037 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.240511558 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.222629515 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231747963 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.241369711 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.23042104 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225689455 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225121603 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.224310423 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.227235989 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.226122436 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229563596 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.227218737 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228481426 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230480508 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.230191673 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.225816357 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.227820103 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.226018559 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.22821819 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.22890989 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.228099214 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.228680456 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.230575147 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228530642 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.227614268 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229885994 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232949902 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246594004 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.226994113 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.225985404 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.225709418 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.226973457 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.22763961 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.228255669 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.231526236 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.23850839 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.232688454 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.237815598 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.230790165 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239695121 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.230121916 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.232822444 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237359433 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.226299214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.228142824 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.230965842 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.229080695 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235806114 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.24558964 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233835002 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.232321805 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229611516 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.232053347 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.232560401 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.230786413 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231064271 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.231483673 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238868073 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.24873057 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.234986149 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230668511 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.228714025 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231770919 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.231356283 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.229520652 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233539011 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.230639419 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.231503155 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.230594724 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.229163086 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.230047817 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229697126 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.231356799 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.228311011 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.231899568 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237859107 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.24909271 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236159832 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.23420307 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.23741233 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231704892 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23766967 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.249927217 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234210248 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.229758966 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.232327751 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.231780176 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.231105474 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.232078241 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.232082937 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.232051754 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23785598 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.230200165 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.232125728 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23322631 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.234000607 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.233033974 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239005509 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252214365 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.23607282 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237753481 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233026799 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.230856683 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.23896488 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.233644341 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.231791256 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.234687386 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241859859 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243608958 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.233164746 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.232809142 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236513297 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232711361 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.234327074 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.234899373 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.231917767 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.238531948 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.235539068 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.232299122 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237331015 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.234919096 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.23414189 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237007161 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.237016932 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.244537152 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.233158782 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.235099533 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23383217 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.23784929 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.233923245 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.235376687 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.232687022 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236258501 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236340379 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.234417356 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241457073 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.244079782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.23940026 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.236735429 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.235447508 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.234625225 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.235722962 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236152829 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.236247915 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233979413 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238691018 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.23549665 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.236483232 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.235689548 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.234964118 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.236676508 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236669212 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23865064 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245487905 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234363453 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.233897448 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.237184257 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234162292 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.236292547 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.237177625 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244277193 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239197214 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.246959783 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.245305879 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.241439647 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239124759 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239546215 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.243613857 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.234416251 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.238021569 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.233085699 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.238497954 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.235902014 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24170699 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237111051 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.241863209 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.234613614 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239607545 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246353827 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.256619923 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238150556 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.238806608 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.242750598 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235939148 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.235080844 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.234788116 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.23790855 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244281615 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.25466762 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235893347 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240777289 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241009121 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241432012 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243425475 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23780452 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.237149638 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.23566592 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.239772609 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239613231 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238793386 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.237837162 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.237756388 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23935778 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.241781174 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.24942851 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.237223711 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241955301 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.239509125 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.237981215 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237131163 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241623201 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.235998319 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.23506196 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.235858086 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237803299 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.239649947 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.241165222 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.238410811 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.241423011 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242366472 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242303206 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243037369 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.248883811 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249696253 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.237220915 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241173056 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.241229069 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.243113007 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239235073 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.244054433 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242032823 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.241296481 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.241143781 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242455353 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.241636532 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.24423667 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257234377 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.261409011 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241460067 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.241861632 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245348155 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.241503126 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.239414233 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24157164 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.240579702 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.241285676 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249316066 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.239084102 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249857384 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26346937 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.240921745 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.246788056 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246589441 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.253561518 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.243870835 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242060324 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.241535915 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.247579558 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258684265 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243509328 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252128243 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272675302 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.259911349 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.243666013 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.244751893 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243890889 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.243475217 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.245308878 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.243278932 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246163327 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244434818 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.242388854 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.24649777 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25172264 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.244589267 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.245922587 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245020923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245171452 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.244480032 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.24231639 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.243070643 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.244366521 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.241815449 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.242232025 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.243221645 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244691298 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256465089 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.267681195 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.245601706 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.243915548 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243384448 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.247949222 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.247845092 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257479491 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.254147621 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.246805556 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.245305609 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.246778854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244811536 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.245926085 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.244633648 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.245014869 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244545652 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.244977233 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.258457022 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268459931 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.25000828 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.245526575 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248642208 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.249900136 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247467676 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245886162 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249143891 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.249052181 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.249425095 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250262492 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248873422 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.245206279 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.249603161 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255481676 seconds)
  done (took 733.92080238 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245467704 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244898409 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245679751 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245248795 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244232872 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244533203 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246216286 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246553312 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245070315 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245153126 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246662886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244487362 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245526892 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244855414 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243481508 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246600557 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244602715 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24693381 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246683494 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244939952 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.245277781 seconds)
  done (took 27.305063086 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.249600493 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.249024075 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246355474 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.249723383 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247351164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250610983 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248630853 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248905256 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251885641 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246992763 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248235779 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248925215 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246237364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.247578064 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246493131 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247887259 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248528435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247463043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.249048312 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248061594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24960284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247330622 seconds)
  done (took 28.61502432 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.246905597 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.251817719 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.250157413 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.247564897 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.249871615 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.248045702 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.248516085 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.250038146 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.251196316 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.250640615 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.249991327 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.251740094 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.256626835 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.257178061 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.252789273 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.250609395 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.248644255 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.251130859 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.252133493 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.247579023 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.25492889 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.267110574 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.251531927 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.250096667 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.25037245 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.250539529 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.252688053 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.251214609 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.25325454 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.256294813 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.253861729 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.251437415 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.251828129 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.251540484 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.255288999 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.255897067 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.252342293 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.249575324 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.251832187 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.260506892 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.272120838 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.252605688 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260497354 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.26993252 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.252528725 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.255179877 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.259245794 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.249964102 seconds)
  done (took 61.311476834 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.830878497 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.83633815 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.830707375 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836178016 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.833666245 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.833907638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.847933579 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.847964497 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.832183073 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.832718082 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.831748067 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.832884128 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839101577 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.830865219 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.834474197 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.837174216 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.830208553 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835237504 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.849640569 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.846144321 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.832838783 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.840867942 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839931515 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.828366971 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.833972259 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828379985 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.831045823 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.838693599 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.834308679 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.831562016 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.835313767 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.846283986 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840459548 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.831630768 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830367272 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.835563478 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.83701646 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.831072198 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832588871 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.83575305 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.833732389 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831994433 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.839032194 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.84317445 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851222972 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.834175963 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838744642 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.832564089 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.832365138 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.837227403 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.840652431 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.838237222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836670786 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.839046106 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.837113178 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.842122572 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.853055105 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.845720389 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.832698466 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.834325779 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.842124417 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840926123 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.838061139 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.835986416 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.863075662 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.860206161 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.872986025 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.859752457 seconds)
  done (took 126.169572611 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258466643 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.256858063 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257943467 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25657695 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258303051 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.257174403 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259315556 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.259624775 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260913366 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25866688 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258830643 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260380399 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.256997825 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259868147 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.259814852 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256997693 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259266736 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259143281 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258327131 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261291685 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259069633 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258861687 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25959193 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260912743 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262421011 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.26062492 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260440396 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.258767228 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260865977 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259238315 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259401904 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.261141034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26215321 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260986313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.260775684 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.259876432 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260169172 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261519584 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.259427196 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258863854 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264082152 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260305913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259958008 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.261515524 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26092651 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.260399078 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260363121 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.259031229 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260922917 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261156357 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.262797944 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261042686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259049679 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260362291 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262103317 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.261498166 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260764951 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261568077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261472546 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.261483806 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263741787 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.263065402 seconds)
  done (took 79.288472804 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261232729 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262376983 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262004732 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.260971814 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260234917 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258923058 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261378732 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.263826923 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261843238 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263626845 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262305671 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258585125 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260995672 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263484321 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26044114 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259080866 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259100002 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260231967 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262497382 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259920774 seconds)
  done (took 26.386549872 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.262561328 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262428421 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.261393399 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26003748 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.261228245 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260360557 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.263404472 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263320586 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261841928 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263731399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264880157 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262225086 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261341384 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263594596 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265682716 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263200265 seconds)
  done (took 21.36579334 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.263437631 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.262624686 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.265151055 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.265558125 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.259013748 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.261907259 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.263179432 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.2620749 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262511185 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.2643824 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.265592546 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.264191597 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.268361464 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.262648619 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.262775697 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.264991733 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.264005273 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.262638074 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.263546924 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.2667728 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.266548045 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.266442459 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.266020502 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267209971 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.2633185 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.262431601 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.264840963 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.2656684 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.264348173 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.265433924 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.261950966 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.264442301 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.263917672 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.263653072 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.266120006 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264569524 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.26630254 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.265297912 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.2681647 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267925848 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266319957 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.264135936 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.265939794 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.269889981 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.263163536 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.265734999 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.263271867 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.263894315 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.266503868 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264969005 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.265912948 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.26840745 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.268495109 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.267579213 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.267179221 seconds)
  done (took 70.739325866 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267728657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269121299 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26515522 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26638858 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267556592 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265958133 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271420737 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272161333 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265282371 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269186953 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265679256 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.270936099 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267865648 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270226609 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267684634 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269847074 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266390725 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266208503 seconds)
  done (took 23.992802363 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.267320944 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266556677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.26836109 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.265991046 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.266159975 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269108137 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265223968 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.26845066 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267003681 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268430971 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272596524 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.271297414 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274064867 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.27385382 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269898527 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269880065 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.269112048 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270587344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.264607613 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26919814 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271208619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270531178 seconds)
  done (took 29.088486738 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.27069153 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.271177298 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.269990427 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.285786315 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.288234876 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.269303699 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.269308584 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.267964258 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.291655774 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.320798017 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.314145557 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.288618458 seconds)
  done (took 16.576548922 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267999588 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269952166 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269457859 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270835722 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270999826 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27025515 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269967052 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269545011 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269821128 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268937882 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269496885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27091651 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271297507 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269187824 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271015098 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271436682 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268791301 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268914382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269916314 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273283094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26831858 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271924787 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270083959 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270637708 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269443209 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270913163 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271556233 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271416178 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273125231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2719418 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27239332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270816309 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272757094 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269899707 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272709313 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270599103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270660947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27545481 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272222897 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270202066 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274127443 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271350667 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272490673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271335271 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273812492 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270862407 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27188206 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270240705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27043274 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274676343 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27162585 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26912061 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274296031 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273612574 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275090969 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273938761 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272401002 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27170715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274069113 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272073014 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270868972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272861458 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269993124 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272136986 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276380506 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272905369 seconds)
  done (took 85.083059483 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27244283 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270146442 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273021899 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273436042 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271781924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272450123 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271029423 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271982859 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272148346 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270161847 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275161222 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272471006 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273575875 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27310005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2713383 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272848034 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270585252 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27377348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27315021 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275444971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271656516 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273326686 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275466904 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272782196 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274319486 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277805055 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272769754 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274023062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274955692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276200134 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272581914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275392899 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275391734 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272808004 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273884543 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273295031 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273383945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273370298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273146002 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278209301 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273754112 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274746597 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273910533 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273728224 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274179196 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274116527 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275030195 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27436651 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2740777 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273847719 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272128945 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274951733 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274799922 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277001147 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274255892 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275476053 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277951695 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275615089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277702021 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277662112 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275426524 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276782737 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28101498 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278622885 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278706659 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277573591 seconds)
  done (took 85.278075918 seconds)
done (took 1760.879254203 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443358439 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.395936575 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.279014936 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.289981245 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.27449235 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.270646915 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.286620242 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.274666846 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.279639262 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.27829428 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.280480868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.467833791 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.274227313 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.274467441 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.277570145 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373666143 seconds)
  done (took 26.19815891 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.304498068 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.286261754 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.390385036 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.293432389 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.305334875 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.451764696 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.333012698 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.282383016 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.439371496 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.3219936 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.270523909 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.301934478 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.280146875 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.273754213 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.295564698 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.454546216 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.515605693 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.270880475 seconds)
  done (took 28.247563552 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.703515078 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.273400077 seconds)
  done (took 5.15663331 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302633344 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.280820106 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.284411565 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.282628791 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.274236588 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.269378001 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.281303084 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.279681614 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.281503055 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.393708731 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.28419165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.293717875 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.299797305 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.284443455 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.282279677 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321145817 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.415934215 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.277099655 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.282537307 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291102683 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.283733646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401742725 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.318290224 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.280842349 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.397799314 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.28084543 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286901164 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.290691206 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.417233921 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.27972081 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.284031851 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.281777014 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.286092746 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.181630547 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.761604534 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.282015418 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.306170189 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292194791 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.279041364 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.474157166 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.282854272 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.292074618 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.277033796 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.740909767 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.434149868 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.397607413 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.298415498 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.280788058 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.283038588 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.347671526 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.284092829 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.28763255 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.326625993 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.097318003 seconds)
  done (took 82.452199941 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.279495325 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.277694492 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456899397 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.293850197 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275207741 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273838754 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.274638487 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.546550181 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.313660435 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277914516 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.599987177 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821941283 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.288779167 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.344572818 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.129386308 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.336177006 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.277308059 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.290590476 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.27553176 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.281489408 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81194977 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288740616 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.273906168 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.440421076 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.317648433 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.7803043 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279951579 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.288569072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.279866978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.275064279 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78470163 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.304732444 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.350452775 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.279104243 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.544378045 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.639883711 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606095479 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.279368283 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324992359 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.278010401 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.289671995 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765446211 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.618753651 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.27546722 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.277892888 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77200557 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.275255445 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.284483737 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.280194358 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530338116 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.278304255 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283815538 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.292058536 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293180148 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.279652255 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360718137 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.352318956 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780760877 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.274873102 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.278111803 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.303547682 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.282582779 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.287201288 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28421019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.28065379 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.6227048 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.427388566 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.285727256 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630692276 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.777116351 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.293167671 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84578181 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.291007578 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.308966854 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.498290056 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288241004 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.277687889 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769303586 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.329249964 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.279231132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.607728765 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.285038197 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.599642063 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.297246598 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28256227 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823816174 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.288429253 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.292058644 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.283723966 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.278863963 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.27945753 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.284741908 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.553405066 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.315695378 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.28375537 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.282218659 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.312311169 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.281652947 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.282344303 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.291914019 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847731558 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.299921839 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.283616254 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285639018 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294242275 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.279386599 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.283763789 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284129116 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548205386 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.283738498 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.285898611 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.287430569 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279284315 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.300902581 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.456557985 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.287559548 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.576140506 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.282313256 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283493744 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.280784416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284727562 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.279714748 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280601962 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.289634481 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.161041292 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.584757658 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.301800442 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.297782358 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287516756 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286161406 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.281918955 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28829802 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.319694661 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.288048267 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031351895 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.299921919 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.290985656 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.285586968 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.289563871 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284864756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.289960141 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28746723 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.571580392 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.549336738 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.431751315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.283926772 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.286496458 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.03327453 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.320653954 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465430673 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303981016 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.284678878 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544281445 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.495433248 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.288446964 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.282398932 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.289355579 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545993725 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.287256364 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598974192 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812602008 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.299168426 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.289142094 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.036621009 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.972292164 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.288946874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.291601043 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.612305833 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.30744792 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288192986 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.28917717 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.289302991 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.300264674 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.290618187 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.297019065 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.289860409 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.288311556 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.334972748 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479857913 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305810398 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.298038283 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782337463 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297272034 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285191261 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.292895698 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.286933893 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.287355059 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.347068047 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.295725806 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.30783494 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.292038653 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.2981653 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836017151 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.286413763 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.28827057 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479815716 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962124158 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.300147879 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290156072 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.303667103 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.182850848 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805052454 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.341488428 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.583129546 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.293774435 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.327777301 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290344967 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.383721523 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808449964 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294121733 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.30977674 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935226154 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.299510834 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.791397572 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.290794288 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.290587709 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882557657 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.303440107 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.288873334 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.287789429 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291579789 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587315922 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.292643968 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.2978624 seconds)
  done (took 486.754267929 seconds)
done (took 629.984354385 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.292945611 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291981752 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.280792091 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.296068689 seconds)
  done (took 10.359505289 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304351212 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.302037277 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.302015542 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.299966269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.302987864 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3007905 seconds)
  done (took 9.010710604 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.293566597 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.295619202 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.293111961 seconds)
  done (took 8.08325344 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.494848079 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.312622986 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.605874389 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.318191658 seconds)
  done (took 8.932846641 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.300058331 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.3022318 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.301469178 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.303840482 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.306225555 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.305390383 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.303784225 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.301761892 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.304213008 seconds)
  done (took 12.925964198 seconds)
done (took 50.510719002 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.995849031 seconds)
    (2/286) benchmarking ("sort", BigInt, false)...
    done (took 2.297944577 seconds)
    (3/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.95165604 seconds)
    (4/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.338981215 seconds)
    (5/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.312141043 seconds)
    (6/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.294238337 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.333821356 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.390750389 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.310513063 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.45098464 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.309822632 seconds)
    (12/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.295847467 seconds)
    (13/286) benchmarking ("sort", Float32, true)...
    done (took 2.003900085 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.37101809 seconds)
    (15/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.387518394 seconds)
    (16/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.307872371 seconds)
    (17/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.28296278 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.42515646 seconds)
    (19/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.343892044 seconds)
    (20/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.365409272 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.407012732 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.616950249 seconds)
    (23/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.04439876 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.316777791 seconds)
    (25/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.462258333 seconds)
    (26/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.32753641 seconds)
    (27/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.333929377 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.318028133 seconds)
    (29/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.436173701 seconds)
    (30/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.314540042 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 1.922196494 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.49022596 seconds)
    (33/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.345441159 seconds)
    (34/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.280199129 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.491123505 seconds)
    (36/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.342580121 seconds)
    (37/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.313212752 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.312196833 seconds)
    (39/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.409159682 seconds)
    (40/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.374252446 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.34775228 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.371139036 seconds)
    (43/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.438901416 seconds)
    (44/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.32547925 seconds)
    (45/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.31448659 seconds)
    (46/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.335947785 seconds)
    (47/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.316936281 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.348926532 seconds)
    (49/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.313118046 seconds)
    (50/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.394583422 seconds)
    (51/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.325636217 seconds)
    (52/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.282855051 seconds)
    (53/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.383947669 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.321256485 seconds)
    (55/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.438732094 seconds)
    (56/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326905246 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.324545983 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.406931856 seconds)
    (59/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.591461826 seconds)
    (60/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.310977469 seconds)
    (61/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.535639238 seconds)
    (62/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.380091055 seconds)
    (63/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.382318343 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.370307834 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.312349215 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.461799747 seconds)
    (67/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.440290884 seconds)
    (68/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.354588358 seconds)
    (69/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.311526118 seconds)
    (70/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.043875892 seconds)
    (71/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.375213348 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.424791986 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.425541904 seconds)
    (74/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.329561129 seconds)
    (75/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.04448731 seconds)
    (76/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.326863869 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 1.48388141 seconds)
    (78/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.316914604 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.311786633 seconds)
    (80/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.351733333 seconds)
    (81/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.516604106 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.007230352 seconds)
    (83/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.356091394 seconds)
    (84/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.315066169 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.501131659 seconds)
    (86/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.349952951 seconds)
    (87/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.003470409 seconds)
    (88/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.351404768 seconds)
    (89/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.324063361 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.962263701 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.313690883 seconds)
    (92/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.108799606 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.301758128 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.042036312 seconds)
    (95/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.055125113 seconds)
    (96/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.155958441 seconds)
    (97/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.40169053 seconds)
    (98/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.296250947 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.32811842 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.286053152 seconds)
    (101/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.322376328 seconds)
    (102/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.418659105 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.449425076 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.411232507 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.316593782 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.352910348 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.479970764 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.300190665 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.166315601 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 1.356784473 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.310353728 seconds)
    (112/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.956356932 seconds)
    (113/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.384546207 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.335500875 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.420085745 seconds)
    (116/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.313882329 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.388365116 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.339133818 seconds)
    (119/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.448351598 seconds)
    (120/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.317150403 seconds)
    (121/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.321048833 seconds)
    (122/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.328810974 seconds)
    (123/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.381804728 seconds)
    (124/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.953937298 seconds)
    (125/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.308412153 seconds)
    (126/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.319134723 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.314103994 seconds)
    (128/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.31340507 seconds)
    (129/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.381633101 seconds)
    (130/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.327061375 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.37831395 seconds)
    (132/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.173667454 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.499561506 seconds)
    (134/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.320707355 seconds)
    (135/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.287892207 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.408569829 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.318412068 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.291526412 seconds)
    (139/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.023302552 seconds)
    (140/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.956216 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.315727182 seconds)
    (142/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.3134498 seconds)
    (143/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.507813829 seconds)
    (144/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.12548629 seconds)
    (145/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.297515978 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.361215421 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.386018221 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.32058506 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.52148009 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.357965191 seconds)
    (151/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.327093659 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.463475369 seconds)
    (153/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.388422548 seconds)
    (154/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.334328953 seconds)
    (155/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.317475481 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.956972814 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.438950223 seconds)
    (158/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.291299767 seconds)
    (159/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.374148205 seconds)
    (160/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.308735 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.377405325 seconds)
    (162/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.050808859 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.33868795 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.320171029 seconds)
    (165/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.658488908 seconds)
    (166/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.512887498 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.329313691 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314541856 seconds)
    (169/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.319128832 seconds)
    (170/286) benchmarking ("sort", Float64, false)...
    done (took 1.500623081 seconds)
    (171/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.496328982 seconds)
    (172/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.985554502 seconds)
    (173/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.322836581 seconds)
    (174/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.627835266 seconds)
    (175/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.324214509 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 1.677293671 seconds)
    (177/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.392896202 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.304692575 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.320978055 seconds)
    (180/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.445190041 seconds)
    (181/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.294482989 seconds)
    (182/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.361922756 seconds)
    (183/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.309051145 seconds)
    (184/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.416177556 seconds)
    (185/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.323180153 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.293932416 seconds)
    (187/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.451490571 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.332960804 seconds)
    (189/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.451418391 seconds)
    (190/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.403182554 seconds)
    (191/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324391214 seconds)
    (192/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.316813831 seconds)
    (193/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.317694261 seconds)
    (194/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.316035151 seconds)
    (195/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.326121594 seconds)
    (196/286) benchmarking ("sort", Float32, false)...
    done (took 1.4734015 seconds)
    (197/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.338694381 seconds)
    (198/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.294802546 seconds)
    (199/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.969465595 seconds)
    (200/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.388266253 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.383259275 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.395436085 seconds)
    (203/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.32034889 seconds)
    (204/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.05732593 seconds)
    (205/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.317077365 seconds)
    (206/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.404507196 seconds)
    (207/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.361705873 seconds)
    (208/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.061988738 seconds)
    (209/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.470967108 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.421095527 seconds)
    (211/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.418307439 seconds)
    (212/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.487474231 seconds)
    (213/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.328971454 seconds)
    (214/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.480920427 seconds)
    (215/286) benchmarking ("sort", BigInt, true)...
    done (took 2.32540818 seconds)
    (216/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.305372671 seconds)
    (217/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.179795086 seconds)
    (218/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.406913138 seconds)
    (219/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.414310003 seconds)
    (220/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.338033517 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.374803875 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.335686164 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.308866859 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.364446977 seconds)
    (225/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.435924101 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.405515375 seconds)
    (227/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.451702935 seconds)
    (228/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.331127671 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.348979627 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.476876963 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.396894188 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.400108158 seconds)
    (233/286) benchmarking ("sort", Int8, true)...
    done (took 1.840957254 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.414553551 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.349765216 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.325738854 seconds)
    (237/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.492859717 seconds)
    (238/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.309013145 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.351202668 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.322237099 seconds)
    (241/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.33862724 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.327708733 seconds)
    (243/286) benchmarking ("sort", Int8, false)...
    done (took 1.454569682 seconds)
    (244/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.329275456 seconds)
    (245/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.332652726 seconds)
    (246/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.408730047 seconds)
    (247/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.349930494 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.325936648 seconds)
    (249/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.412276707 seconds)
    (250/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.380806206 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.329010899 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.409787879 seconds)
    (253/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.479997026 seconds)
    (254/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.347773124 seconds)
    (255/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.332236773 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.312055318 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.405000879 seconds)
    (258/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.35208903 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.333635977 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.337043445 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.41777349 seconds)
    (262/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.297658026 seconds)
    (263/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.435652092 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.510620855 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.387111652 seconds)
    (266/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.336017909 seconds)
    (267/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.330306873 seconds)
    (268/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.337766941 seconds)
    (269/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.454720384 seconds)
    (270/286) benchmarking ("sort", Float64, true)...
    done (took 2.106414109 seconds)
    (271/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.323903889 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.421381694 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.321818944 seconds)
    (274/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.313068205 seconds)
    (275/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.399812998 seconds)
    (276/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.335962462 seconds)
    (277/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.445850243 seconds)
    (278/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.457779149 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.47037648 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.316929637 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.398561648 seconds)
    (282/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.511159452 seconds)
    (283/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.458405638 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.308845738 seconds)
    (285/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.438697402 seconds)
    (286/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.362204008 seconds)
  done (took 463.577580989 seconds)
done (took 464.776585689 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360122887 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370513932 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.326317651 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360629893 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.438648465 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.503161109 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.33633878 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.365427699 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.374328829 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.376035158 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.331510464 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.501916174 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.326140904 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.32637202 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.327367024 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370342114 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.327929555 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.322348945 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.34570019 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.364109047 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.340837332 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.333731735 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.376897615 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.500696004 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331192627 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.328000976 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.32947401 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.346982427 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.439540428 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.330775769 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.330458756 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.338064555 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.326651747 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.328669855 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.320858177 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.347380599 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.33633526 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.336583779 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36309252 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.43752076 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.314403864 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.330510382 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.32817685 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.329973194 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.328275818 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.368280742 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.329110093 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.386916053 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372699332 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372339462 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.322787557 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.338736536 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.336576812 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.333287465 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340642249 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330235544 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.388841415 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376582688 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.346104785 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377425886 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.317327002 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.330715317 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368304547 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.341811278 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.338063413 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33076699 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.322342456 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.368303897 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.318860155 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.333823254 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.330818282 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.331821813 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.329927393 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.346489843 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.360565744 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.320495222 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.340145319 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.329210834 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.338326654 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.328835238 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378772824 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373586109 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.380877133 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331001692 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372022863 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.507111257 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.342952868 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.329045501 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.36834987 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.348473785 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.338549205 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.342880361 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366083359 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.332041982 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377657549 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.390913984 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.340255621 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.344070512 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.383706086 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.344014017 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.318589264 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3737945 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.32948118 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.331939073 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.33142157 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.453334904 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.322153797 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.330001227 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.366886965 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.381899763 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.393164884 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.322954907 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.337505972 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379008602 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.341415928 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.394874952 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.334621193 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.326627636 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.329670758 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.451309718 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.33668206 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.338924488 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379318536 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.393890417 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.334850713 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.321006354 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.329786533 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375539334 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.455636003 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344872744 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.442735666 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.332158506 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.338120349 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.366277543 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379981648 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.365049721 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.398444465 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380143939 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.352459444 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.335676854 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.342764326 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.346816443 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.33502484 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.392363625 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.333082196 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.36795211 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3779706 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376516007 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.367971659 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.456709105 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.342023029 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.327984628 seconds)
done (took 223.4918417 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.397631337 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.3326241 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.438769461 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.33620375 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.43670722 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.431128148 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329360757 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331103305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.328346769 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.714952452 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.333255886 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.330437776 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.332164772 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331208198 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.419672694 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.336549138 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.332252039 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.684688591 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.334781118 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.405315568 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.336360593 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.332909267 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.338034674 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.728137207 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.335701069 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.329214977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.405536916 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.337523836 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.680212753 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.331896235 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.33489305 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.688775965 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.427137511 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.354111562 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344527947 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341148398 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.437012337 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.34750042 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.418121952 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.419988227 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445268502 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.373805598 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.330943443 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.332691556 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.33651813 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.337350594 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.334260416 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.361467146 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.333460418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.33460746 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.679613615 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.346099869 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333265893 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334173685 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334344667 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.362250132 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.33717676 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.337732352 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.428605207 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.338064595 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.401901596 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.718999951 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.77162016 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.339577524 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.33647965 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.333932748 seconds)
  done (took 104.668119559 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.403036699 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414851311 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.449295025 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.350638754 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.388622089 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.451906857 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.351894057 seconds)
  done (took 11.040242946 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.345825319 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338241354 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389185624 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.389056874 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.334533496 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.554252941 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338544732 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.350479942 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336507476 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.414671818 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34314365 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338948898 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345535844 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.335446736 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387679879 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.351653392 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.455166446 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.343549342 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.340055866 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.492730467 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336996737 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345931048 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.418430372 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.352555158 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.342666174 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349985518 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.301230139 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341403914 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336964785 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.340857199 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33913667 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.449440799 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342750766 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.33503802 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337195152 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497619645 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339131035 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339041362 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.338991796 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.33995258 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.340156774 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.341124577 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.341475525 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.334842184 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.341974032 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.363902951 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.339267791 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.343070113 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342022606 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.340861348 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420231164 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341589865 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339184741 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.339008705 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419322091 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347734055 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.341004653 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.340429839 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342371241 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339234997 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.498795808 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.390701558 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.3429733 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.390581508 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345213392 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347982427 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.344395709 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.343033764 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43461312 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.343026886 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389904054 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.339211165 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.566174434 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368399769 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34602076 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.343532668 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348273911 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339429758 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.340091172 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.34861238 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.341969771 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.34547055 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.348911116 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341435771 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340250507 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.525621387 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.499171876 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341371398 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353611874 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.350259046 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.345075657 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.422568541 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.346730142 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.341615526 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39610569 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457351291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424417464 seconds)
  done (took 138.914582399 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.347687464 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.350604237 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.345448739 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.367227269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.346337167 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.346085395 seconds)
  done (took 9.3394109 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.346687763 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.347929518 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344915671 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.344902241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.344415174 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.347865153 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.345931146 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348478664 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.350795212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343827051 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.344276871 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.34480915 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.346864408 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.346370145 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.343937594 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.34482248 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.346696017 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342785284 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.344361554 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343982167 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.344486066 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.347869791 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34591125 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.347546147 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.351717249 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.346182772 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353473274 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.346247335 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.348271159 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35580407 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.364746191 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.348432563 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348852498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351925282 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.352896813 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.348674463 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351094094 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.349946759 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.345159109 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.347389977 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.348532637 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348735549 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.349815386 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.347226089 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.35012145 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355013945 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.352408472 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357309339 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.348788276 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35177539 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.347795801 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.350354247 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.349936711 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.349180891 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350651749 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364639974 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.354184987 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.351752529 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.348573764 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.351176865 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.351364284 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.349845197 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350844277 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.352046789 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.346099557 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.350100962 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.350935169 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354288693 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352071096 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.347658368 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.349321168 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.348699828 seconds)
  done (took 99.380969085 seconds)
done (took 364.567957068 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.789322599 seconds)
  done (took 4.030075954 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.432043977 seconds)
  done (took 3.675084139 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.912451452 seconds)
  done (took 22.161045355 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.396581476 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.357411512 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.346355019 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.347611302 seconds)
  done (took 10.689792627 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.604015385 seconds)
  done (took 3.846031313 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.353933441 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.341597198 seconds)
  done (took 5.937759163 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.652236294 seconds)
  done (took 3.895366106 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.738674864 seconds)
  done (took 3.985094406 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.369134621 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.359052675 seconds)
  done (took 5.977951659 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.330546079 seconds)
  done (took 3.573769794 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.886053412 seconds)
  done (took 17.127692119 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.349440895 seconds)
  done (took 3.594756598 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.371814982 seconds)
  done (took 3.614322009 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.833850256 seconds)
  done (took 6.076458569 seconds)
done (took 99.426741631 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.342047439 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.346617947 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.343575525 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.343764401 seconds)
  done (took 10.617116526 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.402555098 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403875575 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.407493408 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.401532163 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.400267441 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403577535 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.377206025 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.379800822 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.403499309 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.403432504 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.406727505 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402286858 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.402921328 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379427215 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.402677346 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.406895243 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405692265 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404956596 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.379021056 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.405009049 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.353008827 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.404546722 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.404060829 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351401881 seconds)
  done (took 34.734669075 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.870484478 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425367238 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.505101183 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.405044156 seconds)
  done (took 7.446376363 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.429407096 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.431130181 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445015062 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.488169857 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.495859699 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450525709 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382103142 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.375379087 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.360241378 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.431113447 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.480763434 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.417871758 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.511374678 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.354660798 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.561062994 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353442968 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.355145341 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.433380348 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482830728 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.5010989 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.356005265 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.431032203 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.433288377 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.420300165 seconds)
  done (took 35.621652744 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.360331223 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.369365738 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.353981756 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.368267362 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.353623712 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.354874019 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.352915236 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.359896601 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.356153526 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.359758011 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.358509874 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.37121244 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.359658112 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352104487 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.362798132 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.35714141 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.36270098 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.359534367 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.354379498 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.360464329 seconds)
  done (took 28.432617265 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.346862885 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.347333044 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698254425 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.604917137 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.350502991 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.349204226 seconds)
  done (took 13.942738827 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.423946701 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.574184999 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353388927 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.701832492 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.782059578 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.35479494 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.356040705 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.603575054 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.905912852 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879868723 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.412460597 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.424943001 seconds)
  done (took 20.019787795 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.364281236 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.350211511 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.355021566 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.3662809 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.409886196 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.373292049 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.364594745 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.349575716 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40961033 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.428831856 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.37368013 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.412439757 seconds)
  done (took 21.806602988 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447877115 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352189917 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354546866 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351642881 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351698733 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19428964 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351027908 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085262676 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.373713352 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624217675 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352553484 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449006206 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604922591 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353084539 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351818138 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.338021338 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58301325 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837149876 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348590448 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3534716 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387007177 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349844172 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353445655 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559161654 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355152031 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353312939 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.614752415 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354760466 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628899873 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365172026 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365086617 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35646925 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630630208 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002233812 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471465098 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561789008 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353988376 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354307307 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.338340186 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.355124542 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355436512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355065903 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367245983 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353399661 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352926989 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353413137 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095596172 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.376247614 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.353433389 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358376488 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606869695 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455723374 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.360520154 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357064985 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375176383 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355731584 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.359678994 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450450921 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938862016 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36627618 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356040022 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.356029876 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366502499 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362876203 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961069415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.361614076 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.362532069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359921975 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356220868 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356793692 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3746559 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354460674 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.376579816 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35756282 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06852912 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357222265 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358023365 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899984634 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356415459 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.356080807 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592054442 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355220888 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357958644 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.357188769 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354762647 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062424064 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365317227 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.342472311 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399007454 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101484629 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585710545 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378048404 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390633148 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585015672 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.34482113 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358949691 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.368834758 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361286103 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377086819 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094286094 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375826938 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360940376 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619616776 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.572501293 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357964784 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.361071072 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841162421 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374709459 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.391762107 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360167354 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579638764 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.935354483 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374303762 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374634654 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375922954 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35929537 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100057965 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361508738 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.461912 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359297983 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62603809 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.143307845 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361943711 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431093349 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364563257 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360682072 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368670326 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365477453 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360913741 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.560177242 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389750422 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.372710443 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.361666237 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361008595 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.360804816 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36548143 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.36255976 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585139065 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362319529 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638847284 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361189559 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361637845 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357031125 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.581927344 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.363712835 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.699145977 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624159298 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374666211 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377073324 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374978104 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383495749 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468571394 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384520888 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.375444484 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621231117 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.367072889 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367771198 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374841912 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365063294 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370086976 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.370172335 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372873373 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939999878 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345516824 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366926856 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25437093 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.377227026 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429802621 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370876658 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575548727 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.362332575 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364172907 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.386486809 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.368841254 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591010372 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371718062 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.376963526 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439377694 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.841998857 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957388799 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377221838 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.364894226 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.362579817 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.365079972 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367221946 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367640819 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364228489 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574114188 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380090045 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384447167 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.947409409 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370603672 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374150253 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.372983685 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378602556 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.37035085 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367562845 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.379043503 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379169322 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373220357 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.37788631 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510243156 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.382333945 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367053867 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884520529 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371966999 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36659731 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366459491 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402221318 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373941836 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247480684 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628674654 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377185535 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618991647 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373600115 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.384122704 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.366319329 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366226261 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391381021 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.387131939 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391092194 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.377589609 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374490098 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369039498 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938930256 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101267991 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896470813 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382003032 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.373477756 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367660581 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103118852 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383879256 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372188544 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597253125 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127815428 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384824963 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846786182 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.390612022 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116486879 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620980509 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598836619 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380029339 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.370114439 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643452355 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5792099 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404532931 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373844838 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366634566 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.349432674 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942851539 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3909583 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452544138 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124472773 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385014917 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384409204 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.400872768 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381258383 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769242564 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386109649 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368596968 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374976057 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371111566 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251168576 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377535696 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371789371 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984314812 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373121625 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.848942319 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388107725 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.580174898 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.381647931 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.37412072 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.38037525 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.377612436 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.627451752 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627183299 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370097871 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36862644 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907278607 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.244490441 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375020857 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371408314 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111792525 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38529986 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652480622 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.381448345 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.366935851 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373527985 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372340737 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371534058 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.369346846 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378879146 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352816654 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861730899 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.388931437 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374354652 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403873008 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373345686 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630170784 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38708272 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95331434 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604402477 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374000067 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397809109 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.377405774 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375327451 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.362749204 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373598123 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37067418 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427127125 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59901212 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390529503 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.360470288 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383711724 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584411765 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372930558 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381541749 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613106004 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.3723238 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.376989646 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125556087 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404964207 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378718956 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376307033 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380015904 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395244291 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446661776 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584601514 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.38823716 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386060288 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771927404 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406162973 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375192638 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.386996332 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470442835 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376651795 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.374087465 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.148903188 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957725353 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12411341 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.960086033 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632658876 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376811573 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382567613 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377004484 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535718051 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378450322 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649769341 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378471307 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.371712392 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400359399 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378907072 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386952352 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586996672 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652654552 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378628032 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38862794 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377125402 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.374974448 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387210717 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.587679354 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872380477 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924394899 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376817185 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38592054 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121171256 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667264139 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379422032 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375355311 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376410042 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.383833871 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414210369 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.384361622 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392835792 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522671125 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634602906 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038461458 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.40779951 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.406353974 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.152914083 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37766213 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650023969 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375127729 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584353342 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960762109 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.075359966 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645982197 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451257184 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590005991 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.379910278 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543838744 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.381661674 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379074116 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380133872 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377872173 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.376694069 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391074504 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970756618 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644423583 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.385843471 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.385502609 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410148706 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.389877428 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603570099 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097889988 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605694794 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390859341 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385805692 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378933017 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965910716 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641007983 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383047627 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.381615829 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618560366 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382872647 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403685357 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.901624504 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.379264358 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933688841 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.351262051 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401049461 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392799323 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088697306 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964297729 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.384369193 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879023331 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379176743 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39425347 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656360311 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.389118676 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389060104 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658086735 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.386748048 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388757534 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596585647 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.964359057 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139737321 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.389362759 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4069322 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.385363703 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384877157 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391588323 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382575167 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381962292 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.79614019 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402761663 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384310691 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391297743 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.386191272 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396231862 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.382065388 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382921653 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385531429 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.386049901 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.370043865 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399445457 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477645321 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965638958 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40151571 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.075337278 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.713535588 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640941755 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397821879 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.370694242 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.387567291 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384600732 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383346343 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382485315 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381787455 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938727031 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.394377762 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.396733948 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387202976 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.384502584 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597547719 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394339177 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601315933 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400535526 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401370731 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.368525145 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388844075 seconds)
  done (took 974.029423474 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.387953201 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.394119676 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.415374415 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.457788756 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.404280532 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482772372 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.434819128 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.507816146 seconds)
  done (took 20.764741585 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.385149176 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.395710609 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.401025242 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.39479513 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.388333025 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.853574316 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.403422675 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.397805684 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.4051629 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.387013056 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.387472795 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.371796124 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.399867397 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.402925763 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.380367207 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.39721546 seconds)
  done (took 33.037647535 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.313062582 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.510669501 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.234245116 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.41243501 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.427236817 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.394157226 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.593803073 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.400999186 seconds)
  done (took 26.570828161 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.397695672 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.401050997 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.399112471 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.398210529 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401478394 seconds)
  done (took 8.278198334 seconds)
done (took 1236.544872757 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.39096303 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.396006092 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.392965269 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.395831247 seconds)
  done (took 6.855459515 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.373584707 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.376104929 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.376555231 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.389006919 seconds)
  done (took 9.798624442 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.078027987 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.018557727 seconds)
  done (took 5.377023681 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.871353185 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.86730485 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.866347874 seconds)
  done (took 6.887411022 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682583316 seconds)
  done (took 2.966651523 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.283735688 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.261401 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.056180175 seconds)
  done (took 7.883936337 seconds)
done (took 41.052348833 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393932718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.638298307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.609594121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.40092268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.552679437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.546562572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.132579261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389141584 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395197196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390523099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393950735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.550509043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.114238467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.640993227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.111709621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.638050353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.556896998 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.39013432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.391553794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.404204132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.126761656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396196091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395224019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.389499975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.556824296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.539156635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401456627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.633932836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389064587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.388396687 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.540226908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392613431 seconds)
  done (took 83.072808217 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39019636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411183985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.389621936 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.424301067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.402394544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.408136395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.391553326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.388232153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.387786427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.3932724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403137945 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.390393457 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.389958059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.388861976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.402258564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.390658038 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.402557555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.389040183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400072145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.387907044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.391154739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.389310628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.388616599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.389251975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393437124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.389638239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.407362032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.391054811 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391788415 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.391685802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.391267241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.421976163 seconds)
  done (took 77.955257724 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.398593142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.395793104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391851972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.394987676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39031125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.410309347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.390869913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401900173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394792549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392580379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.387871975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.401403423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.391805137 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.390761542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392957381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.392925078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.392820666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.401656731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.394779362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392173788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.409208296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394374077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413847164 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.390909391 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393135013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.393910365 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.402249699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.399216288 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.393397187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405714329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418327693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.396118967 seconds)
  done (took 77.999988548 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.676768813 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.404671417 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.406658798 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.397303766 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.402865295 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.404478798 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.399659558 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.678227868 seconds)
  done (took 15.062897693 seconds)
done (took 255.373272042 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.408991276 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.407757401 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.603308973 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.425762658 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.394670627 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.446084509 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424723097 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.623562586 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.377401222 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.637922151 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.414732244 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.422925831 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.394694082 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.422420179 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.681304284 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.550532943 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.335280274 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.39794782 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.748502869 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.41474324 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.683353184 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.394245444 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.676829676 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.366114167 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.426299395 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.398104938 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.397101159 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.319064579 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.438901962 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.747456073 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.402937416 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.400035858 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498526527 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.504795068 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.616833996 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.559342345 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.396860394 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.48280151 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.62484514 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.402492913 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.400405406 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.175069462 seconds)
  done (took 84.137372815 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.404388469 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.523310939 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.404995258 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.404131674 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.40967907 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.524025732 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.501484157 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.408119699 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.404515512 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.405952777 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.408017491 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.40594542 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.409412458 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.407778526 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.407936853 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.409262809 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.406147218 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.410740531 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.410795657 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.452592323 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.52774273 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.427883646 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.401553162 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.406485604 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.512727551 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.538422961 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.4091524 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.397223309 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.448845151 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.406906983 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.409039057 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.454890286 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.410718973 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.408792395 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.524241871 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.51061785 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.4272132 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.406402204 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.524747652 seconds)
  done (took 57.364484233 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.412104793 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.657829688 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.837721935 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416040517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410681403 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.41777796 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485825306 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.410404045 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.415408863 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412764504 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.562923943 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.413923819 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446786576 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.859796274 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414359271 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410760488 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.415254103 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.41258712 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.667559661 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421414244 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.506221064 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.411989083 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.489157471 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.42273282 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.43259388 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412676955 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415797262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.978141282 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.414154103 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.56257861 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.191767912 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.482124839 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.955938085 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.84629081 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.18992444 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.411153034 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.413540612 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.598284587 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.41475461 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412321447 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.488926559 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.413661797 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.845421025 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.064992228 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.429720441 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41300435 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.006016377 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.568668613 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.651587487 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420492915 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.87640467 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.41459176 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415409038 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.41562381 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.651694842 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.412070651 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410240035 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.020302257 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.431711013 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.491704962 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.413136654 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.414131671 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.665899386 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.409255078 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.662568088 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.417246845 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421419783 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431879198 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.844119055 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.418208003 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.081230433 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.42895035 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.414263671 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.566827814 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.664051587 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.036136062 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.427954223 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.669266948 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969087917 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.487342866 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.420708548 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.978450679 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.489701207 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.418875083 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.417042232 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414804482 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.416898717 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467193486 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.486961408 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.017842676 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.078769489 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.03809904 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.502358997 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.424257683 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.417291048 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.027128447 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.423608943 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.416643794 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.849193314 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.077046585 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.428330273 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.425452697 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.089438387 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.431696936 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.494294836 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.420669887 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.859507125 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.414854153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.468528481 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416213006 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.424240314 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.437757711 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.494557915 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.420761173 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.417710566 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.070041535 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.590787335 seconds)
  done (took 185.9384857 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.409253074 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.405781764 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.410721694 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.420988933 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.411982116 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425391236 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410538954 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.415492988 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417470604 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.409010978 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.411169617 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.414862939 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.414748349 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.420132532 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.421029818 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.419529169 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.41118587 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.413825932 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.414725546 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.409194601 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.413006595 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.416065488 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.415189844 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.405945335 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.414786395 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.412524061 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.421476922 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.413431526 seconds)
  done (took 64.903978393 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.418943641 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.969545297 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.417706335 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.547721507 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.441017983 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.418305638 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.547272174 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.475554188 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.424750283 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416456212 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.417638329 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.716696131 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.416106348 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.922310444 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.601778205 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.545548587 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.919547049 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.434203241 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417244645 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.419549291 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.550426122 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427683786 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.718591134 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.973777839 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.419386973 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.972631188 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.40892538 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.422166067 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42251795 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.974937404 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.419957208 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.717705804 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.494444751 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.474664075 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.980159791 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.923234285 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.938115107 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.560629761 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.424405574 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419987923 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.419498874 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.410798625 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975340965 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.418450879 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42624485 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.968440891 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.43368449 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.424910683 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.42840455 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.423715966 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479726407 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.482835761 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.721670064 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.052985885 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.491811099 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.43435776 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.549924979 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.777788048 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.425475537 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.924951263 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.424115417 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.976140612 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.437848766 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414077338 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.419816476 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428450906 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.566822973 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.548665265 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.929448594 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.43665073 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.92599324 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.580473742 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.42361803 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.42117085 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.425495498 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.981642118 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.930872825 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.582301225 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.556125627 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614500032 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.418303417 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.425853583 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.413521771 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.49850053 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.423212102 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981197712 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.944198179 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.444413586 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425028799 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.42598636 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.427622681 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.59385425 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.998106895 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.494963968 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.928473367 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.743112887 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.72204068 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.4255819 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.484517992 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.440599322 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.791870169 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.423082423 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.483417642 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.858083469 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.728396866 seconds)
  done (took 168.475751155 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.663303615 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.441013632 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.518837012 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.572862962 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.0305276 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.006849812 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.42953164 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546675986 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.533481827 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.683068335 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.423380072 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.523802593 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.63832091 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.505061368 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.135521461 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.49382041 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.524391059 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575151831 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.570189855 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.426139262 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.089668343 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.717537302 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.613630814 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.443949017 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.528795716 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.182176156 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.004923265 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.984102246 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.598085807 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.423255587 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.944155669 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.427749562 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.362404516 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.08540025 seconds)
  done (took 65.959482435 seconds)
done (took 628.069358945 seconds)
SAVING RESULT...
DONE!
