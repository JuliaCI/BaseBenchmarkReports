cset: moving following pidspec: 31020
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.910542749 seconds)
loading group "string"... done (took 0.550885178 seconds)
loading group "linalg"... done (took 8.935074958 seconds)
loading group "parallel"... done (took 0.171637906 seconds)
loading group "find"... done (took 1.434043306 seconds)
loading group "tuple"... done (took 2.113100844 seconds)
loading group "dates"... done (took 1.390374183 seconds)
loading group "micro"... done (took 0.219184085 seconds)
loading group "io"... done (took 0.63807132 seconds)
loading group "scalar"... done (took 44.428423301 seconds)
loading group "sparse"... done (took 13.673031274 seconds)
loading group "broadcast"... done (took 1.089284782 seconds)
loading group "union"... done (took 15.169018186 seconds)
loading group "simd"... done (took 5.109840263 seconds)
loading group "random"... done (took 10.29463552 seconds)
loading group "problem"... done (took 2.192450947 seconds)
loading group "array"... done (took 26.105196887 seconds)
loading group "misc"... done (took 1.109699285 seconds)
loading group "sort"... done (took 3.753265505 seconds)
loading group "collection"... done (took 22.240794205 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.629071493 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119918933 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.168215294 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.195375412 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195863802 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159881753 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163600376 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.560097877 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.007573833 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.219264116 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.147203768 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.555547998 seconds)
done (took 5.866844119 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.281469301 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.437609451 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113607497 seconds)
  done (took 1.230093858 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095063516 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177702812 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095598803 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.114024093 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.11465822 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11336494 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096943211 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113809393 seconds)
  done (took 1.503439972 seconds)
done (took 3.791785197 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.484658291 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.88808009 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.524858322 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.130982301 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.159563692 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148976817 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320946756 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.164345563 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12180278 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.100674362 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.18898601 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.384202616 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.491220045 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.001736841 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097411352 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129487763 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.088001739 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.753818583 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080510981 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.135167721 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530805253 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115804374 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119370289 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142124436 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192115251 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132214323 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.180982588 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111120087 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.716331071 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106165369 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.19186579 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100225735 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163829187 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.252663258 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096509947 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093728728 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.720932145 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191081936 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11401837 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102866899 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.722817062 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082144544 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195535691 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.117462093 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110668589 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193201289 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116353298 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080040169 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105832677 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.110723131 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175185894 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.501632574 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108516606 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.148107471 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110142312 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.741888955 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098180232 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159341386 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142297798 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10135835 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.102227355 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109254351 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171619063 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111662356 seconds)
  done (took 20.165244077 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118854019 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142750193 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095686836 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140419604 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141470337 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098295532 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084014331 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09700923 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128414424 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189291572 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.123514799 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144459461 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095554857 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082156027 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122052757 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254271543 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108632462 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12544181 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083362815 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110473576 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144663635 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0970173 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110966157 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110933135 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171183014 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207004976 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111992116 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127693914 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097446431 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102853813 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145990243 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.165968392 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07621854 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095992323 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185920594 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120890156 seconds)
  done (took 5.250761877 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202736151 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117593799 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193950381 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182002913 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149711049 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169716315 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120765419 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270746291 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.201766428 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183947276 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118517221 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115948398 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078988113 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099924818 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078714216 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.718006215 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185807481 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155456536 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.130076273 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106328474 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086025466 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.730030584 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105140424 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085088265 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107140392 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075100288 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.139030973 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.17900855 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105950757 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.318787748 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124009135 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092167084 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139251682 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21797737 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120290595 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147174819 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106195851 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085273636 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102801762 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224901454 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113486616 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080012186 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131063969 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135989619 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123798204 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104399125 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.116165577 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.231959286 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104315745 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122832879 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.110384951 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202591904 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.100557068 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10283542 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.364736203 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120149534 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086678057 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101447928 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.301374154 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137079301 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086046188 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079749916 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10758768 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098844189 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.758047707 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093957858 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.240488535 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099997602 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162194189 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103917561 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110603382 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088691036 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10670308 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105015779 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.101660336 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080295595 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.101386673 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082504867 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106013691 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.134486801 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102040048 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10629424 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081378646 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16825083 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122111167 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085262081 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122387873 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128757616 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089008662 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099859806 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116013738 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104791196 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084869343 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.151423851 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109394887 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118592534 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104462098 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130406614 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101747414 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19803973 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083437854 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12906771 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104215367 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116246725 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126643688 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101564828 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087371418 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099523758 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082169616 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166435108 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084232175 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082066413 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105822571 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114871888 seconds)
  done (took 25.245411056 seconds)
done (took 51.339328156 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.471733918 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100830217 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.119219989 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.120456552 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.118980479 seconds)
  done (took 1.686387964 seconds)
done (took 2.414412584 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.339119589 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197679192 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102214897 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.203648 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089481527 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.210595457 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167051304 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119607905 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201339461 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101761812 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179406663 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101472312 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089821203 seconds)
  done (took 2.860678842 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095637844 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122017045 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083940734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113925687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077722699 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11283916 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094662377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.140874773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092599032 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10582148 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078021881 seconds)
  done (took 1.843766909 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09213584 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115406849 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084079903 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110548716 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078094672 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091737779 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111163212 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120232365 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093109751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106863682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078562713 seconds)
  done (took 1.81031855 seconds)
done (took 7.233675549 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.072923514 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.587863703 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.12234453 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.171074603 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343831324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216543439 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.539813754 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138065578 seconds)
  done (took 12.110470272 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.132473265 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100443544 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08293098 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102361763 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084955875 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105600117 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085026135 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100229164 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085726356 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10423879 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082684403 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100970305 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083104599 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103307784 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085035849 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103516007 seconds)
  done (took 2.331848412 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119556415 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118404341 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106499444 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112669801 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088055692 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106892674 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09004066 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106536653 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085639125 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105444046 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111400507 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.093363778 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109370345 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086571354 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107319077 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112874936 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087373868 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107407221 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090834448 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107939099 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093524577 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105558439 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109922366 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.094167818 seconds)
  done (took 3.294540655 seconds)
done (took 18.465598269 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172309549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086658526 seconds)
  done (took 0.988802297 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102823096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123148095 seconds)
  done (took 0.962814399 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107917167 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099699649 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141054139 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120610122 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086036785 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102235803 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117621862 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103233448 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084728494 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.103651717 seconds)
  done (took 1.80396929 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087086133 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104109218 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.093288993 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.124619987 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113844556 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.086582683 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.107281756 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089896316 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108459734 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083431941 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109710276 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121619887 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092045953 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12414491 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090212345 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.109440283 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111782043 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.089332844 seconds)
  done (took 2.585420906 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081766487 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08407874 seconds)
  done (took 0.903827933 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084354698 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09955194 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086695705 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103650602 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082512397 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.100330409 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08279467 seconds)
  done (took 1.378365869 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.518567677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261133247 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340449317 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099788554 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.158674527 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.378977445 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.140452948 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.119141021 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.119326584 seconds)
  done (took 2.918842151 seconds)
done (took 12.279026035 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093286874 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.192685284 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.680013139 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120632096 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079206163 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162926344 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.272884304 seconds)
done (took 2.341855512 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360225111 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.126804943 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091970832 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083942918 seconds)
  done (took 1.398711623 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080129036 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10635061 seconds)
  done (took 0.929304186 seconds)
done (took 3.075065014 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079843996 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080038257 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.117389695 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099807487 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082203659 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099634735 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078675743 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081349874 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101109747 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082436546 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097778835 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082587835 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.100198885 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082319501 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.100464844 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079301537 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079032507 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099596393 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078945273 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097458667 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079180356 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099840559 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079496406 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079408221 seconds)
  done (took 2.936557701 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100293535 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100527373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087929332 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.106939067 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086318064 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10707295 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10709418 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083037009 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106879414 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.085326288 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1052062 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086760617 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102625153 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086576614 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103738356 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105320808 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089129641 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101063584 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085073726 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104833407 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.088225815 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101911668 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086787311 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106816782 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105274905 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08667817 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103478416 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083359596 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108191015 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087848565 seconds)
  done (took 3.646739484 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089083551 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077637279 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.098575984 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.092383848 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.099245774 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083725862 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.097760478 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080429744 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099970401 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.079741389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100350596 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.079866976 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09821498 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081500472 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080667069 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.107253749 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118329056 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08032605 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079727646 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100406912 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085511969 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098766798 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084228918 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.098431064 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079922069 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.099165631 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081175313 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080575697 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099691289 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079970481 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.104927995 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087335341 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098336102 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093981082 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105607813 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079681784 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.107987255 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079732056 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100255563 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080285078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098132986 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.08038789 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080484227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111271916 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083172076 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099039462 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080177366 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100188604 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081083044 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102612924 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08033212 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099035935 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083341734 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100560348 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086416739 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097526081 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08160258 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0800893 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10057837 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080577559 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.099057139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0800163 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.105709713 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080542415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124056342 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092878485 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099087568 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082491163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103552828 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088578941 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10103385 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099792866 seconds)
  done (took 7.366031172 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083078208 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109118963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082678607 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101207464 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079683646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080433651 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107022159 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099289669 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083080831 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119186111 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081486568 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10105158 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0831775 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104037684 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081163346 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101464225 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.092578885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097563264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081406799 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103033174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082253239 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106794446 seconds)
  done (took 2.816412557 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228730545 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108264671 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150384807 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121283953 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100657058 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116789869 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107712025 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090341231 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107488645 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092403756 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110515164 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088807513 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121234334 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110430668 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091391583 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11133531 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107349952 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093530549 seconds)
  done (took 2.81310741 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09461781 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101032036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.113882819 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103868096 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084289794 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105929165 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091018161 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120022901 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105330219 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.084723131 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113874169 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087347224 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104919577 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084138293 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105704434 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084441314 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105453594 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08482269 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113895538 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109522306 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091069942 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113994128 seconds)
  done (took 2.961752051 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099079777 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103368594 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116417252 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107117884 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080012094 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10256503 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091940787 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103039781 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111246766 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086450747 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103065323 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082891206 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.110340756 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084230566 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.110356281 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084411911 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105625925 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084796487 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104717677 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080021361 seconds)
  done (took 2.709094415 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126129382 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117991666 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100224649 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131969004 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120681403 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102123698 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132314469 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121207191 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101899684 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133967819 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101997587 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121695777 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132557077 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108619003 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12031503 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132033137 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113334678 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133297782 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12106869 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10252394 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134040716 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121609086 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113074654 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120421854 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105074333 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12197765 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121393937 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109807165 seconds)
  done (took 4.084794255 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081916032 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08166173 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.100558714 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.082012403 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.100828346 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081615286 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.100939351 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.081526809 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083394461 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101531077 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084350654 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103181834 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084186337 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.103731886 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084963507 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.1033587 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084691353 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081667375 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10087134 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082002186 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.103280269 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084044279 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.103486079 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082745231 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101295323 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084962278 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082071278 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100626894 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084837494 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100621257 seconds)
  done (took 3.501397596 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090392375 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107194403 seconds)
  done (took 0.960317042 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079428407 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118418333 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080192734 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107933588 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091467872 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10589461 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095673265 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110245713 seconds)
  done (took 1.552173959 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106947873 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.122034273 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087720495 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112875312 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102335334 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.12034988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170160243 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088335776 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108243407 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082492064 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.123300806 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083305822 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115514926 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107481166 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095101627 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120300196 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082884712 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115871696 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.094012223 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107935804 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091982639 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121424674 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097099867 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112536063 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087825842 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116919105 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119443356 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098607438 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110773015 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098716044 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113089477 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079457773 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110889123 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091762132 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.103345382 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.105279528 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123695211 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09152427 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.116188832 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110818318 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096890595 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099957565 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097454772 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113431709 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099221415 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.11040261 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.093204528 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.10053486 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08761068 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108981418 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081098114 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109447997 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079907943 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115522374 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095951165 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125066707 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.090349789 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110065541 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091261568 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.110856403 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094579002 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.111316778 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117087632 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089919416 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1158101 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095965821 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115055653 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08260692 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098691581 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084593016 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.116038079 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112655668 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11802821 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091968719 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11396434 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083570492 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112088553 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092439548 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114354943 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11786272 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091615481 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114156098 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097860137 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109521602 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090518004 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112874879 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088728105 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.109503966 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087402135 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127437495 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08942397 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.103876891 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087152818 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.117768541 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091131517 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.110700012 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087713858 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117237783 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079953247 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.11160631 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092958894 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112925433 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.119448634 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09328916 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112474581 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.097671959 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.118966598 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091945397 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110913916 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082883689 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113020451 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088677826 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11524202 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080645136 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111878476 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.091657339 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.111518703 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097887837 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.108807822 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.091571657 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11733788 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.099322414 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10848246 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083367834 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110784276 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092040647 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116239722 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099137535 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110183201 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081579193 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.101492355 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095089622 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111348892 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093324713 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113166936 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112407311 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.081054876 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084367877 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.122926201 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.117597473 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090321785 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.113181464 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09810017 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114541812 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089923403 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.116693155 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090563389 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.107097884 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097252207 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109703285 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081463295 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116180768 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090576014 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.109428702 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092257922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116150488 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091591655 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.112829118 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089458786 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112894035 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092307375 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.107151499 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092202665 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110874818 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.119855388 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092247773 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101908293 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083874721 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093388218 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107921089 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090582661 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.108057274 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092307144 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.11333558 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084889321 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.112222962 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09035532 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124857981 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120179288 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093718588 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.115022985 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099725817 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.111673378 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094926302 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.111440338 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094385379 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.112986443 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097176331 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.115020505 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093809173 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111230142 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083561947 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113754893 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098275214 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.107689185 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085184208 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.107073636 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092819993 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119607717 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093441792 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113090253 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089724141 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114096672 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098199886 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.112085302 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091664835 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107663198 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093258772 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.117425259 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093893616 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113931591 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099819962 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113360522 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082284462 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118173763 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10916896 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.097451491 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.102528081 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08899219 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087656685 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115591581 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090144222 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112429358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081616929 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117866403 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098942892 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.113667426 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087986698 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.112305469 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122036858 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091485916 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115815344 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092575867 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.116190844 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107145593 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109107952 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092608719 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.120778209 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.093318457 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.10278879 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095742849 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111016773 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08755103 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.110422961 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090070413 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113820942 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095134243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113823485 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081587882 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.112084886 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091026591 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10920946 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083108916 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.119358414 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094154655 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.113465259 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121995247 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095094788 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.11319184 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095260462 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.111700604 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.094186279 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.113737684 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097283667 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.113556322 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092248862 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.108284672 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093417627 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108418275 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085661515 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111696286 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.093747119 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.11169776 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095290048 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.108646056 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099193536 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113161776 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.094295641 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.132233837 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.110922772 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089346142 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114996322 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096061334 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.112539412 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092916737 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.103753334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099966309 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.11253024 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099515736 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.112207373 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085246847 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113919352 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093582419 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114811333 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.094559368 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.114289797 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091794195 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.112801465 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09337804 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122931855 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089201493 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.121014976 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095476864 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116178332 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112519202 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095373129 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111608524 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089178995 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.113196957 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.09514326 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112891217 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093023544 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115763941 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094033285 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112551764 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091150685 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.11492412 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094946031 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116746763 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.083002225 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.109276348 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08939851 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11338984 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096855656 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.111469528 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092436824 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.111926053 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095202829 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.111599567 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.085579939 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.118858359 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096683211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.114455801 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103821637 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.109707182 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.094123545 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124496107 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082430455 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11120687 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087975252 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.110794136 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100827239 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.114921713 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099567688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.11561806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089419921 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.106323306 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.095755837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111912808 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.084142234 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107635818 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097673064 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.111999547 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092550481 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.115595702 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097136942 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11534879 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099003848 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.112293951 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094039645 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.1142606 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.086866816 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.111182349 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089758484 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114742862 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.095834317 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.110828315 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086391303 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114154763 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094680726 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114745858 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.094222358 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.113574589 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100523973 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113619713 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09505275 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119121685 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08424514 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.115223507 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093428202 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.11443739 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090641463 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.116457693 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096067744 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116220876 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099788764 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.114290827 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096297935 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114667459 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087625872 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.114358023 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.094454856 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.115006174 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090091962 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11635455 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101439585 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.108360135 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095165705 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115878385 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090726221 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11656994 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.095956973 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.117148127 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11888532 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.095764928 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114577532 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.098823594 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11440645 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096404566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116000043 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093908488 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120007765 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090487927 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.122037867 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095551199 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117302605 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.094303505 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.111037729 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094408459 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.114583294 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093843584 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120786856 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.096142277 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.11140779 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090665056 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.108628771 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094923878 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11973492 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102245169 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115498705 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095652618 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106165648 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.086877481 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117116993 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090896625 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.114225355 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097447301 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120421246 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095329499 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.11260397 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09346809 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.120440264 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098592023 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097750428 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111357223 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.098053299 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11687749 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095523455 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111787775 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09449889 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116501129 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.097688092 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.114016618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091939005 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124809836 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100682654 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117543217 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093562865 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117865292 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094693835 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.106510195 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.096559369 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.115764924 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09856141 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.117250975 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094458689 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127821432 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109659486 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094550053 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121369559 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094792883 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.12150518 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.086177461 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.116337218 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097022134 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117237989 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086458409 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.111348387 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091762952 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11547291 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090800472 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106250585 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107309329 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.121295724 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095371161 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114608016 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093682856 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.107246027 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085848701 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111586651 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097093367 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.115042234 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.103391996 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111580637 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091137163 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10650772 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095285594 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117420677 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097927039 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.108331662 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.086885832 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112808387 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095949189 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.123721442 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0938869 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.115956922 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097280107 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.116196834 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088945951 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121811599 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087791968 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.118279763 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107311 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.117542619 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097216018 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.121241006 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123017345 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098493558 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.107129506 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09732455 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117605885 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097496986 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117878621 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098534408 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.132879364 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096141461 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.113190367 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09414261 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116878851 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091621835 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.124347391 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097523662 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119616083 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.118504447 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095379491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119132085 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10357047 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118853755 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.097032149 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.117418648 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094942841 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116323597 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09379875 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114337205 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098778434 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.118099288 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095764393 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119198875 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091161387 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127553137 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.102383299 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.118339357 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087177244 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.112971002 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092173966 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107496584 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097658976 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.109778582 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.093739761 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.114599173 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094716844 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.119324185 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098720242 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.116664604 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.098137442 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.116579943 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.085449622 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.120113242 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096393434 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119431228 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09141899 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.117494212 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.097715467 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.121467072 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101226295 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.115049012 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095932277 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.116596659 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098962565 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.108529242 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099683384 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115717829 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095237086 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.113226992 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096202634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119006126 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098272133 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119118036 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099237029 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.117713736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100785151 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12080401 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.088555323 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.110133524 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099230155 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.11104263 seconds)
  done (took 62.89554041 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155348383 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089747286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104871518 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087058079 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135106997 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088078955 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107856293 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088335538 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108887303 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101705498 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109275189 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086206729 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.13094298 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137142071 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133774016 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124015265 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086723691 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109328318 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087374621 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108449245 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10943918 seconds)
  done (took 3.103909243 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108550994 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123405617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12501273 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109312217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122406625 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126770788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104672391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128556452 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13172698 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121413825 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110200026 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127555101 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12181558 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10083637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122536135 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123836485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110638058 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120634418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127909343 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104121715 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124620638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125472293 seconds)
  done (took 3.439201611 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09556344 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088958221 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.116495685 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083197897 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.111038426 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.084578818 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115695804 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085775889 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115564862 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091023698 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108107701 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091001869 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.117769369 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.089298732 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.115605411 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09219673 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12216533 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.096312406 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.116704609 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088030702 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.135860461 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.110314055 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091489314 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092541673 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.12869163 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.117547857 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096301468 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0959475 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.114744636 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.096959198 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.113846797 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.098099346 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.121907637 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093485686 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11540642 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096308117 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.117958339 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.090974101 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.113820184 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098042197 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.109151229 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.09414236 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.119726981 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.090192959 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.108411174 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093087526 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112514217 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085721443 seconds)
  done (took 5.794581217 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125055168 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163673606 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095709511 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.161056941 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133986736 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122240129 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094860256 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.153015902 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.110019606 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.090845309 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129653332 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127530148 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092164038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.12490031 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094243727 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112649204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117701268 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097108726 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127737645 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090256631 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.124286256 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.116155467 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108166062 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126900457 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122384723 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095237278 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113109384 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106794307 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125658863 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120648485 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102888868 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.13037593 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.14733165 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.123010215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094830356 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11415846 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.108118565 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.113614622 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.114822894 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.089572977 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11564849 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103139025 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117110573 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131867023 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098583251 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.117807641 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.099883665 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.128562689 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.137053249 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.098031236 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124033845 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129250491 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097783968 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.114110885 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101413358 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.137207458 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.112132812 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090599692 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.117666669 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.129223805 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098043542 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.137531263 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137512539 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097438266 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121441764 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.127321883 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.099937261 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123911605 seconds)
  done (took 8.876086889 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097822289 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.139305077 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133660941 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115453957 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124981171 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122638152 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103639355 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.124288397 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101992011 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130758635 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12387481 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.176012397 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090843364 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12377306 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099737492 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124470225 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.124135935 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10388106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123613164 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100812694 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120868601 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135932195 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101570035 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136653712 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137280185 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116700321 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104436941 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120787904 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109533765 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12292798 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13207008 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121224179 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103639369 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131195786 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139169811 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.101352363 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110622489 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10135325 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.124311716 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122492044 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094667089 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130476066 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120125291 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.092976748 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117752114 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096681568 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.129449049 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13173787 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12539596 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110716346 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121830765 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136652134 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10309505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121408577 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135447211 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144422101 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115034935 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134883464 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12412363 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113497972 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137750043 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144989843 seconds)
  done (took 8.290100397 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088503796 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086446482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.107369351 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084601295 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108499416 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08581321 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108197528 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08829355 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087031512 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109640884 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086668327 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106003009 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085258226 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108777129 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085533674 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105789714 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086134878 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084278534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10810139 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085003963 seconds)
  done (took 2.725620289 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097385316 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130998936 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089204492 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117373995 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090980115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117597646 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110890711 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091889886 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109457382 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091951432 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121850294 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100867822 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112220735 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11586587 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101172077 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117050902 seconds)
  done (took 2.550016392 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.109431415 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123552078 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.135613251 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.094175169 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107267776 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.096177042 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.109577122 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083788082 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10563489 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09768931 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.116539404 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.100202724 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109405072 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087075283 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110275546 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094827263 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105419925 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.093194531 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109401268 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.114202207 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116525639 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.117299106 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.096291373 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.1189837 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09810661 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.122380681 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.101590391 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.112425542 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.091033628 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110094627 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091150619 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1180201 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08361942 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.114908944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086316351 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107349802 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087181387 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110462594 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093981855 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110723669 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086135002 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.113118115 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087665023 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.11247364 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083255896 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111136423 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083626684 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117363621 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.111004873 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.092408899 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108777994 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.097824137 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.117118413 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100621523 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.12037925 seconds)
  done (took 6.568063221 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103517176 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115028469 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096085154 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110281735 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094723222 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.121069718 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094842034 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117042474 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096211952 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.114321092 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097255241 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115496787 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09046748 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113312128 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090733806 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113206932 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083601179 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110661023 seconds)
  done (took 2.713262345 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095285037 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108885201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096710407 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109209551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088964118 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112297804 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087645834 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085838751 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109107607 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089189265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110022491 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090100137 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10845296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090352209 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110138859 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088311153 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112467302 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086870029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112015521 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084591731 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111817936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087316999 seconds)
  done (took 3.011303816 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.107978677 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.143651312 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.102946634 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.154107377 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115014457 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092996042 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126297994 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097415752 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138036714 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120583271 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100048495 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119946833 seconds)
  done (took 2.259336721 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115584188 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150160893 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085912233 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113550623 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124719023 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095547774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115304837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093174601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127599114 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129909282 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095088369 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131950597 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131411652 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134384031 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107250681 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132941835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11896058 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096841956 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114564075 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142549668 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100901068 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133179703 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123735778 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102033027 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123648542 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13262164 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113709308 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138708896 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123663432 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111308636 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135463941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122933222 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11087257 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139586767 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121306408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137060761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101849166 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147176098 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132527945 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111739487 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122472278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131530193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112955818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128158639 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134097735 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101134118 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128083716 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124025363 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09932312 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14717194 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132416903 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135059941 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10942395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139577807 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136397521 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153798327 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137571766 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135788771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108975235 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132782172 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13543043 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132164754 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114201105 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136305072 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132219053 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135946174 seconds)
  done (took 9.000576262 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131200573 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110719848 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094626057 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131233512 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129234919 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116854295 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094733347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116615365 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094473927 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113093327 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163872676 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115518715 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106211804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127858688 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115881429 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094486422 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116655194 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127557376 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091179999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146820594 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117978119 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12736971 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105582974 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127108188 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130470631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125003428 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094761318 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115606161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094194398 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11643142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124544484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098742812 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132206894 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11296441 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110906766 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117078663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094256765 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123886363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116259729 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101883271 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128538875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138547114 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115796615 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094499461 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131611827 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116986 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094881268 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112734932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094925504 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112012907 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130166621 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129508141 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108089985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128410882 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116697716 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094943315 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116876779 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115091178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095291829 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124509666 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127278968 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095489153 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144501727 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115538795 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09458828 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12814266 seconds)
  done (took 8.477740081 seconds)
done (took 165.794921499 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108332979 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.148322544 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104042547 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.206089829 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089014621 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159247164 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132537388 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.129043772 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088687661 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.112126769 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089652546 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114273372 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.194688184 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.110967481 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089885393 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113751552 seconds)
  done (took 2.834894245 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186633842 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.293914839 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109587413 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116547708 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096419563 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115564951 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093150951 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118971294 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090551324 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125693639 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112973651 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093801208 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124099669 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093090695 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111858165 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093231067 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125148667 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09169995 seconds)
  done (took 3.044495047 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115384411 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.168270635 seconds)
  done (took 1.138678327 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127527782 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191702472 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316005337 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169043366 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119204067 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135380604 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.169459185 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131440262 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201259152 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133128028 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112110635 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120029638 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142482652 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103094672 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.12207261 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096567987 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.146387259 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120197908 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098745179 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119651389 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117426962 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.120174384 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122919278 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.100497796 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189287653 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134364838 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.119110189 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097837948 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119197378 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098717953 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.125316135 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13310784 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110931798 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.198957032 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102157276 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193604532 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104164899 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119228994 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120261736 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096157422 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122704803 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100363787 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134604198 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118521496 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097728091 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126505859 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097275877 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.119408792 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.125852271 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106524794 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126610799 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.380233194 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172080676 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127608891 seconds)
  done (took 8.206430966 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.860176666 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.168079283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119437406 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.971270875 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150406911 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132309792 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.868122674 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121400937 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.278650316 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.865907391 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136924936 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132957228 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.245350351 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.268956585 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.164303304 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348729217 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.735680945 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.139949332 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125508972 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161892913 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125280616 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14642646 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114225724 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.469948436 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096672676 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116661904 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10120107 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130561391 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171535748 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.117065759 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099107512 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.213269405 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.277354147 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.189318101 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118697837 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092892192 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117729053 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17877154 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281764109 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228131435 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182583424 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091207433 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116578412 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107037171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137359004 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113455083 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174506497 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184295891 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.206588962 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098666931 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130435448 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10315622 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130326863 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.171930821 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.115584208 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350070363 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.35812158 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096641279 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126870884 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112786875 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275900237 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118144478 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235519034 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122065171 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226242797 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.116208191 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772011974 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.199445237 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095461681 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126239567 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102292474 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123862082 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128811628 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17559561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391937257 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110334763 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122014185 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094621829 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264730285 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09493344 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118141028 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175211705 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118374271 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104628073 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134637556 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132828927 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.182417426 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257824101 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132795875 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125632376 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101553063 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130375659 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095664639 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.245338651 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.206576589 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.193566911 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22650953 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132013432 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178870002 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.176113061 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130006705 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181251158 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125939141 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136426768 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108299612 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229037042 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.162926883 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.120661796 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100491368 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125329265 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155861906 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098531879 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125218682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180595118 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500162031 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.181939771 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092367175 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122029439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102598021 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196691584 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103572979 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281368804 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137919666 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191204413 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109238017 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11635657 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125976727 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175938806 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131645941 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10449181 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130750023 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125922124 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.261386995 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232674076 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110568617 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250826657 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19549087 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128034104 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185089187 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104131173 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.207519084 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107081509 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130213431 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119557012 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77132102 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131295561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12651542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100149077 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20705903 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117835234 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096644248 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.11825331 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092922386 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826569209 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098120966 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.115679708 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.096555817 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12748112 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10278574 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12489387 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123003915 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17367138 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246066543 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107530372 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126287253 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.117870592 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.172588647 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096556995 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.118965751 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095086935 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.118694072 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104650203 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12331691 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096310807 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.211067387 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175075247 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.235448515 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.537431148 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119229128 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095061828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245678865 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120448192 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316688955 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103299534 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.241550971 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182631328 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.115036637 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347964199 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182464429 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207516245 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097214812 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.207543491 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092237044 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125016943 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172560846 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.117914355 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103109442 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171382338 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136118019 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133571045 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.16436848 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095197252 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240326489 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.115706947 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180444297 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120263537 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10686439 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324865055 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119186557 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116035275 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.19630432 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099030355 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.119881825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672205899 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.119977484 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105222093 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129278484 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236385227 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.176962118 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126008409 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125252693 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109339678 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173480921 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.245275507 seconds)
  done (took 46.450139642 seconds)
done (took 62.523337014 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319171495 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282258912 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.321366675 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.207576737 seconds)
  done (took 2.087327133 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18930132 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163756454 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.133192142 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.118603357 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.165278742 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092961432 seconds)
  done (took 1.743291904 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.507180355 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.394158722 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.360239353 seconds)
  done (took 2.145248956 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276372866 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.296125601 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.37617247 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424669279 seconds)
  done (took 2.365412725 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.217169182 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135254314 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.106680995 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.148640344 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.183863754 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.186657211 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152880762 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.161997285 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.138515487 seconds)
  done (took 2.360923899 seconds)
done (took 11.586247566 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.147205612 seconds)
    (2/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.267930098 seconds)
    (3/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.244245558 seconds)
    (4/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.217487921 seconds)
    (5/286) benchmarking ("sort", Float64, true)...
    done (took 0.21696609 seconds)
    (6/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.108837671 seconds)
    (7/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.133098858 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.274002572 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.171719807 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.139808992 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.144020325 seconds)
    (12/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.312351944 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.180474024 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.106166131 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.14121162 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097258423 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121684252 seconds)
    (18/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.252836462 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.146487436 seconds)
    (20/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.228787844 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100075157 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.134964632 seconds)
    (23/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.198427983 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.109650124 seconds)
    (25/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.149447482 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.124237772 seconds)
    (27/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.235126632 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.169417808 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.133727462 seconds)
    (30/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.127724022 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.132791601 seconds)
    (32/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120441448 seconds)
    (33/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.125465825 seconds)
    (34/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121991211 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10037662 seconds)
    (36/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12035539 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.21226561 seconds)
    (38/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.27806409 seconds)
    (39/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.238794223 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1310031 seconds)
    (41/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116762801 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.171182373 seconds)
    (43/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.152603819 seconds)
    (44/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102077539 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.138035149 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.132631988 seconds)
    (47/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.137193424 seconds)
    (48/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.220930236 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.242442592 seconds)
    (50/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.261883325 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.124337513 seconds)
    (52/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.088721636 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.127727613 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.107227738 seconds)
    (55/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.1773813 seconds)
    (56/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.133948388 seconds)
    (57/286) benchmarking ("sort", BigInt, true)...
    done (took 0.226786507 seconds)
    (58/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.1715956 seconds)
    (59/286) benchmarking ("sort", Float64, false)...
    done (took 0.18506951 seconds)
    (60/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.128776528 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097293706 seconds)
    (62/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12137242 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127259361 seconds)
    (64/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.244261444 seconds)
    (65/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.233353167 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.213609237 seconds)
    (67/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.133771891 seconds)
    (68/286) benchmarking ("sort", Int8, true)...
    done (took 0.213192696 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.241851769 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125091298 seconds)
    (71/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.107265306 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.2016466 seconds)
    (73/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128573985 seconds)
    (74/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188384039 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126673305 seconds)
    (76/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.197455342 seconds)
    (77/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080988648 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.136800385 seconds)
    (79/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.177079681 seconds)
    (80/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.216309448 seconds)
    (81/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101470897 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.117824538 seconds)
    (83/286) benchmarking ("sort", Int8, false)...
    done (took 0.202000048 seconds)
    (84/286) benchmarking ("sort", BigInt, false)...
    done (took 0.238873642 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.125052731 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114215146 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.195816695 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124981303 seconds)
    (89/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.109988972 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.144830004 seconds)
    (91/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.109726726 seconds)
    (92/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.201159013 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.152679239 seconds)
    (94/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081048113 seconds)
    (95/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.16219079 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.104990605 seconds)
    (97/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100378143 seconds)
    (98/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.171865874 seconds)
    (99/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.22891834 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.100983971 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.149521489 seconds)
    (102/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081639864 seconds)
    (103/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124500276 seconds)
    (104/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.139458392 seconds)
    (105/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.170239904 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133206707 seconds)
    (107/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081357657 seconds)
    (108/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120887751 seconds)
    (109/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.097459051 seconds)
    (110/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079205983 seconds)
    (111/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128582973 seconds)
    (112/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.089573099 seconds)
    (113/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.103678406 seconds)
    (114/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.124406018 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.133481631 seconds)
    (116/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103781934 seconds)
    (117/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.173416882 seconds)
    (118/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121676118 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126791637 seconds)
    (120/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.17301447 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.19705019 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.130501242 seconds)
    (123/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.210094106 seconds)
    (124/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.179904585 seconds)
    (125/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.122342703 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.106445516 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.107873916 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100717391 seconds)
    (129/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.194017619 seconds)
    (130/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.105476627 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100381258 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.131050859 seconds)
    (133/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096919588 seconds)
    (134/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.125849405 seconds)
    (135/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099555079 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.121404718 seconds)
    (137/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.145991788 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.106622705 seconds)
    (139/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125244356 seconds)
    (140/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.0812502 seconds)
    (141/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131348761 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094251178 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.117719736 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09823064 seconds)
    (145/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122663806 seconds)
    (146/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.200286003 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081235963 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12506241 seconds)
    (149/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082562292 seconds)
    (150/286) benchmarking ("sort", Float32, false)...
    done (took 0.18430325 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10250913 seconds)
    (152/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.157737295 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.131610412 seconds)
    (154/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.090126547 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093743902 seconds)
    (156/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.12111199 seconds)
    (157/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105577013 seconds)
    (158/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126239633 seconds)
    (159/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.081054777 seconds)
    (160/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.10532689 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.097409088 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.123523401 seconds)
    (163/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10738685 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.230363787 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.150253709 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.208923629 seconds)
    (167/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096392424 seconds)
    (168/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.136313394 seconds)
    (169/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081852436 seconds)
    (170/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.116283622 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114040025 seconds)
    (172/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.196924409 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096465121 seconds)
    (174/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122848615 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105614868 seconds)
    (176/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107119286 seconds)
    (177/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095101794 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.131699455 seconds)
    (179/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.216072723 seconds)
    (180/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099311236 seconds)
    (181/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.16560756 seconds)
    (182/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.123938397 seconds)
    (183/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08256605 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.147412261 seconds)
    (185/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.091129189 seconds)
    (186/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.088275559 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.105499667 seconds)
    (188/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081387093 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.130043702 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.21327131 seconds)
    (191/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081080172 seconds)
    (192/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.209933257 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.123462153 seconds)
    (194/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098553594 seconds)
    (195/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.224982115 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.126900608 seconds)
    (197/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138073123 seconds)
    (198/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10374543 seconds)
    (199/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202681664 seconds)
    (200/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.146734913 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10117578 seconds)
    (202/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104995683 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102337666 seconds)
    (204/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120739199 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.110000899 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.132308003 seconds)
    (207/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095388344 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.12648888 seconds)
    (209/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.081545855 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.121550802 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096949295 seconds)
    (212/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120626018 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082579246 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.121365794 seconds)
    (215/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.211072954 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094994057 seconds)
    (217/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.096462896 seconds)
    (218/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.108401212 seconds)
    (219/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.080234823 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19928845 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.10639438 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082546836 seconds)
    (223/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.129324894 seconds)
    (224/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.081710083 seconds)
    (225/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.101382775 seconds)
    (226/286) benchmarking ("sort", Float32, true)...
    done (took 0.242476544 seconds)
    (227/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082500767 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126301977 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.082149169 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.125759747 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112508586 seconds)
    (232/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081111906 seconds)
    (233/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.123698518 seconds)
    (234/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124832142 seconds)
    (235/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.14100401 seconds)
    (236/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.173664295 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.094227393 seconds)
    (238/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114672413 seconds)
    (239/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.182691388 seconds)
    (240/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081212174 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.124882154 seconds)
    (242/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097082384 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.12185507 seconds)
    (244/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082609743 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.133363799 seconds)
    (246/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081980659 seconds)
    (247/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08175629 seconds)
    (248/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.105745375 seconds)
    (249/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094048678 seconds)
    (250/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.11424837 seconds)
    (251/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.121603072 seconds)
    (252/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.107061255 seconds)
    (253/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081899576 seconds)
    (254/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118257019 seconds)
    (255/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082124761 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125677943 seconds)
    (257/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14234825 seconds)
    (258/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.122651695 seconds)
    (259/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101067675 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12734123 seconds)
    (261/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082763497 seconds)
    (262/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.124313842 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093680383 seconds)
    (264/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106144025 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094742416 seconds)
    (266/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.105817159 seconds)
    (267/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106951508 seconds)
    (268/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.105421464 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.109487043 seconds)
    (270/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11632971 seconds)
    (271/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113679693 seconds)
    (272/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124184506 seconds)
    (273/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.12034436 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.122719371 seconds)
    (275/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082644434 seconds)
    (276/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105193805 seconds)
    (277/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099970435 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.13030932 seconds)
    (279/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083198401 seconds)
    (280/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121164188 seconds)
    (281/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.081570032 seconds)
    (282/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094162276 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.122019785 seconds)
    (284/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093523393 seconds)
    (285/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106251269 seconds)
    (286/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081797501 seconds)
  done (took 39.649928314 seconds)
done (took 40.537323475 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.107576273 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16298606 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.106851749 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.150675681 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132698362 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.111288196 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.13016609 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106037029 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.132629582 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.13310476 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.109429289 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.113357243 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.106420537 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1302803 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.107171497 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.150885909 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107623197 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.128035071 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097312324 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123423365 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121759527 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09906962 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.125045488 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.08951664 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.131265573 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.105264386 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.125091467 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.106593214 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.123355916 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095378546 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.122146436 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.102751207 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.120389746 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126835033 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.124741781 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.098064553 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.131366228 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104631455 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.125817131 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.098110792 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.127641491 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.098308018 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.126687683 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.102631736 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123569303 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096922575 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.123567323 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132631 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127302978 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123840466 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.10263918 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.13035514 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.106982427 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.128014545 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.097073642 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122931253 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098341094 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151948317 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122436701 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099286948 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101561305 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12936431 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096632672 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.123250765 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123059055 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107104927 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.129783845 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098317576 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129909172 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.100588542 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.118282668 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098345451 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.121330918 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.095847698 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.129297936 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105156534 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.117826351 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.099622935 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.127210634 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.100156211 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.123055734 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096962246 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125703576 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099385982 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121641782 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089843966 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.120701473 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.100352207 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.122334555 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098515181 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.126011931 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100895643 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.125084015 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.105011858 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.123187955 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.099831907 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.124782873 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.09853853 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.126374663 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095418055 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.120295003 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096566687 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.127681787 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09609905 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.124321441 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.108387375 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.121810263 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.100325646 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.123377558 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.09716164 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.135814598 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.130111849 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.099173463 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12386463 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.095719475 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126781985 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096364542 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.120381988 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.096653833 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.124071271 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099401021 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.123714165 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096689368 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.127405585 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107626655 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.119174951 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.097553944 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122427641 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.099339358 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.127272144 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099268019 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.121355504 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.099101471 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.118815521 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097434396 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.121254146 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.102745382 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122042537 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09869566 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.123623705 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098559661 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.125774316 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099600828 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.125811984 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.097716517 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.116312514 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0998721 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12173233 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.101015949 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.125351113 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099284838 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.119162626 seconds)
done (took 18.307320625 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10541058 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.195923757 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.156784538 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.161786369 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.158479627 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.116432776 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.135456952 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.156710857 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107087946 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.153884231 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.154833411 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.147333667 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.135837214 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.13343454 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.142555694 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.105893617 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.130966539 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.141549413 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.140074897 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.152169206 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158156111 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.132091571 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127518054 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.152254777 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.130609539 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127268673 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134064876 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.132951085 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109153234 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147686217 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120994679 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.137867779 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134390147 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116942411 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1384653 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102968695 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142129499 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.127407628 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105407372 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.13179827 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143229187 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116630762 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.12761435 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.137538712 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.106287058 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.134748078 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.10449251 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.130457991 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105179826 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125612474 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135883062 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.126950379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.130184556 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133188241 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.10717661 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.130976481 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107344861 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.134393947 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133387347 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109928613 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131418702 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10788778 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.139564361 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14803731 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.130857802 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108763274 seconds)
  done (took 9.62758074 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121084091 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.16182136 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13871564 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113261716 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.134466087 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094283089 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119867251 seconds)
  done (took 1.833460311 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096500594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.15174982 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130039258 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.156550901 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.146451232 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.134166961 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144011487 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.123515148 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.120718167 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.132226566 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.125058107 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.178605966 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.122918135 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.108265989 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.157662052 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.121811587 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13248432 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.121571808 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103562412 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.156886148 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127804587 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119890222 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135768111 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096496303 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145121489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097067059 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.192079153 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134416346 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096273885 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.128801878 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127140952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.194841528 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120160537 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.133358795 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094138163 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152926305 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.144199437 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101447476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.147939727 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100879907 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.144777972 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103790564 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.13088107 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.127976767 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.104547805 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.137717052 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.109195194 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131686931 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.102255428 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.152888438 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.134144939 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119551668 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.124370971 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100543541 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.133241097 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102598234 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137096792 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101320217 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.15300386 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130875961 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123698012 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.151471347 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.146090857 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.124159552 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141018822 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144839876 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.119559174 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12870994 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104552751 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.131484393 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.124455462 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.12801596 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.13395264 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.113269094 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131924167 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.125020618 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.152290821 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100570414 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.137781656 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.127031258 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.100752285 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.122831428 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114012813 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12644371 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10040895 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14121239 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109870767 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12997155 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100441699 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145928941 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12683224 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108846831 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13480473 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100675901 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14138227 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152261872 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.107240522 seconds)
  done (took 13.341636202 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098948943 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097710786 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.131661973 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.124311239 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.099361908 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.098237948 seconds)
  done (took 1.617297806 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129459258 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127182286 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113957655 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.130693188 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.169126452 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.122572344 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.149547729 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13380578 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.117690336 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.139447327 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.121784427 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.150537765 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.155043717 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.105505955 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.149192462 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.105345714 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.14970107 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12763944 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.113324898 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128672781 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11457168 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.132084664 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101869456 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.147481262 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.132267608 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.106132284 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130461208 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.113750815 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.140031584 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107380508 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.133535125 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.131563828 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.105922419 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.133556997 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12347189 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.13253891 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099829052 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.13545324 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132065732 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106221671 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.150311946 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101392624 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.138829798 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.109637288 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.134731108 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.132977156 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.109459852 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131225757 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.123099081 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.134118228 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.10700101 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.1328128 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105477359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.13528578 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13147473 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107990105 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.134272735 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12253969 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.132620696 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.105727193 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.128811187 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.10546249 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135855514 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132514321 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105503866 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.134776197 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.105723447 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128218617 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101720001 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.131568909 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106904201 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12923753 seconds)
  done (took 9.9961369 seconds)
done (took 37.357500846 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.715906023 seconds)
  done (took 1.674877403 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.951586282 seconds)
  done (took 1.91335791 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.071125296 seconds)
  done (took 20.071296979 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.546987468 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.651442924 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.99969197 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175725823 seconds)
  done (took 3.333635661 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.011644604 seconds)
  done (took 1.991206733 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.323711824 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.275805704 seconds)
  done (took 1.565430377 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.919220721 seconds)
  done (took 1.89119818 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.610910302 seconds)
  done (took 2.58458154 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368657292 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.20913877 seconds)
  done (took 1.559307607 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.601642246 seconds)
  done (took 1.576144327 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.057598464 seconds)
  done (took 17.037502524 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240327678 seconds)
  done (took 1.228817511 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31250283 seconds)
  done (took 1.291188531 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.83955685 seconds)
  done (took 4.819125138 seconds)
done (took 63.506562058 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110746168 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13732804 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.112271621 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.134554954 seconds)
  done (took 1.467938912 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112844815 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.131176318 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.110035598 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.132187907 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.114615392 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.133257757 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10423238 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140212254 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.131554275 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.108106532 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.131150079 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.105608505 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.133393365 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103889206 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.130298661 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.107316166 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.135225602 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.106056159 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.13286843 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.106057551 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132142922 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133086999 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10927467 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133040062 seconds)
  done (took 3.898206077 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109627117 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.102047748 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.131265408 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.101139143 seconds)
  done (took 1.42539264 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114281196 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.147224394 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.119032827 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.139786803 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.147320985 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.119638979 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.128988413 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.103052691 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.13137829 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112885959 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130551009 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121706402 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.149479877 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123410581 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.115846983 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.122772404 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.099343499 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.147582283 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112490826 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.142102297 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101728889 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.139692274 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.110295873 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.144995512 seconds)
  done (took 4.01410094 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177896519 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.14418453 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.153003023 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.177986399 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.128391397 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.127268318 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.127825825 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137361615 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.132403074 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.101862859 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.128272663 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157678702 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.136330287 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.131436599 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101658626 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.134494176 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108467535 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.1335377 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.103712816 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143541353 seconds)
  done (took 3.676824972 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109640278 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.128196518 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.100084301 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.127526836 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.109184797 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.130587097 seconds)
  done (took 1.697394089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098447785 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09608891 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.124723621 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095994159 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.129598074 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097554312 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.122542237 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09724428 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096119975 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.124702963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096197393 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.123508728 seconds)
  done (took 2.288957884 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514147365 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.128270293 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128801609 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.102535428 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.134562346 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103216261 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143956067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.100351915 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.185956563 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.129873028 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116489392 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.183782268 seconds)
  done (took 2.961142357 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223917413 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106713536 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29244818 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393559909 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169785968 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179378487 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290102428 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179952723 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200152965 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150091953 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217795779 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171457787 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167133807 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193018457 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124886904 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.199079164 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188219828 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245113781 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133205319 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260469127 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179607324 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181290417 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203093718 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164694357 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122381552 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175192811 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.13137466 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111566852 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216164741 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18292647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189204369 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162558691 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122809313 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244499117 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229146828 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221805846 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323772278 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119415952 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.231788882 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.209997482 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268159466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156526701 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237159447 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139883047 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144768205 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194852224 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169752688 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.195528455 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143864923 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124363953 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231796733 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190403458 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194509261 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150315043 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31764212 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161021523 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158005255 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19347936 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205106179 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213542251 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180078756 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.135379626 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200051837 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202909538 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194971488 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.158814716 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182827014 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136445058 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193670378 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218659086 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192370076 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181732461 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.228528628 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117848261 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176768461 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192597342 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166471011 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193018939 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173430257 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103972412 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163868225 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149651376 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138969568 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171489863 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135442917 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229443662 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149527814 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.30209887 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21977993 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172372451 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175407594 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178190245 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182341641 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161009552 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130255581 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130291441 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184571423 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170902025 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144914406 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170500454 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129186224 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.141412904 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165634095 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105678387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17268404 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.14781259 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180445784 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17645998 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.139776447 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148706125 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163442501 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.17076886 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183478404 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209049161 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146270493 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143682517 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216218205 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169689309 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122467295 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198503876 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24189282 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.15948696 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151812779 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181978548 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238441927 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126598019 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212402866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155432642 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145869483 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.164704427 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171742661 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168491247 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.139193439 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141439685 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16321785 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215933646 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140347082 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119335582 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187994563 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138422505 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111172246 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158434887 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148749544 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.154699337 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133522559 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153430752 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169095363 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172569849 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165726129 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171203327 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154574038 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206886896 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144402561 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.142665225 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160680834 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.130142737 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195162271 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206954638 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14135891 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201737319 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.182143235 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209621001 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174334294 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143444791 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196545801 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112047348 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.131922465 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179505107 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173093015 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175993025 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.20472421 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207685509 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180154801 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.166393594 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162201833 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180572942 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.197457903 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169808249 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15917299 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179396958 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18271451 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104465246 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.137104024 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109961173 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15479778 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14328306 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115670588 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225472247 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177886265 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2023423 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17215233 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152281734 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204917374 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108470024 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177874709 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.184994942 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152198985 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207141428 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2046151 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178875526 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156153802 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183591591 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.131822147 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108405732 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144532758 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179423494 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115248995 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147690656 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156439201 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205780164 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189900878 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163247236 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217659151 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178748406 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247552388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.104445248 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.177317753 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193203147 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170511253 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.175622777 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144235749 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.174169428 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201619281 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156544339 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208451683 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178624368 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181579621 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242487432 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140365189 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144551854 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1639412 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181855443 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152344003 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154232782 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162835893 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148206185 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167334452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.118156936 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138703949 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194475834 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156946912 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19331376 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.180996534 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189430817 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141781709 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15659593 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173259158 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128842527 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.130276755 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184411944 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211771329 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157940563 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171930353 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198686776 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14320134 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.330304924 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213781633 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198085442 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151699627 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155999359 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174432775 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183008527 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180879162 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197645542 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126191228 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19604527 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172927935 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.156247343 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14776597 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130793388 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163303302 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.164997523 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145592285 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.167688276 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124958901 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229046801 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127359943 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171487347 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176966566 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.160567209 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16895872 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123017333 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253935331 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141400041 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190453697 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170451613 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188595904 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201810397 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14036744 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140454752 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109887548 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198454744 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145023532 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171964681 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196247527 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211670976 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170377745 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182880175 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150818269 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.105873295 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172431785 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162219993 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212427731 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15608207 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.151075738 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214268702 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.165305068 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143107265 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147924518 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326936859 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128569696 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195298713 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.136485512 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.296383267 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137125637 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115449712 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18339478 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186888498 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14499625 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.172009438 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17380038 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160041256 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185088864 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151767672 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203502223 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220215871 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214244456 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191760565 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.12602993 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171969423 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176762212 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200061866 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157773109 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.159147519 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177326488 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241920446 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.216495919 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.146113615 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175633765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144921101 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174806319 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221329353 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116688362 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201242478 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144578542 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179599586 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152519086 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106371697 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171440772 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.198093481 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144953669 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19889357 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171705973 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143552903 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109158606 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166712886 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172021652 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156114494 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.111659247 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190693364 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.140938961 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176296332 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194077661 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112111368 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169721282 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15926443 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143147232 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125834975 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157715926 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148174833 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.157778167 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201766053 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.146267918 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200744812 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185899464 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179094876 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173476036 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158372707 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.675509153 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.110307704 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206154563 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160676891 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203290335 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163145885 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179978164 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173611399 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163077854 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181628959 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161990312 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204610991 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181206707 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.171311411 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145184275 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159730022 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128302779 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146349466 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166248314 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174754251 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123263069 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150471319 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.170600373 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16010321 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.157347405 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121913703 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209852054 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163224972 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19619923 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199623567 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153931001 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179188417 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189069156 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142946459 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175364022 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185728483 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124665564 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165572814 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.144534031 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.147579144 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161800215 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.139227016 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17528933 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174775432 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174259241 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175737903 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116871987 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175712913 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156643239 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174072298 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1079626 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.169284693 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171960987 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144104124 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.110470956 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170102836 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173839058 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.171483339 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108114179 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.190528593 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205037912 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.13720653 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117097389 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300213278 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169003277 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207899942 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167738882 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149560441 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155819874 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13845965 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.169685604 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173129194 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141290067 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114166873 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14551463 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196643335 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.180993928 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170400749 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198718703 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175259211 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202808763 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117437322 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277227969 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151366395 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167744558 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115522414 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.14117396 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152911732 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118093041 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157522134 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204923654 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191747199 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16977849 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.156445594 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109396161 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.137055119 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115054701 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18426358 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168872126 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171621487 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157185514 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.099329516 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157718465 seconds)
  done (took 83.751746278 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186946167 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.232475032 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171078968 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.211431391 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182187644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270739917 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.220517263 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24303792 seconds)
  done (took 2.797079595 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110918552 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.149274528 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152748931 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.136713781 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.13572173 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.360288335 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.119534957 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.136314192 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196360954 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.147773996 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134381522 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.633435139 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.103350524 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.137919358 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125139267 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135450229 seconds)
  done (took 3.988727837 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.558232267 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.565847788 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.315605597 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.246951073 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.256222108 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.166650749 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.792676118 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.175946629 seconds)
  done (took 13.156262204 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136666736 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.15446701 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.153329862 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.180617426 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.164984343 seconds)
  done (took 1.879610363 seconds)
done (took 127.977688274 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106825641 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.136774677 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107099266 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137968081 seconds)
  done (took 1.561513991 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.120116314 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090864549 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.125120542 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089416934 seconds)
  done (took 1.506311714 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.451165525 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.121968767 seconds)
  done (took 1.693117916 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131298583 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14878341 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.130007849 seconds)
  done (took 1.498900193 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115126264 seconds)
  done (took 1.205247408 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118904655 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11650188 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.15575117 seconds)
  done (took 1.481985976 seconds)
done (took 10.029879527 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122023661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.442262198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395417549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15030108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.733884179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38972198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048290056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165962534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177656835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101308149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149984982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681179583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035681908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347826084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.02130499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.354560371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713676235 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103692203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137093764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101825011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026510406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099801532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132753194 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102961711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711332776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405466474 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131654752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.388810876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101676215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134386836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392085036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129919409 seconds)
  done (took 17.207114192 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104125247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192717135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.109472144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133421476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104694354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.133132871 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.110537367 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146424035 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193157382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130996293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.122285472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130413242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10680284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.131179731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.125001972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.130550713 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.105981521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.133033012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.110068362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.134044738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.122012452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.130682244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.104562664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.133534468 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102077893 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.144616324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102953211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143704221 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101437245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136722964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107682431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132220191 seconds)
  done (took 5.135154095 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151068421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202695037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.140704065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137788929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183136393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.133485745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.218964241 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139123979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197409625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133071976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121439236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.131602027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169835065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10338852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153946154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103152896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.134400025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.105580372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.138263833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103937145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.151848678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101323447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133392285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103354345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.131806354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.116315295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.132358585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142786169 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104692507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136239454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108548813 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.131515232 seconds)
  done (took 5.487677773 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108878683 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.139719759 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121296649 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150166164 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.105430546 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.138815829 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109555295 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.135509811 seconds)
  done (took 2.099789287 seconds)
done (took 31.018603183 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121076912 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.107063211 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.149483773 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.145685624 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.113268325 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.16788807 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101192914 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.113085462 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.147301651 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.110725896 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.148843978 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10109011 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.133405072 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099889291 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.145965472 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.107567882 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.149228365 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.112085536 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.154188789 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.11762104 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.134129943 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.113877175 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.14350034 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.122877292 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.156110986 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.154345712 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.119319461 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.138988073 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103087576 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.134059356 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.120214317 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.159466331 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.104950694 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.150950965 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105738724 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.137527563 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.102823893 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.134140635 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.11798943 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.143905791 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107734041 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.144885539 seconds)
  done (took 6.48244783 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.130727162 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.179454267 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.10007243 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.130353774 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.09949502 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.175089488 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.170569411 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.100600225 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.131062193 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.128665595 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.161287273 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.099537004 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.131255262 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.100000193 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.13027555 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099939628 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.160209313 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.127694962 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.165021207 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.164556312 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.149464037 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.168924069 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.167766178 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.127497509 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.177692169 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.17068434 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.123192147 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.171930652 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.16164445 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.099163186 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.166029283 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.133425778 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.132859708 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.099028808 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.17627796 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.170794038 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.130754724 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.17675145 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.16683437 seconds)
  done (took 6.657595854 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110929938 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.150090948 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139002706 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206205727 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.17628579 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.118063743 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.147348454 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.121625572 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.162617033 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.102203911 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.145436914 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.165381035 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120620589 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.145134919 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10846868 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.149400861 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.122939114 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.135766304 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.110113199 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153338794 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.121167314 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147034643 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117700154 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147143595 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10240419 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143292352 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.137941886 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.117366224 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.140071716 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112678611 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.137622325 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.1073408 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.136051981 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112885859 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.138210223 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.110937282 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.156083953 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11229725 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.148405807 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.168812908 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112721829 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.138470342 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125959493 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.182539305 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10468709 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141643056 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113255826 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.146648578 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101593636 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1537184 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118321774 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.13735568 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.150156021 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.103400922 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.132628286 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111165597 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.134427651 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.107028544 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.142662103 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.108511343 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.155873626 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.112695523 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142989097 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.106176375 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.140838782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.103334504 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.133313878 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108029537 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.158857265 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107934942 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167654601 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103443881 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.140281238 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.142326859 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.110530351 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143822028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.104481992 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111463423 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146384364 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.139580297 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.113442572 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.136632516 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.107615543 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.15244247 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12010389 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.142395435 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108964002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141901415 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10616568 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.137064795 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11774663 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.137243391 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106375823 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.145009181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.104060049 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.13808713 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109498568 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.140586697 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101776546 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155000342 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107840575 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.137120461 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.150975932 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.105754459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107571478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.147579086 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.115516623 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.137610509 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107387472 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.144128902 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101703947 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.143492844 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.107077054 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.137070192 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115147524 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.147654891 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.138809806 seconds)
  done (took 16.340406361 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.257832985 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.238565078 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207859138 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.324566459 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158310167 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130852091 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.234363588 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.188936208 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.136486949 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176544399 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.193253103 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.203562558 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.191228832 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.205366275 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.197365259 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.104162303 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.1698215 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.191268869 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.237279543 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288319316 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.169376963 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.150108319 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.177321832 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175536236 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.121261737 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.15239546 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.164256639 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12651682 seconds)
  done (took 6.38654924 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120804399 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.17457782 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.110625064 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165746547 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161425582 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.1042112 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.140480349 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103954016 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.150181278 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.15128406 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105161504 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.141292483 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.110633011 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.144227768 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.103431806 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.143842853 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.113852341 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.144546388 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106784005 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.138749549 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121612464 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152873045 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.139620763 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.110906817 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.15337986 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.110256661 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137513401 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.157821917 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.114720374 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164744749 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.100862218 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.145673794 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.149845831 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.104330434 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.141791242 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.107199928 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105638006 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.137325307 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.1067771 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.132221837 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.10289563 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.125441788 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.109778246 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.150308407 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.11187866 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138619741 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.140364574 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.109285469 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104267664 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.13228438 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105035436 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.137950001 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107260497 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.15266173 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106220264 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.13602806 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.107603341 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135991434 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.114791469 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.138290101 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100895959 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.139878161 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110553221 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.141341599 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113127137 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.142332531 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.109414181 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.137448448 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.108399374 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.1437281 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.106909792 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148748978 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100330372 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.138782223 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.114685725 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.148450997 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.107398588 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.143929622 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.142555097 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.104732444 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.093689261 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.134914137 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.09114376 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.140509865 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.103060574 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.141193796 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.107126364 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.141290761 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.120861329 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.146872953 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.142995429 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.105362648 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.142607785 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.109265502 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.132679514 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.109414827 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.153417746 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.125539377 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.134507166 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.100689431 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.157949332 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.105228232 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.133122838 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092600726 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.14531234 seconds)
  done (took 14.443286964 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132958634 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17493854 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.105115187 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.156081025 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.171317138 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.135129985 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.151473054 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.113779139 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.137372871 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.126283719 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.144017344 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.113791908 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.143430684 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.120206542 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166132013 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.149431205 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.106286505 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.151877995 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11073986 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17851618 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.124089311 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.163350628 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.168070892 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.116168312 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.142343816 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.128455858 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.170032828 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.149577957 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.118408034 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17009768 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.118821332 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.167778702 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170850811 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.110793011 seconds)
  done (took 5.935926055 seconds)
done (took 57.3370584 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.208539868 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424524266 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.194213724 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.204612548 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.257995813 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.226029088 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200135025 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.389047926 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.019378006 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.185451215 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.193256271 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.19183411 seconds)
done (took 27.816288332 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.336984487 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.800664156 seconds)
    (2/2) benchmarking "String"...
    done (took 1.519564528 seconds)
  done (took 4.455260641 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.196003275 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.196736585 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.440500637 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.198905261 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.214629756 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.200386371 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.20992427 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.212786598 seconds)
  done (took 15.789717407 seconds)
done (took 25.892281098 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.218322025 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.47242359 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.464816151 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.213268246 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.209409713 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.201330006 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.199885568 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.253947651 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.202708997 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.197948482 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.215930518 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.543127728 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.231881362 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.590923848 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.199790749 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.201792319 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.216510375 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.463394902 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.20131665 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.267050567 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.186866325 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.184754474 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.206436417 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.227313169 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.239152874 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.211610353 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.231408953 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.199534746 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.445502138 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.212891652 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.251026711 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.199095081 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.22319448 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.204411651 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.333384997 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.23021564 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.3800997 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.212796242 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.191008858 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.206781102 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.39991791 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.631038892 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.20244703 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.201487292 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.225868689 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.1991014 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.187609654 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.954048345 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.210485995 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.215251351 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.227850335 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.564729582 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.201597703 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.214717157 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.20610735 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.436173836 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.211037189 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.255881935 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.235239555 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.227336083 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.202805674 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.201100687 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.232972404 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.204411511 seconds)
  done (took 143.708546497 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.201628016 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.206313661 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.20659994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.226991158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.207558165 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.206625093 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.202118235 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.20289027 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.208224033 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.237622054 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.20837448 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.206711362 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.207406173 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.142383239 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202502965 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.228474362 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.207911111 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.203427959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.203909361 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.20382777 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.209431762 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.205887453 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.203364688 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.204129757 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.217975617 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.299284667 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.232288836 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.240564592 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.205897522 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.202915021 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.213047352 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.212395145 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.880156145 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.057017893 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.219376884 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.249055669 seconds)
  done (took 80.298952038 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203967394 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204245847 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20466281 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.238924985 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204398419 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.837660249 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842345509 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.955161292 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.321499307 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.723196562 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564616616 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205612726 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299972349 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215842428 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204719296 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218889208 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229269424 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207771405 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207208382 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827047137 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217878245 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.198666597 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.390515545 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.222711304 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238176337 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601770635 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203198998 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205481075 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238415524 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543597201 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25786149 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203716819 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59827193 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.579014751 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32032462 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206093243 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239257678 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205180037 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204464555 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.492742307 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204918023 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204691818 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207670767 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902840845 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.204919761 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.833701262 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209520416 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.235705958 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205129098 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20517508 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.588188816 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.00670271 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.228128359 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205201547 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207392366 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.204560181 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205920318 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241393871 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.716235268 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.325004699 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.20354509 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207641839 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241900101 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206571474 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.360571234 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226360586 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.364352291 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.263930833 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.314836051 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836303404 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210425684 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301000418 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326351011 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203621229 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203505516 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203116339 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205319615 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316671818 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206011644 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207647684 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.654086165 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.387315941 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.224346506 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.70279747 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311782052 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204717267 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206329306 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.663664071 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210791013 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205728348 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.055865686 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310996907 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.205446508 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.207649322 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207491719 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.655498215 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838008357 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.514286004 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212614316 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.704359237 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212577064 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.666660286 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.799497584 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.966753833 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214563298 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321728279 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.39002831 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225861115 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205094742 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.70284604 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214056381 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263762411 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206974639 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.607631269 seconds)
  done (took 368.051574119 seconds)
done (took 593.176278983 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.948938293 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.893585142 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.033034334 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.923962175 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.886833171 seconds)
  done (took 10.814821127 seconds)
done (took 11.938488671 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408356047 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408099219 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273556502 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.408111507 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2447836 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426649561 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390687725 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227994838 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.320489508 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.296756231 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.320957765 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265080594 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246474832 seconds)
  done (took 18.363651802 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480671045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.208992726 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291895618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.456512196 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24932582 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.481039425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.515404362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.209143635 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385444989 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224793002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222974005 seconds)
  done (took 17.859123903 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.514138688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.212996063 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278045851 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453781571 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249371465 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498701759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.53100407 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.210931132 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.366356617 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220734538 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222553036 seconds)
  done (took 17.887302376 seconds)
done (took 55.236847287 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251346105 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.38227269 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239539514 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223687025 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218683961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219811347 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.225946137 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220616367 seconds)
  done (took 11.11266184 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217467329 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214352811 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216153367 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215308459 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215851673 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218005357 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219860983 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214420536 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.218595645 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219232055 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21586007 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21547063 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216450866 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.21844094 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218291325 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220106023 seconds)
  done (took 20.606375968 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219395407 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217513476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216556309 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217993736 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219305376 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215901999 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21861251 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216894739 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218336845 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216965064 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216142283 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21816179 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216782949 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218334542 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218098087 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217542952 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217048263 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216804434 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22160081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.217979951 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217576082 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221425806 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218905322 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218564101 seconds)
  done (took 30.366432621 seconds)
done (took 63.210884153 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.228341563 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.231877997 seconds)
  done (took 5.59103008 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281782426 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.284982939 seconds)
  done (took 3.706083377 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221825742 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221382988 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221487746 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221562094 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223536695 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220318486 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22092315 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222227527 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221947232 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.222486442 seconds)
  done (took 13.350819981 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.221272179 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221809726 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219674764 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222397499 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224148987 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219685119 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221345913 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.22189068 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223753143 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219829488 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223217631 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221047948 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222600877 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221266232 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223554555 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220672927 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220064263 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219309255 seconds)
  done (took 23.123383613 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.237015046 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244495528 seconds)
  done (took 3.617370565 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.359857366 seconds)
    (2/7) benchmarking "second"...
    done (took 1.262983676 seconds)
    (3/7) benchmarking "month"...
    done (took 1.33886485 seconds)
    (4/7) benchmarking "year"...
    done (took 1.327778216 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262091557 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.24236836 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262334643 seconds)
  done (took 10.193381529 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226095569 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.414596205 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.527571863 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813327491 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226120602 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.228709631 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09869217 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229207278 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230069946 seconds)
  done (took 14.130753821 seconds)
done (took 74.846384948 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.215722827 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.291520207 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.221223851 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.25517546 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.515798311 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.268014699 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.221210951 seconds)
done (took 16.123896966 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.205995523 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.217881618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.207750072 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.227288833 seconds)
  done (took 9.995637087 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.230991322 seconds)
    (2/2) benchmarking "read"...
    done (took 1.572666373 seconds)
  done (took 4.942061665 seconds)
done (took 16.073562167 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225843203 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224889972 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223182657 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.222805032 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226583539 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.223297997 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223958542 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.224804907 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225967275 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.225783295 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222326101 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.224201097 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.225913657 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224980788 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.226052354 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223370549 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222713325 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225506841 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223134927 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224244783 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223039871 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226124716 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223690213 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224635725 seconds)
  done (took 30.526365512 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227770569 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225563519 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226730865 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22728953 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.225783519 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226490588 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.227020756 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.224853972 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227120326 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228058683 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224596229 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225394378 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.227558823 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22492043 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23090742 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224878707 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.226594041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224693852 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227052363 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225205425 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.228012235 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225840723 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226279126 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227424726 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224924295 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224466485 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.227550041 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224133656 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229165059 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.224525947 seconds)
  done (took 37.932994023 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232713743 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234459685 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228796143 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227560275 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227529107 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228438231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227417898 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228451444 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.229222799 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228792866 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228542299 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228488952 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227023545 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228774633 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225396668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.227522439 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.22809917 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228756684 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228009202 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228738436 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.227468194 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228240857 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228913506 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.228354152 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.2280102 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228414318 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227253528 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228771855 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.228446762 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.228136167 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228812092 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229786183 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229920298 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.230600131 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229754771 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229598596 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.235866359 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238438251 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229004433 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231584378 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229676821 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.230232385 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22883314 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22955502 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.22833342 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228611333 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.231203562 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230061965 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.229419772 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230115468 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231134764 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.229543974 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23060986 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230320407 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230900537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231549089 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230128631 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.231466551 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230225941 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228746305 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.2305077 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.230263954 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230767003 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231848961 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.231377178 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.232210852 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.231593095 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.231852664 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232465498 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.232846906 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229975191 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230061992 seconds)
  done (took 89.687973007 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231214247 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230104762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.230409482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227937578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228744115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.232287538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23198842 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230921759 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232520887 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233885654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234497496 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232372271 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229250942 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232982659 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232604429 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23257534 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233838261 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229260837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234372487 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232503411 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233939336 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233444703 seconds)
  done (took 28.247665813 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233318609 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235204652 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231594699 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236811548 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233931596 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235346971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233423516 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235184827 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23567669 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231348491 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23235053 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234397 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23332612 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231431688 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231304151 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231677806 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234264112 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233344512 seconds)
  done (took 23.350849265 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.23192442 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232418381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23621915 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231506838 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232542952 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235995021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232041903 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235286192 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233353386 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232475856 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.234272842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234329129 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234203848 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231078034 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234787678 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233753042 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.235277026 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232568808 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235700919 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233035449 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232078674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235655744 seconds)
  done (took 28.28836123 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234800733 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235303188 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23301573 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233162106 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234373637 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235850551 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238267171 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.233374101 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.754143314 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236523325 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23293006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235598972 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235762716 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232715892 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.234509735 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233761714 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23657216 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233597236 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237918764 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234189288 seconds)
  done (took 26.365835383 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238294978 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238923169 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23896641 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240042789 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23925705 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238510842 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239367702 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238332298 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239546443 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238021835 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240027037 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239889505 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241302324 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24081927 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23994105 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24051565 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240158453 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239664177 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239659699 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240957335 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240185213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240452534 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239920269 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240406527 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240983506 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239805211 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240749587 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240350513 seconds)
  done (took 35.866496384 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239507204 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240299849 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.237278527 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237675512 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237667132 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23675482 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237516119 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23709248 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239446226 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237896614 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240322035 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239167754 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239605114 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239724478 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238841534 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.239454405 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240181177 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238837935 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238545009 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237943434 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.242150416 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240505799 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.24232416 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236842247 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238562305 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.239700811 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238511537 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238077457 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243777772 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.240081985 seconds)
  done (took 38.326835248 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.284832561 seconds)
    (2/2) benchmarking "in"...
    done (took 1.279115941 seconds)
  done (took 3.717089391 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239087491 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240890533 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24184305 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239461743 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239115228 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242893544 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24412677 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240474168 seconds)
  done (took 11.082162905 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242460614 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.242455112 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.24123123 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.24200638 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243282967 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.242203594 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24957696 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263716161 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244397814 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.24477948 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251517914 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251607814 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.246942476 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245469739 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244784643 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244771311 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243631836 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.242981265 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244171009 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244281031 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244200496 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247084828 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246421214 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.243859605 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247244222 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255539288 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250758454 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245259576 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244979263 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.248413231 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245299105 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241682976 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245531096 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246063183 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244527528 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.245653799 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254970631 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269537239 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252082475 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244958922 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246146587 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243850477 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246980359 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.247392388 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247172986 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245144063 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.245779843 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.243507699 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.248279295 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250647852 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251280443 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246625171 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243278144 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249018746 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.248019127 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253591328 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266735268 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250147631 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258080822 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258796001 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.260801501 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27416887 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249586347 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246622291 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259229203 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.273133478 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256629246 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267277924 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.245612695 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246405434 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.255442622 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262878835 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277731618 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24694009 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247809705 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.247041769 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249103261 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247826938 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255896232 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272286415 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245185014 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248039046 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260184306 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274166071 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.250072736 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249194201 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249162709 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248753587 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.250172484 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260618965 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.269253191 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.248577542 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.250215205 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.251106228 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.251288127 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.251175261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249096253 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251253479 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.247288406 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.249545162 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247970377 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253115061 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260488556 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249425098 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249890025 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.257793092 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.252441723 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250305301 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257354092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.24851332 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249269792 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252481105 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256957075 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248469452 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256001367 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260850069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25051097 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251410849 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.251417109 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251720694 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263000231 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281083966 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252338367 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.254005058 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.257965578 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262362517 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250822383 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255683387 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.250855608 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248306117 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.249392504 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253547507 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251143153 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250509463 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251110528 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25240794 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248695306 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.252147423 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.25351352 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254210308 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.25252609 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.253940697 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.255819613 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.256278636 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25168636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.253998328 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.260673836 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.25432409 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.254654397 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253024494 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.250308381 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253740904 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255440114 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252338651 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254194778 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253255685 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252759354 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252224983 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254742364 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.25474671 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253123355 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254835742 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257974366 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253802944 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.258207688 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255794526 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252104219 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253169326 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.256655869 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.256074067 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255169294 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255269687 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257736457 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.264947333 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.25433338 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255076568 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25774587 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253790097 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255289979 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254406351 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.2583271 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266056147 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.257158384 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264490832 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.257196294 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256055605 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255390811 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257186075 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255994017 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255022559 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259540484 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263408118 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269597855 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283092512 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25778908 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.26019918 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257949347 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258631209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261946744 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256247768 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256469601 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256288183 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257609761 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256995787 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.2577295 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256243385 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256199683 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255356609 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25739022 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256575082 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257284079 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257978559 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258581844 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254876167 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257238532 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257133155 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258062385 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255261375 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.258368418 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258709528 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257552611 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25867531 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263682429 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254821503 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259390919 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259551942 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.257991945 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256378012 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257197399 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26202264 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.259771508 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265987971 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28286121 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25894343 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266142905 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.281717543 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257702417 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.260870954 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25786991 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254708047 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.263542879 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268217509 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259169069 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259048984 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258164755 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260191079 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260143933 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267133255 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.259334546 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259354552 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259473447 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262625712 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.257931231 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.261742093 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.262108265 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.263863324 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266327364 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260750052 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260113512 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262478955 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.261019707 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.260413252 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261553281 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263608862 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268175868 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265011392 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262198431 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.264176172 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26474367 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265564442 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.265830557 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.262088479 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263089596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275117354 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.29044879 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268450163 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.283905726 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261417887 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267074823 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284412651 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266043309 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261387182 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261042391 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261777372 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261182224 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.257839702 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263169263 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261700682 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263155843 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.265000767 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267066803 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262869248 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.262748638 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261752432 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262900362 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264350964 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262420222 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.262508459 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.265583054 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265258805 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26119248 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263626329 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269045632 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285367865 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.263413058 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262653608 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262824967 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.263215983 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264350644 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264040825 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26610568 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272563324 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.267111234 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273393226 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.266922096 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273721918 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263781844 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267706148 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272605159 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262208347 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.264155796 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264309279 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264426948 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272430818 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.286667492 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267062721 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269318877 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264589526 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.265282862 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.265244273 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263756892 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266610451 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263777622 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274452746 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.289761123 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270879839 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267610324 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262880465 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263909868 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.26746527 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266265521 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269098351 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264501226 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266162166 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26621591 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265007031 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.264988307 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265955732 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.266484174 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263778655 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.267831457 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275028373 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.293074954 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271742297 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267615314 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274526148 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26775867 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274036828 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.288743386 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267496098 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.268738645 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265877528 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268908705 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268145703 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.269029327 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.26860656 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.268980833 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272423049 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268458775 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270185006 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26955589 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268166464 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267861592 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277842752 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297843068 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269737255 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273355497 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.268252612 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.269738495 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272661852 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.269038501 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.268559656 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.273390659 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281868491 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279254271 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269880103 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268906312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269453801 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268045198 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.267870048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.269294337 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.269507884 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270504071 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270883968 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270511245 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272592878 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270953395 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.272111916 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272765392 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272568537 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280672056 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.271939267 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.272565777 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270899159 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.271638666 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.26959064 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271017866 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272188231 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270702251 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273498045 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273542539 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279108556 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280935777 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.274964337 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.272253674 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272105399 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272149992 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.272603635 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271351392 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.270195112 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271895568 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273957482 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271064204 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272001565 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.271660964 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.272976761 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.273883508 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271690655 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275819196 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.2812503 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272662696 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.271191191 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271739041 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271837433 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272459517 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.271331331 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279211275 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277770159 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282818434 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281858887 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.277088125 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273649229 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277757636 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282975863 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.272854938 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.274372132 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.271106657 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273151189 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274340804 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.278055488 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274241037 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279018549 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.273497585 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.273003665 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280518596 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300568568 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272030381 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274835051 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.280272347 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273071614 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270618784 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273485987 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.275312189 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281645384 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.298558141 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274811273 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277366717 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.275383498 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.275697561 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278528482 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274382382 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.277823818 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.272460249 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276258993 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275746109 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276797459 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.275573337 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.277670547 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.27581573 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.279844198 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.283574482 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273665797 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279356064 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2760747 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.277130036 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273261655 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276333147 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.272777992 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.272855982 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.278313986 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276908422 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277651854 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279237375 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.276227727 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278308025 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278448269 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277720756 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280409896 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.288684776 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.286872587 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273312219 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276167219 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.2785677 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.280068697 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27635349 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.277231255 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2778312 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277088809 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.277809104 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277033587 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276701403 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.283335272 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296310635 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.301458689 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276991404 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278075653 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280800356 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.278220498 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276145712 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.277176894 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.280956178 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281821634 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.286132649 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279066992 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286273505 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300640528 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282013844 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28397499 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.282999812 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.286250058 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.282894948 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277759237 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278174783 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283375235 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295671503 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279396102 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290114756 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310402683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.303697552 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.2808647 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281589345 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278000583 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.280492169 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281418297 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.280858787 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.27871487 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281337487 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.279628706 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.282248586 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288096031 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281865878 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.282669846 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.281438922 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278618645 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280761798 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27696936 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280934652 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278556131 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.281015753 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27935745 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279254993 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.279784951 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295687081 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.311155978 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.28387139 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279789285 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278534789 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.285881004 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.286516957 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2940597 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289326796 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282108245 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280815395 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.284049657 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283753888 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.280992108 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.282880627 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284885134 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281305446 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280085229 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.296910563 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313007582 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.287120893 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.28542091 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282216441 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283286184 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285640334 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283578566 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28340215 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283423489 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.286790434 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286988911 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.282910603 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.283668808 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285455197 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292078889 seconds)
  done (took 755.855088944 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279767452 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281858459 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281502787 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282307354 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280164498 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280681879 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281170414 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280943989 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283130958 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279004343 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281374781 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282312952 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284287641 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283757166 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282101222 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283907111 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282572467 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283027566 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283284347 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28512052 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286167002 seconds)
  done (took 28.119437238 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281604498 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.284211669 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285587893 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283912341 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28379058 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283394797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282574552 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28663948 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28565279 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283493811 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287385245 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287430575 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.284484559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283769992 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282485259 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286463876 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.283490241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281194866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.287464455 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28321509 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28717683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286008535 seconds)
  done (took 29.45321559 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.285505537 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.287580344 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284073244 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.285030834 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28760545 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.283839144 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.288592536 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.289617893 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290264553 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.288842441 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.286562553 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.288849638 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.294853726 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.294331907 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.292310475 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.291905628 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290559118 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.287803412 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286944852 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.284248082 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291991614 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.306207596 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.286055526 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.287982747 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.286690619 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288757394 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.285844382 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286933212 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.288450432 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291884582 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.286991126 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286132602 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.290569597 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.288347275 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.289060025 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292927038 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290540358 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.284058108 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.289817948 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.299774276 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.314217787 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.290320157 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.29678893 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.310360596 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.291350992 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.296021795 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29680335 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.285379009 seconds)
  done (took 63.142481877 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.897719231 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.917746576 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.923237263 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.923248624 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.922246118 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.920149995 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.920059473 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.91952686 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.914269928 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.910846922 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.912175247 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.912807403 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.915506749 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.915484806 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.921046544 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.918407753 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.917925272 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.91876494 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.93027796 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.922063333 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.917860938 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.921061866 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.918146068 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.91759563 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.92305549 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.921717863 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.920080569 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.92779948 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.918825086 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.920480713 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.932840771 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.929205473 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.92867582 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.916033727 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.925052048 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.918168948 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.923673726 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.920623696 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.927287565 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.924348343 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.926674552 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.924008736 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.92625843 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.930316723 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.939599068 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.922561804 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.920839805 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.921670256 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.928972377 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.921847102 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.929047313 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.9231548 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.923228569 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.921980938 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.925282338 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.931159661 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.933479904 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.931488021 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.921003008 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.916327403 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.923128523 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.92846122 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.925397399 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.927920228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.929457035 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.925420295 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.928679497 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.930341554 seconds)
  done (took 131.942031814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296248633 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.297423481 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298231508 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297643827 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29803765 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.295571473 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296337702 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298433429 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297623289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2976262 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300632937 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302303971 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.30264114 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29798395 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299910998 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300875167 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298337255 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296922244 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.298262106 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30173761 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.300718473 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301108246 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.299360929 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.299613891 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301571044 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300055671 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298055026 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298091561 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300933509 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30023124 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302721714 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302797126 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.301705053 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30016208 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297865729 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.301750989 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298001814 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300130332 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.302580716 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.3015089 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300193172 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301505133 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.302782981 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.301379643 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303946597 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30171264 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303934254 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.30215971 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302000308 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302627462 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.30231816 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303296938 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301264259 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301506043 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303123151 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.300456126 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303194299 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30218073 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300407356 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301191909 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302448736 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.30560795 seconds)
  done (took 81.834101538 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30017512 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306082068 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.302121656 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301124348 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304127731 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.300003747 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302379778 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.303875953 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302168539 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30272678 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301860307 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300040536 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302100657 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304539886 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.298554288 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302778137 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301227494 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299132282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305321935 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303398875 seconds)
  done (took 27.247900925 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.299374925 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.303189162 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.301036588 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301894594 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305248851 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303018947 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302855108 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304097648 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302934639 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303168311 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304581066 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305166142 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301858638 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304393613 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304562389 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304014716 seconds)
  done (took 22.057584298 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.30157037 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306728132 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305990155 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.306403661 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.302938222 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.301188791 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305857906 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.303982649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300289071 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307415323 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308006286 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.306894551 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304331631 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.306431206 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.30331174 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.302812293 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.30378142 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.302022421 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.304889878 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.307503367 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.303788547 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305282086 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.308521565 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.305593096 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.303663648 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.304661079 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306079645 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.302302523 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305665782 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.307589676 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306147721 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.302197165 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.304795841 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.304342534 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.307521967 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.30200334 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.30985442 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.30983538 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.307107208 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.308816262 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.306125938 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.30627711 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305699826 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.307472931 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.304120376 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306448289 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.305186445 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.304956409 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.304067202 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307223311 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310590919 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.306776722 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307971507 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.30848256 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.306738295 seconds)
  done (took 73.011900183 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3060044 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30657308 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305149977 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.305618348 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310715645 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.306630688 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310945998 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306112726 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307196071 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311214136 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308430989 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311334184 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30999491 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312296141 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310030369 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311599142 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307381312 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305321923 seconds)
  done (took 24.762813317 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30727896 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306919527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313002229 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310550514 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310419266 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309829112 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307505946 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.314406307 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312779295 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309652414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30991628 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.314225636 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313015759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314297838 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308750422 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309313478 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.312115479 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312372009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.31171538 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312028707 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31307861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314888658 seconds)
  done (took 30.057599289 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.311898723 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.312790643 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.311719338 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.32937037 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.334642714 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.310414004 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.313659454 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.31203247 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.336510251 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.374309496 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.36716321 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.333790314 seconds)
  done (took 17.159006345 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311354119 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312793074 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312509713 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313920297 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314368614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308161359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310436992 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310942987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317686526 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313445465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313105603 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314924407 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312678127 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311167592 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315017702 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312729825 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312891247 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31370819 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311402025 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315493275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310542542 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316252238 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314742507 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31290523 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31572169 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314251344 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318196762 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31269279 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31347153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318204415 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315259869 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309299137 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316309638 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31410134 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31893354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317369086 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313643715 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318230568 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315050938 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311893405 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317578167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317830517 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318843377 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313865234 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318021412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313022705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315843084 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313176752 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314297386 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317833989 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316461887 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314262088 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317619952 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318280665 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319614712 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318112109 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316006511 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314448485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317884976 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314913783 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314193693 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317618155 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313621793 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314050042 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315220523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313246214 seconds)
  done (took 87.98574642 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313628081 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314620376 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313928334 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315636355 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313409892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312454563 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31554978 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314102223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315164894 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311619276 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314574907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315871312 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315564107 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31779843 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314307578 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315480503 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315569868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313258731 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313587283 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320155679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31641393 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315974345 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317983128 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315469864 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318890195 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316083341 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317177963 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313177946 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315927575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318920238 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31533729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314450156 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315337879 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317277434 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317651905 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318397379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317757197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318041813 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318723104 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321043481 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318527407 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322162114 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320124226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32093958 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318649154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321116214 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31783749 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316700531 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315088035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319145754 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316185437 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318826236 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320086277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31856465 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318536749 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319349361 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319014543 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316507626 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318878986 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319862096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318236754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320842954 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322158225 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319645677 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321529922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319111954 seconds)
  done (took 88.152667311 seconds)
done (took 1815.310257203 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.486102312 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442055663 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.322427382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.342669783 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.318653775 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.337009179 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.33258637 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.320900226 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322518476 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323096248 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.322651578 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.509330278 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.37171477 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.319138122 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.322587447 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.42040924 seconds)
  done (took 27.034833668 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350997641 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.326196678 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.457069966 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343424898 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.352605384 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.533687481 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.390269283 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326897363 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.523304506 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.377391509 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.324801431 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.350758046 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327668026 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.321010832 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.351373384 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.53924199 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.619565919 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.329911248 seconds)
  done (took 29.366911174 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.854799266 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.338649538 seconds)
  done (took 5.419280785 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346895606 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.322568038 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.326641836 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.322223531 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.312926683 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.3121575 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.320000892 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.333748175 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.325560891 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.469622914 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330376893 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338091335 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.346055868 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320443554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.322192265 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.368110328 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.475960397 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.324525382 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.321186147 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.331472773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.325528368 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.453662747 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.373086886 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.3237337 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.471467094 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.329698582 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329654034 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.338474721 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.465195301 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.325989163 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32422855 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.322989168 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.328412247 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.320023053 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.868005025 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.328692768 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.359614221 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337588498 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.321780655 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.524676672 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330104277 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.331618123 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.318081994 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.83886996 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.501169236 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.466885105 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.337210254 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330976047 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.327150884 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406494525 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329359207 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.32791319 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.378542923 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.207100964 seconds)
  done (took 85.308966204 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.322642095 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.323501433 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501864182 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.34017498 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318028514 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334943427 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.324342033 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.662188379 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.360071666 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314733851 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.669867983 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950631815 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.348616454 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.368865054 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.174026824 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.385806169 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322373044 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.334093658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.325192651 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.323343941 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896598174 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321550142 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.324137463 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.497407688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364903969 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.910857686 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.324594814 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.344151863 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.34249338 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.319852892 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907398884 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.354274551 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.392290646 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.32243583 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.624227101 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.778847182 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.737183102 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.32929266 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345670735 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322409719 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.334264227 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.890749204 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.750807621 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.327906273 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.327056696 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909372673 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.32776569 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.331154873 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.324441877 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576644584 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324957016 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.32645695 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.343037615 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.344140401 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.326667819 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.394624819 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.409053858 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909032623 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330223365 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.324507879 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337475626 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.323494011 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331825641 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325389042 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.324788115 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.755049231 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.474279788 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.326711338 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.753945521 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904880588 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.345477592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959177252 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.345239401 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.347455889 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.541175586 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326247822 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.351221142 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921363548 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.332915745 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323343545 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.736616102 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.332490791 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.673390836 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.357753954 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.326019589 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912758943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.329126192 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.334383583 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.324449331 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32955679 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.32511783 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333641271 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.634717036 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.378197941 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.327055882 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.32626372 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.335411918 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339840866 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.330914767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.333383612 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958435518 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.355583164 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.329224181 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328421809 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.346648795 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.334819213 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.328034074 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.327528517 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602920308 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.339779165 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.325980862 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328861788 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.324366862 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.341871345 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.504974681 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.333743333 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.704820047 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.330728538 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328189768 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.354713298 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324046295 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.405658784 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327823651 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.330941161 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.254809497 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.629071967 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.34934642 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.331700912 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32917709 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.33411183 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330313215 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.345177407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.378734434 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.334614469 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146787314 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.35178125 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.335971351 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.328614237 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332085526 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330054179 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.350256932 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330253 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636237883 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.628125454 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479082494 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.334995108 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331735212 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.15806898 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.39978687 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515811589 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.358158428 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32982824 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.587710982 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.561346807 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.333279094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.330631596 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.331597225 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597617102 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337267477 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657024012 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.938147106 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351975014 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.336434639 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.164509934 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.064523646 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.334377485 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.333584331 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.682386186 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.354174452 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32964132 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.331545416 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333597261 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.336512911 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.334955792 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.33861442 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.333140923 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.332857238 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.378382273 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.52850381 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.354118574 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.343713145 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913713951 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.350237886 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33109233 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.347070653 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.337338825 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.333251011 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.394521512 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.338223683 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.363310797 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.337778316 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.344430693 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.970914693 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.340260687 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.33704728 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.531261395 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081807987 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.355915012 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.335072554 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.356338902 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.237986297 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941316446 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.394694277 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.715685269 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.349249832 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.378524998 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.337381694 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432145808 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.938397162 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.344930537 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.3629038 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.061053869 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.356342639 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.837695707 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.334637438 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.341108684 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013536517 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.356721411 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.342022228 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.336404145 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.363966405 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.643826991 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.339697541 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.351385585 seconds)
  done (took 500.299164494 seconds)
done (took 648.645328117 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340220097 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.336707503 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.326083334 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.343545569 seconds)
  done (took 10.587061991 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.348459941 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.348301053 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.348269915 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.347593581 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.347827152 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.34661522 seconds)
  done (took 9.330306712 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.339201633 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.335417549 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.341955206 seconds)
  done (took 8.259777299 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.580591823 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.364235286 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.715577708 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.364488787 seconds)
  done (took 9.269811427 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.350747159 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.349706262 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349710662 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.351033963 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.355014013 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.351323186 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351766593 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.351948641 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.356623809 seconds)
  done (took 13.411822404 seconds)
done (took 52.095872675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.357158835 seconds)
    (2/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.347714173 seconds)
    (3/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.52390175 seconds)
    (4/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.12180697 seconds)
    (5/286) benchmarking ("sort", Float64, true)...
    done (took 2.122442325 seconds)
    (6/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.403753896 seconds)
    (7/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.3801413 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.338213663 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.373015296 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.386829749 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.396131633 seconds)
    (12/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.558756005 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.423707751 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.356472295 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.432226331 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346598973 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.353730811 seconds)
    (18/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.359190594 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.448115141 seconds)
    (20/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.481929019 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.418837251 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.342336616 seconds)
    (23/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.478735706 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363379031 seconds)
    (25/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.353683494 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.487064125 seconds)
    (27/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.537818798 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.413994292 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.354944559 seconds)
    (30/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.369707485 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.360674039 seconds)
    (32/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.408839123 seconds)
    (33/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.398445226 seconds)
    (34/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.364157654 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.434456531 seconds)
    (36/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360262939 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 2.035340919 seconds)
    (38/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.480863142 seconds)
    (39/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.995885529 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.358549775 seconds)
    (41/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.702285114 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.536199864 seconds)
    (43/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.347760426 seconds)
    (44/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.389504123 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.726937518 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.405293785 seconds)
    (47/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.357228311 seconds)
    (48/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.341947718 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.347045773 seconds)
    (50/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.999484566 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.365071739 seconds)
    (52/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.394408065 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.372309342 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.373311088 seconds)
    (55/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.411877386 seconds)
    (56/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.349141441 seconds)
    (57/286) benchmarking ("sort", BigInt, true)...
    done (took 2.34955419 seconds)
    (58/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.40042692 seconds)
    (59/286) benchmarking ("sort", Float64, false)...
    done (took 1.550282919 seconds)
    (60/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.334851747 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.435390752 seconds)
    (62/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.360535926 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.458378067 seconds)
    (64/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.513601391 seconds)
    (65/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.366527334 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.47146206 seconds)
    (67/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.36450026 seconds)
    (68/286) benchmarking ("sort", Int8, true)...
    done (took 1.867960969 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.441380303 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.429996143 seconds)
    (71/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.365818021 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.069036578 seconds)
    (73/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.361419386 seconds)
    (74/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.011287314 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.470932062 seconds)
    (76/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.124186954 seconds)
    (77/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.027167288 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.362566396 seconds)
    (79/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.476798839 seconds)
    (80/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.122890876 seconds)
    (81/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.380387014 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 1.546983829 seconds)
    (83/286) benchmarking ("sort", Int8, false)...
    done (took 1.525278221 seconds)
    (84/286) benchmarking ("sort", BigInt, false)...
    done (took 2.348366679 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.450606667 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358716036 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.378313011 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.530332013 seconds)
    (89/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.354774602 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.370705647 seconds)
    (91/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.357491405 seconds)
    (92/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.4556112 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.478501005 seconds)
    (94/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.999353783 seconds)
    (95/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.370016531 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.118191554 seconds)
    (97/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.38013176 seconds)
    (98/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.351933288 seconds)
    (99/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.369047693 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.53688223 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.372615967 seconds)
    (102/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.724027878 seconds)
    (103/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.530912981 seconds)
    (104/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.428869151 seconds)
    (105/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.529394328 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.376382445 seconds)
    (107/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.071465589 seconds)
    (108/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366560845 seconds)
    (109/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.33670667 seconds)
    (110/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.484085936 seconds)
    (111/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.501425457 seconds)
    (112/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.537279017 seconds)
    (113/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.119444313 seconds)
    (114/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.477817794 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.372752947 seconds)
    (116/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.349473922 seconds)
    (117/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.46148427 seconds)
    (118/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.361041299 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.417830532 seconds)
    (120/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.430972065 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.405493548 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359633357 seconds)
    (123/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.507212705 seconds)
    (124/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.526958964 seconds)
    (125/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37543354 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.37643518 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.127388382 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.442491952 seconds)
    (129/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.350719146 seconds)
    (130/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.43174644 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.465920459 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.374787461 seconds)
    (133/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.36601644 seconds)
    (134/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.35128086 seconds)
    (135/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.399137482 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.365285655 seconds)
    (137/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.594545223 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.365430138 seconds)
    (139/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.354148433 seconds)
    (140/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.507633477 seconds)
    (141/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.381732549 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.443787754 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.468321689 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361994555 seconds)
    (145/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.353016 seconds)
    (146/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.436416813 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.017757067 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.412349737 seconds)
    (149/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.340867919 seconds)
    (150/286) benchmarking ("sort", Float32, false)...
    done (took 1.537767827 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.378300544 seconds)
    (152/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.356826902 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.452866058 seconds)
    (154/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.467247701 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.45844763 seconds)
    (156/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.359872029 seconds)
    (157/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.390147182 seconds)
    (158/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.371402156 seconds)
    (159/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.494880022 seconds)
    (160/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.478168935 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.34125949 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.546995237 seconds)
    (163/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.36923832 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.36689474 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.605899062 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.255681994 seconds)
    (167/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.455726195 seconds)
    (168/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.573091354 seconds)
    (169/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.439113136 seconds)
    (170/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.407679073 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.589214736 seconds)
    (172/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.015160463 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.370169419 seconds)
    (174/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371900112 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.592486493 seconds)
    (176/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.342871063 seconds)
    (177/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.46928323 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.362090721 seconds)
    (179/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.55816726 seconds)
    (180/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.38416938 seconds)
    (181/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.508083901 seconds)
    (182/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.368524858 seconds)
    (183/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.446627671 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.373603269 seconds)
    (185/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.560452566 seconds)
    (186/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.401691669 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.022535896 seconds)
    (188/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.362508085 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.366421012 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 1.723283875 seconds)
    (191/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.200422506 seconds)
    (192/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.493727961 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.371443443 seconds)
    (194/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.428261508 seconds)
    (195/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.35809925 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.472482029 seconds)
    (197/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364098308 seconds)
    (198/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.383519207 seconds)
    (199/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.518157102 seconds)
    (200/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.393438427 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.476037275 seconds)
    (202/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.564632701 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.4101624 seconds)
    (204/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372245466 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.451823695 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.382321723 seconds)
    (207/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.375237137 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.480438804 seconds)
    (209/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.461097471 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.387007153 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369888432 seconds)
    (212/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.380244262 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.447033346 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.367739192 seconds)
    (215/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.441876301 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.359750849 seconds)
    (217/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.43618165 seconds)
    (218/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.465957247 seconds)
    (219/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.417973528 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.34371744 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.399531012 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.0864031 seconds)
    (223/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.448654738 seconds)
    (224/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.513900079 seconds)
    (225/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.396734891 seconds)
    (226/286) benchmarking ("sort", Float32, true)...
    done (took 2.094672481 seconds)
    (227/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.138336714 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.382911365 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.136598546 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.396992108 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.602604824 seconds)
    (232/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.387603629 seconds)
    (233/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.370800655 seconds)
    (234/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.376536744 seconds)
    (235/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.436489346 seconds)
    (236/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.418101415 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.405128366 seconds)
    (238/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.653283068 seconds)
    (239/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.257422515 seconds)
    (240/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.576342091 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.426922772 seconds)
    (242/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.383254999 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.373941543 seconds)
    (244/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.446711852 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.404960031 seconds)
    (246/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.469012727 seconds)
    (247/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.57294126 seconds)
    (248/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.511982061 seconds)
    (249/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.41768813 seconds)
    (250/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.524147319 seconds)
    (251/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.403278886 seconds)
    (252/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.606370444 seconds)
    (253/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.438018448 seconds)
    (254/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.551717088 seconds)
    (255/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.561904344 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.412068156 seconds)
    (257/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.364432199 seconds)
    (258/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.374626589 seconds)
    (259/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.428251434 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.382283945 seconds)
    (261/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.358947425 seconds)
    (262/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.37794676 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.383579893 seconds)
    (264/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.082730513 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.386149362 seconds)
    (266/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.351253818 seconds)
    (267/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.596961393 seconds)
    (268/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.446514393 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.558455931 seconds)
    (270/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.357561118 seconds)
    (271/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.377038975 seconds)
    (272/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.362679973 seconds)
    (273/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.798351316 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.370837413 seconds)
    (275/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.412585627 seconds)
    (276/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.458110994 seconds)
    (277/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.386415339 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.58184035 seconds)
    (279/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.292335352 seconds)
    (280/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.392085428 seconds)
    (281/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.386381159 seconds)
    (282/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.430649553 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373001847 seconds)
    (284/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.385261822 seconds)
    (285/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.350999012 seconds)
    (286/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.306494407 seconds)
  done (took 480.207309406 seconds)
done (took 481.451883858 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.40567309 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.420173694 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.372738666 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.410720708 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.487000464 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.547737007 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.385706825 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.413245589 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.419862841 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.425055202 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.381139675 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.547828532 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.375760866 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.372215985 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.37355489 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417101398 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.362938471 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.369815692 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.393138221 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.412250259 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.394372838 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.3806175 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.423730226 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.553112244 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.377382809 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.379612065 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.37722346 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.394337472 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.487307966 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.378957573 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.378471628 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.387055082 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.369479968 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.375490124 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.370219704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.395802047 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.385035506 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.384605218 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.411617472 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.48968775 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.380286127 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.382190714 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.376869611 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.377400878 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.376050835 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.417317851 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.377731308 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.434650392 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.418710609 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.417657581 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.364311898 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.385791493 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.384440546 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.379425135 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.387918696 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.377293866 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.435477837 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423341769 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.395166767 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422903916 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.378498018 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.378316388 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.419958901 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.395887316 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.385060725 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.366847778 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.370395911 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.419010259 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.375915036 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.379786663 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.366553008 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.381690953 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.381641594 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.393283107 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.409580868 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.371099825 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.367320164 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.378608335 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.388237999 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.377137101 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.426459621 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419689922 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.428091142 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.378765335 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420158488 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.555142849 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.389153653 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.380856167 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.414774828 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.397034373 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.385566631 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.39130392 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.414180627 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.379092702 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.428227601 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.439500834 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.390972517 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.387818463 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.428040729 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.39042552 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.375502653 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.419680996 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.376098399 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.379683452 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.378893146 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.504544994 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.375580807 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.374791485 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.412427373 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.430217937 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.441378432 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.369005529 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.384700185 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.426465017 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.390727511 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.441895336 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.381743073 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.369947746 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.366428424 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.495903743 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.384303686 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.386210721 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425624177 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.442651559 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.382360749 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.381856302 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.376957885 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423626543 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.502137557 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.393215839 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.49182156 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.381473012 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.386786204 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.414760917 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.427233575 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.413370325 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.444580428 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428373429 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.399405711 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.383294315 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394013179 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.393426974 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385054909 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.43915497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.382304265 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.418120516 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.425264363 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425555422 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.414755566 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.503761742 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.385683428 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.373003475 seconds)
done (took 230.804252242 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.441441239 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.381189281 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.490937224 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.380201502 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.487031226 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.485060019 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.379509637 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.379795072 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.380566812 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.763678677 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.381126456 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.382870297 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.381691565 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.377822024 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.467535886 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.382484558 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.380330251 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.736199613 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.383682906 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.45390146 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.38347803 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.378655429 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.38268607 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.774809211 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.381213405 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.375958272 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.453622822 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.382816227 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.75226581 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.378225884 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.377229933 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.76238914 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.474740305 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.399986884 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.392285965 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.393401693 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.488966369 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.403046093 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.466900229 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.466786246 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.493515118 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.421442029 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.379097832 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.38061719 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.384736889 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.386704071 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.383634127 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.411735759 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.384748146 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.38329502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.731351736 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.39660018 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.393923487 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.38328379 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.383684448 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.402936081 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.382946344 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.387379711 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.477226006 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.38554 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.448950221 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.764202932 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.779637633 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.387283363 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.383689101 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.381962409 seconds)
  done (took 107.919376229 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.449251245 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.461872215 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.509180851 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.398137579 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.43932061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.512595108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.397840892 seconds)
  done (took 11.443039048 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.391330109 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.383607314 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.439419162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.436919722 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.385522003 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.602332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387909728 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.399092457 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.38398925 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.465848334 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.387585222 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387402904 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.397342986 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.384158799 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.431638902 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.399789797 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501596693 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.388386974 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389815094 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.540601395 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385262571 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.394699635 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.462922519 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.40105548 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.389500763 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.39442647 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.359410241 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388265731 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385489482 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.389451475 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.388481576 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.498305562 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.392438848 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.38794282 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.384167623 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.552158025 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.388135222 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385336882 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.388980888 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.391549374 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.389560444 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.390144364 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.392523431 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.389266729 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.390131702 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.414828931 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.42521296 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.392139814 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.3900567 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394226937 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.466965935 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391036632 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.388909594 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.388150965 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.470200624 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398686266 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.390009211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.388092727 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391686927 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.388732646 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.545488337 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.439843277 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.391669935 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441026316 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393665358 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39464589 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.393407096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.391817383 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48600205 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.391117009 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.442094375 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.389855712 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.624927678 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.418743103 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.395353097 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.397131652 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.395419872 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389378528 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.387565949 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.400056608 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.391493297 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.394624513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.399796026 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392855168 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.391602152 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.580003117 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.55154149 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.391852243 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.408177685 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.402148522 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.391743178 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.467075856 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.395826524 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.391746297 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448105853 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.51108685 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.472807716 seconds)
  done (took 143.793467844 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.398357065 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.403685425 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.39973756 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.417992597 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.39614996 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.394582004 seconds)
  done (took 9.692057425 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.395039093 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.398353213 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.396954998 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.395864444 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.396440514 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.394516491 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.397078087 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.398134582 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.40115799 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.39455356 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.397933732 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.396954113 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.398341199 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.39545026 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.397303589 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.396449737 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.3948169 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.393407318 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.396782181 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396052582 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.396131233 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.397736829 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.397423957 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.396815352 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.403841293 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.39523119 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.405229892 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.397223358 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.39676082 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.402570277 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.41909423 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.399051554 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.399436464 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.403715905 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.402205034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.401201937 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399469521 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.397676026 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394285863 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.399727142 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.398099884 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396499972 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.396861932 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.400367897 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.396489605 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.403663005 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.403644044 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.404959562 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.398849633 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.398683852 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.39787248 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.397881949 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.40226942 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.399893683 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.401638391 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422622096 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.404377413 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.401054617 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.397935255 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.400969126 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.401177651 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.400705143 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.40030322 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.403731746 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.398785451 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.401585225 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.402570492 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404156463 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399312316 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.400979081 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.400175765 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.397095631 seconds)
  done (took 103.059831426 seconds)
done (took 377.178164036 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.446832847 seconds)
  done (took 3.735218865 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.664719572 seconds)
  done (took 3.957537452 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.084679523 seconds)
  done (took 25.384606071 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.415421154 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.444340699 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.411111745 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.398112607 seconds)
  done (took 10.957170951 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.769079273 seconds)
  done (took 4.058237096 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.40375156 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.388272498 seconds)
  done (took 6.082358503 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.791534079 seconds)
  done (took 4.081844656 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.921273842 seconds)
  done (took 4.220549731 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.411972656 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.409040005 seconds)
  done (took 6.122233333 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.379052119 seconds)
  done (took 3.667298361 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.843609603 seconds)
  done (took 19.134555629 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.397313858 seconds)
  done (took 3.693596006 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.436929982 seconds)
  done (took 3.729215753 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.458974205 seconds)
  done (took 6.749203924 seconds)
done (took 106.858277649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.394871682 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.389831614 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.394003376 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.391231067 seconds)
  done (took 10.855032884 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.453459898 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.451063464 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.453650812 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.452128639 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.453331889 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.452849521 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.426031206 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.426629249 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.454302929 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.454396256 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.453830119 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.452148628 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.453575394 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.429158025 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.452730912 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.456443716 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.454353804 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.452771444 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.428552116 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.455336318 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.404830716 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.45534259 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.453826121 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.40437898 seconds)
  done (took 35.976534158 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.918979604 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.474101053 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.556409448 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.45273262 seconds)
  done (took 7.692799328 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.482311683 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.485238032 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.494444634 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.532839856 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.544599329 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.493735142 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.431851004 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.425688459 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.409996668 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.48080541 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.53294013 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.475630699 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.563259117 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.403662636 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.610555898 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.405215572 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.402280751 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.481969821 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.534727443 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.548314069 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.405621873 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.481037547 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.484317558 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.473883994 seconds)
  done (took 36.876784692 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412201157 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.418404223 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.401739643 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.420165046 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.402413359 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.406029423 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.40536028 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.411276873 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.40204984 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.403988802 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.40390906 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.418389344 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.410617775 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.405140598 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.412326214 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.406245736 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.410776541 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.40529717 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.405512573 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.413106323 seconds)
  done (took 29.4696518 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.396370745 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.398820579 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.751254473 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.657038584 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.400777655 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.39378854 seconds)
  done (took 14.292141455 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.487726246 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.657436871 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403515681 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.826068276 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.903469778 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.404948662 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.407867935 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.68926499 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.073838079 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.065943373 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.471980369 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.481778551 seconds)
  done (took 21.170494392 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.414499131 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.398410162 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.405331573 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.418337495 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.470354226 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.421766314 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.414375622 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.400177269 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.471539011 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.489040798 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.42317607 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.473724862 seconds)
  done (took 22.496787249 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497405654 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402113161 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40205492 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48151155 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401226728 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246842221 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413151262 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220508433 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.426888828 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676528373 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40327502 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499912568 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659738958 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408448155 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402548035 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.391017383 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635707322 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96598262 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401068531 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403187209 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452972782 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414130418 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419952162 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658119751 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405863599 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403621371 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.662130469 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402874006 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.742427463 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418298053 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414062218 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404859721 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676317076 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144314286 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523385467 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656848426 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411711144 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401306022 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.407737624 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.402922275 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433987944 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40593083 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416460166 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406085095 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401590176 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419621318 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236471795 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.428069021 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.402998551 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406658986 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720435914 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505485777 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.408691373 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407421759 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429003584 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406009559 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.409883398 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508215475 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991298641 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405918528 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407491357 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.406511858 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418503995 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403918971 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103405571 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.409586293 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.410944195 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410712025 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407787506 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40242227 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422383349 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403909844 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.425925283 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407338707 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238893147 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424976459 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409643243 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026975949 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410603129 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.408410856 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643842968 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407731178 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406650823 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.404274746 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408783858 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246234923 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420242595 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.392049218 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428804227 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.22577506 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682904039 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42918437 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43839945 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.634474184 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.390438095 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41014866 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.424265366 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410039086 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427172566 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229829437 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428055443 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.408758601 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670625755 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.621031445 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421256199 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.408523613 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975896295 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427362517 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.422963504 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41743507 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.664518626 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.124185353 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428936446 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409747646 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429248151 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409885619 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284521948 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417311901 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.51048028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409273133 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725994267 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.338828911 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410590044 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478052199 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414391726 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409608156 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410009126 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414144024 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4085168 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.656117349 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429247095 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.434863316 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.412317532 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408843435 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.421097106 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411357334 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.414832199 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637121891 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408285588 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6818012 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413340654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413744209 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406911815 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.629127648 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.412295375 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.744023333 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677746726 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410633034 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424504873 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435871746 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431597178 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517323902 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435730889 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.412843577 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.684528525 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.419333934 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.418165616 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412984585 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418430236 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419454207 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.419352588 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438036318 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097664613 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418923091 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416080644 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304682089 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.426749613 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482996226 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419196036 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668372273 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.423940668 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434362484 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.416348317 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.412180924 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65827067 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42495249 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.414928898 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492024059 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.978254021 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1231095 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430138547 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.41402113 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.411657406 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.412667384 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414476078 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414834413 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411471366 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668414864 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431189596 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420087947 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13283643 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415992211 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413919598 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.423518112 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428358336 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.422026293 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415528914 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.417122429 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413764338 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417744861 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.423945028 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56155191 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.430405887 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41682645 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933660634 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421852152 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416128162 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416336631 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450646279 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415218641 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405678727 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683035089 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437545002 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729628121 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418625589 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.43312277 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.415747491 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414722853 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420192013 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.435774109 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421524901 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.430029452 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416800189 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418893986 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994543627 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290106982 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052854071 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41852844 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.435681456 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412983032 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243573062 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435784569 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417323985 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682573014 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256899937 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436980186 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981302476 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.442025034 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292583234 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729279708 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656289332 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418344059 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.439059486 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740056286 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634481926 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45315558 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434301466 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419649274 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.400179298 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094178289 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454581626 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502162907 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25033046 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440783402 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423946519 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.46569863 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419736904 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903979088 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438933901 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418672149 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41414745 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421780687 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412092317 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428220144 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419044304 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146373428 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430074197 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.989268335 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43935355 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.679391276 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.435432431 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.424768632 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.417678005 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.449973033 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.673548396 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736499231 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424517412 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435326607 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07933988 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.290809119 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.429052185 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422329873 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30204107 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427251848 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763639087 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.425944532 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.418424458 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439764899 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423256283 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422046469 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.421284933 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428117964 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406109649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982256448 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.424538484 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443644867 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419525016 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423008504 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682998118 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.439372889 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11868144 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657297155 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43943107 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446142959 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.430895717 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429332822 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.412443273 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425437944 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423318075 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447513746 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650785909 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425093302 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.409678468 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.518243867 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637932502 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42282723 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.42930877 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715166402 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.424877301 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.445951213 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295705031 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454860311 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424238071 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429304993 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428005465 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442817004 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496243854 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68770286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.438392315 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.437839279 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910558191 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452909407 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428351713 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.440705702 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523005955 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425675777 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.44036031 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.195043358 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126793814 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350983814 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153117362 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748808341 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428543085 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436242303 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428216329 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584816979 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428956303 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703564542 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427834494 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.422136766 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46570266 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43292077 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430788365 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636070254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702681698 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426924391 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438157859 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422577187 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.429083685 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439722225 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.640299144 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997898235 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05193184 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424967458 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433146472 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258760873 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725530011 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427275332 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427356969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428784741 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.428840812 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.446557496 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.433684476 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435760208 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575993446 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748416074 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185770101 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45932119 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.454577502 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.201945062 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426707933 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.690731872 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423475318 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.700325787 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105277382 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225774001 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693117995 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496348135 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686970214 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.428549185 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591534624 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.437220048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424875643 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42578765 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429041845 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.428028121 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.439910707 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131498288 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69498526 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.431970336 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.437054002 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456653752 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.439397632 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.656718965 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241137305 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652457901 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441422623 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437801454 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431650005 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131152587 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745049309 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433070291 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.430323029 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718088331 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433143422 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455383268 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.948602137 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.425852286 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056706579 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.402559937 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452350969 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430958801 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29075275 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153154228 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438323558 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000702241 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433772709 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429818746 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720431018 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.436159117 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428004633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719694542 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.432565397 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443266631 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682073356 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.114915314 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308557405 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.429358806 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440175003 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.428285921 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432657299 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453883394 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429440265 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424804362 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.919428983 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.448469423 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42820609 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436257393 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.439553147 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443591768 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.422159373 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431351043 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.431088115 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.416143874 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.420455796 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.443851862 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521155054 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092625656 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447579937 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.103262355 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.760178417 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.686574447 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44115961 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.411212191 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.432535448 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431250482 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429319257 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425952515 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428136705 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054002411 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.439791978 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.436061384 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43496279 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.428791634 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643848772 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439493636 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679031117 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441758716 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441413896 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.417273341 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4316205 seconds)
  done (took 1005.53225376 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.46734305 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.440436914 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.436421354 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.481923763 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.464707239 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.550889128 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.441874083 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.463258902 seconds)
  done (took 21.069823138 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.449641696 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.440794848 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.448003393 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.439387757 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.439077364 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.955894668 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.452290246 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.444290717 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.449046969 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.44216717 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.439147085 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.419332551 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.460705963 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.452467086 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.430940546 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.440952933 seconds)
  done (took 33.934225823 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.805264947 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.686502317 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.060771621 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.503392489 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.477871687 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.430181953 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.796927687 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.466086657 seconds)
  done (took 28.555332715 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.445430543 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.444902545 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.444307571 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.443894226 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.445816711 seconds)
  done (took 8.549604571 seconds)
done (took 1277.760767859 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.438869876 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.440174855 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.437610946 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.44018293 seconds)
  done (took 7.08151702 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.418870749 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.417974421 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.420874596 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.433273266 seconds)
  done (took 10.017670415 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.240715515 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171438992 seconds)
  done (took 5.738162674 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.945017693 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.94712382 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.947965705 seconds)
  done (took 7.169229932 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.747302465 seconds)
  done (took 3.077837887 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.376125202 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.341057749 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.137814919 seconds)
  done (took 8.185259135 seconds)
done (took 42.593374182 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.45500482 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.69295955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.595488036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.441739739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.603114266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.602867673 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.209237407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.447368819 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.443196998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.438741663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.470145633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.596144721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.195715674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.691814967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.195296382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.692782883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.600524252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.438777763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.437800827 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.436796626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.202223919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.452621655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.448892906 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.434513349 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.59553329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.583561177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.439698186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.690504413 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.448063136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.444307508 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.581259291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.439971617 seconds)
  done (took 84.774842618 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.440333132 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.43634007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.435747981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.462577865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.434501134 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.435737404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.457582381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.433564128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.436396079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.449917923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.443116199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.436020895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.467006181 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.437588112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.470234626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.436799539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.464840848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.435679231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.453015716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.436361725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.446945504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.444631448 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.437909783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.447334945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.436254823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.435599806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4673611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.438394895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.437350493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.454949328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.456681078 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.457495563 seconds)
  done (took 79.597020761 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.454130883 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.44902742 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.447788067 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.44203288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.441879576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.448415026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.439623879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.439353702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.43716974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.437029557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.459532851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.437449552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.439217553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.440015449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.438843947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.454738139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.439409681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.458905107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.459783052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.456650219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.441235187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.454132657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.439667771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.438588707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.47381512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.439242075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.450502608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.44517336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.438398101 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.453514425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.445138223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.445105742 seconds)
  done (took 79.61906832 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.725722185 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.449440158 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.453359807 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.443912563 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.45119283 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.452109083 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.446003141 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.730332013 seconds)
  done (took 15.488052102 seconds)
done (took 260.805243857 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.441714899 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.437904367 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.661689625 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.47188255 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.445126639 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.493168412 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.471900168 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.696366235 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.46220704 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.691775855 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.473453088 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.468198883 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.448813673 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.464059523 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.751487531 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.608259821 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.45013336 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.439695138 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.81880192 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.461879796 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.731356144 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.44541854 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.750411304 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.447194231 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.467906316 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.443981728 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.441002208 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.417899172 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.48641216 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.83318032 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.455625768 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.427080873 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.541954463 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.563559899 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.68493771 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.624605594 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.446636497 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.540720134 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.689722704 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.443930529 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.44430559 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.251666536 seconds)
  done (took 86.571539118 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.45477403 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.570684459 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.455363426 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.454233956 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.45479596 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.571225102 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.551155043 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.453326338 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.45541575 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.454047155 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.457255481 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.456600014 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.456380046 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.456971206 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.457693424 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.456688215 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.456426684 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.458221015 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.460847373 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.504971425 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.576576021 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.483875876 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.450870632 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.455976668 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.560700904 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.593048462 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.455686635 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.447671668 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.501454261 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.460401766 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.460456721 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.5035255 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.460261136 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.458092978 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.57116624 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.554492728 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.478738135 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.453915319 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.570308726 seconds)
  done (took 59.335526649 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.460264299 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.730975571 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.944112607 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.464326151 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.456919406 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.463063494 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.550666501 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.459051398 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.462971867 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.460945605 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.643434814 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.459477349 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.500096928 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.957424687 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.462906862 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.45959208 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.461280706 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.460820289 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.743394337 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.470883148 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.570298761 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.462838566 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.550255089 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.472335131 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.48565099 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.460390035 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.467832201 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.062634636 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.46469088 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.644288125 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.374541425 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.548193605 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.00401539 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.944733678 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.411000777 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.463781442 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.462577071 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.646983757 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.466876967 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.462147534 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.552219452 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.462177133 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.94431895 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.160275375 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.482935616 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.463808803 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.092222684 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.651165928 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.744887692 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468754735 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.974919024 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.470590377 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.462913848 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.465548738 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.7524978 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.468804278 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.462884018 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.115843134 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.484426153 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.555963854 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.466111623 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.465577418 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.746487143 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.463332197 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.735205168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.467349586 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.474151864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.485721525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.948950792 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.468651419 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.171549846 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.484251927 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.464458606 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.645878258 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.735091826 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.13020726 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.486415582 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.741163787 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.015305154 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.553714025 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.467026954 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.060123772 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.556366842 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.47051134 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.468115552 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.468258409 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.462923412 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.512447085 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.551281257 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.098217547 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.167217453 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.136132058 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.574131207 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.473472877 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.468561286 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.120316861 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.482162117 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.468403286 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.946239623 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.171990935 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.487253241 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.475477304 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.18815775 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.488522075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.557102788 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.472515486 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.956896903 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.467537004 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.511847063 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.468608734 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.47535869 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.49186631 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.562118081 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.472307463 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.470026197 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.165280901 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.674779347 seconds)
  done (took 193.741762292 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.461744594 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.457099227 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.46330687 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.457019121 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.460321042 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.472999469 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.46163767 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.463334444 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.469323929 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.461264133 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.462207289 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.465242905 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.464267414 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.467252462 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.46978394 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.470482579 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.461494697 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.463553925 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.466848125 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.459905926 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.463761059 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.466417253 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.463324495 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.458982444 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.465080592 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.466458401 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.472122098 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.464422923 seconds)
  done (took 66.350525077 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.468330966 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.140045068 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.473901178 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.623688316 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.496694947 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.468661108 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.623219268 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.534254838 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.473772736 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.468534361 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.46976994 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.825459186 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.466079907 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.082084005 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.688544158 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.622206237 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.05092876 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.485379316 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.467774751 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.46957239 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.624470755 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.482775886 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.813015375 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103213229 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.468147884 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.11033523 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.455628615 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.472883079 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.471355588 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.111856948 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.463627646 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.810746459 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.556086399 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.541376176 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.108652588 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.081443259 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.101535395 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.636753041 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.466262123 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.470099196 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.469610542 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.461982301 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.110492334 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.469314584 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.473305481 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.103496519 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.482538562 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.472822761 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.47510983 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.471794508 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.542556364 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.541711124 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.817938563 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.186717759 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.553132754 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.486223004 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.623545593 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.828857478 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.472894693 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.070675063 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.47372887 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.111388143 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.488287437 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.464172798 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.472469746 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.477766299 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.645534876 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.62153366 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.052983833 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.486543638 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.058688703 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.661964867 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.474313585 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.469233516 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.476076271 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.116511716 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052964389 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.659590691 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.631735573 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.69971103 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.465659147 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.47384286 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.463144819 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.567524529 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.473618027 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.115400324 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.070919707 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488922982 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.473265518 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.474761786 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.475897079 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.681630892 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.135490584 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.56320141 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.054943478 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.832306409 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.814679004 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.472426642 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.544642188 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.492569787 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.889638317 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.473850769 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.542622398 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.917484018 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.81851795 seconds)
  done (took 176.591282607 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.745645069 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.490371666 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.578779688 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.642166668 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.122466162 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.098051618 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.47012209 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.613464047 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.593879657 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.762847169 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.479529409 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.566220233 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.721667054 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.57051992 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.248509227 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.552520178 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.57945383 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.636996299 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.633547741 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.481089712 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.177184102 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.797508964 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.682616422 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.492670781 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.617455076 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.306749127 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.081104494 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.048406816 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.677891272 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.466974875 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.043985811 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.489974481 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.477485605 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.193404218 seconds)
  done (took 68.501557046 seconds)
done (took 652.427725106 seconds)
SAVING RESULT...
DONE!
