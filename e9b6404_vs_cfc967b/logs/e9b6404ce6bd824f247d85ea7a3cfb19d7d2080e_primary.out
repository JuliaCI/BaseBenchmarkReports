cset: moving following pidspec: 1314
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.248492833 seconds)
loading group "string"... done (took 0.465618033 seconds)
loading group "linalg"... done (took 7.594431115 seconds)
loading group "parallel"... done (took 0.172911555 seconds)
loading group "find"... done (took 1.163414507 seconds)
loading group "tuple"... done (took 2.117324113 seconds)
loading group "dates"... done (took 1.335340873 seconds)
loading group "micro"... done (took 0.247725352 seconds)
loading group "io"... done (took 0.651940354 seconds)
loading group "scalar"... done (took 41.875579447 seconds)
loading group "sparse"... done (took 12.969819758 seconds)
loading group "broadcast"... done (took 1.168959762 seconds)
loading group "union"... done (took 14.269792771 seconds)
loading group "simd"... done (took 5.113131984 seconds)
loading group "random"... done (took 10.263722346 seconds)
loading group "problem"... done (took 2.005606413 seconds)
loading group "array"... done (took 22.981461571 seconds)
loading group "misc"... done (took 1.435069438 seconds)
loading group "sort"... done (took 3.569509837 seconds)
loading group "collection"... done (took 19.586949259 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.51314541 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137534931 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133262301 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146701382 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202649032 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141636884 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157373677 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113636841 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.948308499 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186272143 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154375197 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.508407371 seconds)
done (took 5.089926737 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221791022 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092369993 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104437567 seconds)
  done (took 0.864019522 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07758429 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144634564 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093982788 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07865329 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094711333 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078842322 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09481224 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078596047 seconds)
  done (took 1.340301603 seconds)
done (took 3.181676701 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727544578 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277979566 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201695413 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459263526 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.199440355 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213312279 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675212667 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34797082 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251039931 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098944873 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14244661 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384042807 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137307985 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679217523 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092166759 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123874052 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177392611 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451518233 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082125979 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.1107364 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115628814 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140815202 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129117359 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09298571 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186342207 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082070785 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191366854 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107883624 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079258638 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287538771 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201520904 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687121243 seconds)
  done (took 10.846134483 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110510067 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133370894 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098429309 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138648302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134454822 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100865985 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084897427 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096725616 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121861271 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176655427 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11537437 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136498373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096286564 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082881678 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115877179 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244796883 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119707312 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10472918 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100552 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103998862 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121914792 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113622846 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109572558 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093798169 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16784326 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22163426 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112939745 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126328076 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098132944 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11576708 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144672484 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143564658 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095352467 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080949722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173051604 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125336323 seconds)
  done (took 5.147584809 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189534091 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121744125 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16973529 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164887666 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14116275 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161290679 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114233085 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24685251 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.11789003 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163157394 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142548222 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116605893 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080858546 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099022072 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095677835 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.614278401 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164922396 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136237428 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096946452 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10812118 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10097971 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365520579 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103805412 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08101288 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098934368 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066796047 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160070027 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100055552 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.132183377 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121580292 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083015659 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134927102 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210564421 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10937239 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134315683 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096587743 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.11053161 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098640455 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179214222 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107315698 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080435215 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121178128 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133502886 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118423019 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09943716 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.123285493 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205540089 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099186795 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0791891 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115293798 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931986468 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179939232 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103581929 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09644967 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325003527 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101204521 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098557131 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078049434 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095005881 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256469829 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191783259 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080602204 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097669403 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094629537 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084565604 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384955899 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098670028 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.747856473 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083604786 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106784591 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084174431 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097611944 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103959863 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088720411 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115079487 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080073284 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099658392 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079991953 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097400709 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082872941 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109776046 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103666039 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081040333 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164753922 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080352851 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115295783 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126963751 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085112433 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095256136 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13100178 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084076549 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098045191 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134749982 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081229788 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110117477 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100050677 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142680849 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081987038 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.177090988 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08012619 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12559071 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099853831 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115781129 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113984806 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099443664 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084739618 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095360868 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077501828 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095854591 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148375031 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094899329 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081289556 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100120429 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110264574 seconds)
  done (took 22.629904942 seconds)
done (took 39.300074259 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.333705866 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102583523 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103458392 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101938313 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101004165 seconds)
  done (took 1.486696884 seconds)
done (took 2.206331859 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29908041 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172412756 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094328498 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168732902 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094509544 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176174634 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162500517 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112049392 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219103352 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077200755 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165800005 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094044626 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077489108 seconds)
  done (took 2.658759577 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094642414 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115752901 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082452906 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112397224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076657437 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112257763 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092534772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11831083 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109696596 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084838258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094331956 seconds)
  done (took 1.81385033 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094116119 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113009036 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082469292 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110756484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076997667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111356434 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093762153 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116400727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110113033 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085557815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093714579 seconds)
  done (took 1.80714298 seconds)
done (took 6.991841575 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090167986 seconds)
  done (took 0.80316271 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.918466439 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.795065219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113247755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150911698 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.307412477 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193462328 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47184301 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126200564 seconds)
  done (took 11.004519174 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.146495801 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085404408 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103339879 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083953582 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100957821 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086714842 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103781854 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100129002 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086232771 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100693658 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083080872 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100400434 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102338987 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082873352 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102015334 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086966513 seconds)
  done (took 2.335944827 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120311128 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119370265 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107693039 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109611255 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087456985 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106517692 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107456006 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088968423 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101711071 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104154334 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09141731 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105456759 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10470615 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08035336 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105393124 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10879719 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086699888 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106814498 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10700348 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091194055 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107206633 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095750057 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087242608 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106910488 seconds)
  done (took 3.265801203 seconds)
done (took 18.127842267 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15790619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110248231 seconds)
  done (took 0.98936438 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094784395 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113704697 seconds)
  done (took 0.937202948 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097070848 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096737372 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122883451 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109833482 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081008797 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096985034 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121231882 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081465572 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098001741 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081223203 seconds)
  done (took 1.716458386 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082790814 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110383046 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103236235 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096662081 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105543774 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095480517 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08893818 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099788837 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111609222 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077714503 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103257756 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115166724 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086143763 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116494317 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10656628 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083986355 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103120828 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100097568 seconds)
  done (took 2.519341708 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078884082 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098301394 seconds)
  done (took 0.906028875 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080519969 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094630587 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081694187 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097981981 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094884682 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078060115 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095095103 seconds)
  done (took 1.351094247 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.475482606 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137791283 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25741005 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085730581 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120940989 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303122519 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099098482 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086119201 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104561626 seconds)
  done (took 2.458142997 seconds)
done (took 11.606533722 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092500494 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119245071 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114582535 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46757672 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108028439 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097205383 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161191246 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25124564 seconds)
done (took 2.147164638 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14788993 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321685686 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115236471 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068310101 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096467414 seconds)
  done (took 1.338779437 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078721499 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10097266 seconds)
  done (took 0.915401615 seconds)
done (took 3.142321928 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080308651 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0981995 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078636744 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098140422 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077972606 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095429834 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114729525 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099298012 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080815791 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099443914 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09693474 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080876869 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097858914 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080684017 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095818415 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078608423 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097690222 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078246847 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095674888 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078925124 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094902487 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081462064 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095575063 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078358134 seconds)
  done (took 2.926413926 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098135099 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099185409 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102850046 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086114515 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102448035 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086855421 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103356957 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098495297 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087184764 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100251941 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101508645 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084989382 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100571453 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084381654 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099296811 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101890545 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087025926 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098239554 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084540521 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101550835 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103989389 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081714875 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101567699 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103665823 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084908162 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101867855 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083754868 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098042946 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102843014 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084659166 seconds)
  done (took 3.596054482 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08344851 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0952477 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078655405 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102576936 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078202083 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097156898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078136804 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096465752 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079677741 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095270871 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080288635 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096095011 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079293433 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097008752 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080005729 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099525811 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108411853 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080014889 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096238637 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079160931 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09898144 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078140615 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095751933 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078412171 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096224831 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079021175 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096704904 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07880886 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096027967 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078966608 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098838824 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082633549 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095968825 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085223058 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100696924 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079232952 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09989821 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095913406 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07982396 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095839801 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078682781 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096406065 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078483273 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102807531 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07969815 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09775306 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078796556 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098068678 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079995178 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09844446 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078445362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095112407 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081603975 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096296908 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0998523 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078777154 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096908688 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079203933 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097561719 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079124516 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095165155 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078595231 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098074085 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079580331 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111661363 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086064367 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096128478 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081347594 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097209088 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082059817 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097706749 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110252798 seconds)
  done (took 7.20132137 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082768062 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106963317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081778034 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097804328 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077486131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096973797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10008726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079364412 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09799697 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086947702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096349258 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082102223 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097852327 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109365342 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079470054 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098458694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085695442 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093787169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079954219 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099443458 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079877835 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100454746 seconds)
  done (took 2.756189083 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205855922 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10580011 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143147776 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108188453 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083696176 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106744923 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103537423 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087546105 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102701803 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084593463 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101025485 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103732606 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084535707 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102208759 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101518663 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085890589 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103357647 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086025445 seconds)
  done (took 2.648610258 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092874918 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099669573 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103369429 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099441865 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100405911 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084674964 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104997606 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108953257 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084518493 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099289481 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09213765 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100485651 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102318987 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08203589 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101654086 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083007593 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101766685 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082921013 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109579277 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105261279 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105073595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092697034 seconds)
  done (took 2.887601378 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095979001 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102259567 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118651229 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084796366 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096190704 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080708416 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106518211 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082936369 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107788462 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101263292 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08260461 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097675936 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089664384 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098484595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105161177 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082788441 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101885715 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083099508 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101242333 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07748625 seconds)
  done (took 2.649985818 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101387654 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100999603 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10079348 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092476605 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10054441 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083366461 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110502907 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100607079 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083782388 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124715713 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100419159 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084131517 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110484412 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106495844 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100938438 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092980191 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11001673 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109885489 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084403097 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09988776 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125685339 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083498766 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109690316 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208553571 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083495348 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100883918 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100806032 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08945134 seconds)
  done (took 3.655354891 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080368234 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099874548 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08000878 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097326506 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07998945 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098444418 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080394471 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098004178 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082741427 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097169079 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082193216 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099892046 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082031692 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09965074 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083101228 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099464759 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084638992 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097967925 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081179374 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097682916 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082529303 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099514388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082095395 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097473461 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080063821 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099906775 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080086101 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098093518 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082395993 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097530148 seconds)
  done (took 3.458980223 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090630146 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107251019 seconds)
  done (took 0.955237262 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077579362 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116341955 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080469623 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104778155 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088002764 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101699057 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108850729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087867492 seconds)
  done (took 1.520248349 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095297521 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111823776 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085074214 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113438753 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112097447 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096971581 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162319298 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101818177 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088429453 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098915964 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11547406 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081560864 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107366896 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083916675 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106619185 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090266621 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098164973 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088771683 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103484739 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099929987 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084146625 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111871675 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085574735 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097689474 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084744887 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111936047 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110404544 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084683771 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103956825 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110202765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089988125 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095055864 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084095391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102763513 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081491401 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109458445 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113784603 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08678756 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110422312 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085050581 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112307281 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096309907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088275192 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106986324 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09418844 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100768946 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084746211 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095917905 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09805805 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085746078 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096237923 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084177811 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09519758 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090565557 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10552055 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114962922 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081759918 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103491208 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086973863 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10398427 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08968567 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102965337 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086927237 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100115935 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108943305 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086897981 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108189529 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07877564 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095328508 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081057734 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10926624 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124487271 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092285273 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101809773 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084524042 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099335465 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104675272 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085635229 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108116208 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09144077 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100931449 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108034104 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091735178 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10076472 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086542925 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10938475 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09997629 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085123468 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098471175 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098377449 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100198969 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081954921 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098760872 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111038188 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08703363 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100947342 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081412363 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108976418 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079958157 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102843425 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085803714 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102584983 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110899395 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09016585 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107061079 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108477706 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091459673 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102337492 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086993903 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099006988 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085102716 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10393059 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108283707 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077523214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103984541 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085929171 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103271419 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091269806 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099083693 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083596258 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109783144 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108400623 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082420419 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098213467 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087168286 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101427385 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088277626 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109018341 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100370682 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079237599 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096956492 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087954578 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101374513 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088917345 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106575036 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104823522 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078430579 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099425134 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08853796 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108525794 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102175676 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083766079 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106241565 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084278603 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101895086 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089686583 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103780278 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0826312 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10599171 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10312165 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07934675 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10545573 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086895466 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100393897 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087528003 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105006145 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104586891 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084808611 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101156615 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089659863 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103370818 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082977613 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101074173 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099482165 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093416815 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103937861 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080394123 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098901349 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09179225 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100235081 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084065347 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101560923 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104681988 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084708331 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10011771 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082726754 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102917925 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115418851 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089271906 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103267952 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089039822 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111733091 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084543417 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104231695 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102075427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084975176 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103268568 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091424617 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107663519 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108399735 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086664584 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098859759 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090640048 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109724167 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083667258 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099492478 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082835175 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106810736 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109839295 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08853261 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103816419 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081667634 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101909382 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10659947 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087185892 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102206502 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083309049 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107698082 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083375221 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10946754 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103867917 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094352782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105443373 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08008103 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105906543 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099793971 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090650296 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097819321 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081787607 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10111146 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085632888 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10141472 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08742104 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096415305 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109536811 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092114292 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102813158 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083269786 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103571083 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094182005 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103101279 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105505215 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087471156 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107798128 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098417071 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101385654 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087488802 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111111631 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103332518 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077702363 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10737859 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083425926 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101776504 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083365107 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10053156 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087548985 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111665876 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107426371 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078555397 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105655895 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083669837 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100970266 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079995158 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109742466 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106372874 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086393157 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111620494 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086320239 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103668801 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106873947 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084760106 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103227058 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085785608 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105914046 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08574399 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105309772 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083642156 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105051721 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101623509 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082613046 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10478771 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085266753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102010276 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091066667 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103847166 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085046977 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105754195 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104224558 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086102441 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102805991 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084239471 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1055586 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085850866 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103326454 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08719652 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098644841 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110076776 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085444608 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110892866 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084399486 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099207078 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090602617 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10563659 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.1091568 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086620191 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104806167 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086244469 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102655704 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087353317 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112462212 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101191702 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094057297 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109435845 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085537719 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105999434 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084483041 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104750419 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101919703 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086100255 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103557495 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085461361 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103516862 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089887415 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106002627 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085860883 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105148322 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10415867 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085205275 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10499743 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079923503 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102848479 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083594827 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103200139 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111167571 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086574895 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106515908 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083716556 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104475291 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084450491 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099733677 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092998695 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113434797 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103695432 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093084777 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102140303 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104532422 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094659432 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09718852 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083152852 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101160282 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08325982 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111157568 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087597211 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110373866 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103008979 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08407407 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101101066 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085998432 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101113345 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080671001 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10179237 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088228136 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105723273 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083501896 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103358973 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106317004 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086386323 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110784725 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084797818 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105025876 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085971081 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099991387 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083843164 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101912927 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106611321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086471846 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101477003 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083196813 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102667067 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086686119 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112028877 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085007742 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105742603 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109946211 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085148899 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106655774 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089203356 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098428974 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087801786 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10314684 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08510694 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103049954 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10701718 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089211082 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104623966 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092781428 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104040251 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08599687 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103505001 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.1020683 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08482295 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103466258 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085511123 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102871021 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087234178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111670643 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083200065 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10615694 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10359704 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085836448 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10851508 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08656594 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105406256 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112679016 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088502944 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105728574 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091735923 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106647634 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088388048 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105051804 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106261132 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091389437 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102880096 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094114404 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104082251 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086377845 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104338848 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086581663 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102494137 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103396725 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084236336 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10792104 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086970003 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102648718 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084137979 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102421623 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08728872 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106894295 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111268284 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088098458 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106401947 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080448353 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100526662 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086788274 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101363313 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105405365 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088636869 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110104304 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088660305 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103200293 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085429461 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111428911 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110803742 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090469756 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102155163 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090190256 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104975243 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088528225 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104605213 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085498477 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107714222 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110378778 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087341427 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103514954 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094047412 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1088047 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10571087 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087398236 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104413837 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086160346 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099175828 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086960105 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107384919 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091580682 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105964496 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10417381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096194817 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10425056 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085877413 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108951399 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084741991 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109954482 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099320501 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086265403 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105815376 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088189414 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10000637 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085361683 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101347767 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087834337 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103955165 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081201037 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113845884 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112214372 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087523666 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10331623 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085185332 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100132211 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080901882 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103432037 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106304649 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087206995 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112920215 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085514389 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103488109 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081067938 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10487535 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088756824 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107109577 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101517059 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081427012 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103745169 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087831037 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11193681 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084451605 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104034007 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089761708 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106538742 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102230726 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09020611 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102246434 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090021433 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11489865 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086693163 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104992493 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109490146 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094775051 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10635669 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081686297 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106172778 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088486455 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105098345 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105509973 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088271491 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117891443 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088864051 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103901039 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084798873 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107613642 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104286877 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09304351 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106177208 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088114852 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109146668 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087190156 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113991012 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10665508 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092103127 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106870646 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087966077 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10529081 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105433972 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085074178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103428845 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087562822 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106603477 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090833772 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112040058 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104372237 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095588814 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113072123 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090350475 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101256973 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085807644 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104781676 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081937709 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107460881 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103192626 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08422985 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10304393 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085619209 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105247254 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091820194 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106365316 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087428368 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106034499 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099883925 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087731976 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107668353 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087374567 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101858924 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088256072 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105324929 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092730889 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11077406 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105483449 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08803089 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106762684 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08719319 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100451042 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092531418 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104748784 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089033109 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10341376 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104872102 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087922449 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108826539 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092573325 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106017373 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088572323 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117820035 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108043095 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083301979 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102270452 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091785715 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103364547 seconds)
  done (took 58.746545829 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144564333 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082002406 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100143028 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082361845 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114762049 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101681628 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081569759 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100809459 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083766241 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103882999 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082281345 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10087952 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110992044 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127090066 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095902707 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105990294 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100550391 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083476673 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100450362 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083049678 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109558511 seconds)
  done (took 2.900660351 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103460026 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11843674 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115204661 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120983802 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092497337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11721437 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115487087 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116995547 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102010699 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11077725 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119288433 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117116376 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093529332 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112675084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111926002 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095663358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12115635 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111622588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117672859 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097254485 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114265507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114964397 seconds)
  done (took 3.244211378 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084430725 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104818255 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08761879 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099490069 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086355037 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100217461 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090356578 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10187996 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090086614 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104384648 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084777503 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105061723 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107237775 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081813434 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104197618 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084550982 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15196043 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108965031 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085591705 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107026383 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.101008937 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08872761 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100867746 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083038647 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104758205 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091048277 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105526077 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085113389 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105431751 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085401271 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106715719 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083282509 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107929387 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106384619 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086135095 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104565721 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086913569 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104838121 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.08186868 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104213462 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087571849 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100761741 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087069121 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107021371 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084261729 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103060109 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088107384 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106073038 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100392593 seconds)
  done (took 5.564880507 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102900336 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163275029 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08821324 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14470815 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121956939 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114875369 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088897458 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144898746 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103926906 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085393477 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123581005 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122311669 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10518957 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092764119 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112527004 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106217433 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08945885 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104465056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.11134258 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086336838 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110155964 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093592786 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123059972 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119135568 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109781856 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084940945 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104888675 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110196863 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099731534 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111573864 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110649945 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092743715 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12373357 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110701137 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105573625 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090565278 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124035384 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106533916 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09024618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102859259 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089853629 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111494608 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111790945 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12441656 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087790051 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109812764 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086724575 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103011784 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118654689 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089887413 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114403137 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121741576 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109580626 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086412181 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110263822 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121385852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087803338 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103753851 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109830303 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100612601 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104329847 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11025862 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102225977 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108225172 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114101812 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10073038 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112231139 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109020572 seconds)
  done (took 8.251556294 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093128825 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111194527 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12193257 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123085489 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094163608 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113006391 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112900442 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094336245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113401916 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11930562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112687107 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137190103 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089870817 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117088785 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113889853 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094868711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113426751 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114024274 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094460796 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115190248 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112831679 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121975695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093980097 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122223846 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143832537 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108668098 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093418206 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113229599 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122236452 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113267869 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126175578 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09504801 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113748385 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122564245 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124169402 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093742108 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105179603 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113123154 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094966177 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113512759 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10871193 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122746041 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094310185 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108265877 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114163413 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095104262 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122497181 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126257694 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116164677 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0995162 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11422317 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123693122 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112773892 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094233523 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123001822 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149090701 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122747895 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121557794 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113223019 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120406231 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102167787 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129799419 seconds)
  done (took 7.797518424 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107637825 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114653544 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118054198 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102604974 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084394288 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111968895 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085787643 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103843123 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115862312 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097605577 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119191832 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111641626 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114942952 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100233807 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111563998 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113346166 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091753664 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111295518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116070393 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112217175 seconds)
  done (took 2.963726973 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092558101 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125007337 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087670807 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114671193 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109192736 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093345026 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109537724 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110044961 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089383943 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111084614 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099326042 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118425922 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106926106 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093853078 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118187012 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113319422 seconds)
  done (took 2.51119731 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095097833 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117414146 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122157425 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085871023 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106025655 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084270716 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106331821 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102752902 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083422237 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122573583 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08733849 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111455437 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107352316 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084199924 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103096714 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088979135 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10288256 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085703661 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107576904 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123547074 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096068418 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105661744 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108104555 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089427077 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107105194 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092927123 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108614445 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105755903 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086126979 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106787772 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08699064 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116200594 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103688847 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086528108 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104960402 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084969344 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106930176 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08753425 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111278643 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107509278 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084340071 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104812112 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087059792 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108216825 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083408313 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108399204 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102740512 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093214643 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10600853 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089226813 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107746438 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110262656 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090021893 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117697254 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091067887 seconds)
  done (took 6.338376052 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098194116 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109420855 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083355686 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104681858 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091896862 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111102052 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110613444 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09036878 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108862823 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086715916 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108251851 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092615757 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11036209 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111104417 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089767632 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111225373 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0840377 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108908647 seconds)
  done (took 2.640954507 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091601975 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107762652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096508022 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106940541 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087750693 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11051963 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084054639 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107148128 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105350746 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08744709 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107103196 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090418287 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10634894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090044051 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107217612 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088299148 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110711576 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10584348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086965229 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103330063 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090739001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105473647 seconds)
  done (took 3.006555573 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117759433 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127197073 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096235228 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229021869 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106736973 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134151658 seconds)
  done (took 1.638344227 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108892048 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11981807 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10721907 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10675707 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116885789 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10874912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090111516 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10903639 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118553723 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103868618 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110204466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118818745 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119881958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09663079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113644424 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113421498 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107533467 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08863604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108030582 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130820384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090454448 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12053044 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109679205 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089081417 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110165007 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119430938 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120282055 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124207609 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090550191 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119768954 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115938424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089827832 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120760453 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12531635 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112789049 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100458919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109987746 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129160336 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117541451 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100595164 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112200051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116602754 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097711237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113944163 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117437045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109244698 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093756769 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109172821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107771487 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134692517 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094787442 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117576125 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115468586 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120146632 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118604461 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135754551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103833791 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118789222 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116122867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124090277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119715449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097176954 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119018862 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123028732 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115829728 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116746163 seconds)
  done (took 8.215238071 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101151621 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126476515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109561282 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121359073 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096718409 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108194205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108497176 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088754227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110227232 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109807897 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151958833 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08815327 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119324909 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120036531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110013858 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090767354 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11092247 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120324356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090150031 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136421044 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109146489 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119237317 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118335653 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098508727 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124633819 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115849649 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111269551 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090174254 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110818604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110940428 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096006951 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111685178 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119831993 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088795081 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120942378 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10960127 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089624537 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114898051 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108875949 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116596134 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099939658 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129636307 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111217918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110148806 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123197467 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087925951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107935104 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088260992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111422556 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109471599 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122967327 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104310367 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125664059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120917917 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110572123 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090616514 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11153125 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110834525 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090679068 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119364501 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119885758 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110903454 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138108603 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088726339 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110411149 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120603188 seconds)
  done (took 8.11489639 seconds)
done (took 156.925691166 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097622213 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139340331 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100998119 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171358761 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105496808 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120555189 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136495084 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097123014 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109208665 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086704815 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109582924 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089909774 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173950245 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084753139 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104917198 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110448468 seconds)
  done (took 2.672858486 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196782262 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260384532 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106630121 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109112026 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113788302 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091020017 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.107752939 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093394723 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.113212015 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.089965423 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112630044 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090525601 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.109455114 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090942959 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.114118443 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09179533 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109486157 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.111401651 seconds)
  done (took 2.951500929 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111546539 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141902463 seconds)
  done (took 1.094158333 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119198331 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180414353 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293511457 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156948263 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120712415 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130628026 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15895927 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13228594 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196488585 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124230947 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125294602 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100208773 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142306924 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117089319 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097211916 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121019667 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145255245 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.095606249 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117835829 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117631225 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118100703 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108348566 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117938316 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095429405 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183359443 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122502775 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088212592 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109389143 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118986987 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095845882 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117433193 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125708958 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100167447 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17756138 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103079591 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176253893 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098841604 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113823069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11597761 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.0913042 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118559974 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120682602 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104640636 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119008794 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089637452 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119967902 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105457461 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085460619 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117667982 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119706033 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09493996 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114655316 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157459129 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120696045 seconds)
  done (took 7.598557881 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794906605 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166569045 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095246986 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882109512 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143067957 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106788763 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782784717 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137819578 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241314365 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759077738 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132934563 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122245111 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226880805 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.241760934 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.998441159 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309444835 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.667660389 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102253294 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149872616 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153121065 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118889622 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136706317 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131438906 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431101958 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094814154 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113678951 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121539846 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103277701 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161574309 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126539194 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112408041 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179657624 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266796573 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183309523 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114830124 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090345569 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113563615 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169785478 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264740554 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213167938 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17999266 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087435014 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112764256 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122654958 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109675832 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108720815 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162855141 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195150409 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171216324 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093064359 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122277153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11946072 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120551238 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164218032 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121426752 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29509314 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310851361 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112169228 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122797237 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108388273 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26624867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122834179 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222777635 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116510459 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212150028 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112055864 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781997164 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188483683 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089611497 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119424642 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119628507 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094576896 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123620471 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168410053 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407994583 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122954533 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093229623 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113727568 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205917774 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124521144 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109828738 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161005359 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114983568 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098337236 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1259855 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122878049 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171525233 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233935877 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12277737 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119169745 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09649017 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127533561 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115092925 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213302332 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218061682 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162713502 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212237641 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121807535 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165261681 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190667579 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100248453 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196101055 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100966862 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128639799 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123963804 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216438538 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14541775 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104272993 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117863752 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119827028 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148391577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128075333 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098191877 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169387771 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.47856297 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167729337 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108504926 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129485386 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098599282 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161326911 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116778473 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260057172 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119767808 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169518484 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120976436 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089122715 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121975733 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166755382 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12406756 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101439663 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123272587 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121737396 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238691427 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217985923 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125196767 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222103204 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185408878 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119852293 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174147828 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121543776 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170142321 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121873106 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121473902 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095280433 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79769098 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122598726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097402423 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116880184 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187821823 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111509075 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102998706 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124176868 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107603962 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773148768 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127227061 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121719046 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103520143 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119404283 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119279352 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098516195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11833482 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161949978 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228763261 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122664612 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119745406 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104898668 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182149152 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095956023 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126079131 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12482078 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105350899 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119098022 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117173875 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106081203 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191647375 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164661651 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219390845 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.588514206 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09191116 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127998799 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229242255 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093141746 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28966073 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119164452 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223234378 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163095487 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119165927 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304143021 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165603484 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187952912 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126114173 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17318896 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087036712 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120038597 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163788955 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112704929 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117307324 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161670713 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125671236 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102629957 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959296366 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110685817 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227827394 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087209069 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191268929 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095954323 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12460551 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296982403 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110428951 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109480136 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187893287 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095382111 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.128109146 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.847666537 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124843942 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123666528 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120376661 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202280694 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184805799 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099481615 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122927094 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123458614 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164614676 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212724366 seconds)
  done (took 44.344807241 seconds)
done (took 59.500757867 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277468767 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215580579 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256934602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171877336 seconds)
  done (took 1.86363114 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.167998715 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147541466 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.1219265 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11003566 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152613487 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088329385 seconds)
  done (took 1.657896983 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.346332073 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268412773 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236922239 seconds)
  done (took 1.725861716 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291290437 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254798822 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356679772 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415010613 seconds)
  done (took 2.308748301 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211785399 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135659014 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110045424 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10364738 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196228152 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246609598 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140592014 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199547757 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123269662 seconds)
  done (took 2.385228484 seconds)
done (took 10.813995375 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.258983936 seconds)
    (2/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.255010941 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.259088621 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.176654054 seconds)
    (5/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.254592109 seconds)
    (6/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.111084635 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.206153478 seconds)
    (8/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.175884989 seconds)
    (9/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228736247 seconds)
    (10/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116846577 seconds)
    (11/286) benchmarking ("sort", BigInt, false)...
    done (took 0.257114179 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105856847 seconds)
    (13/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.216446147 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126804923 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.138312085 seconds)
    (16/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.12663636 seconds)
    (17/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.182975985 seconds)
    (18/286) benchmarking ("sort", Int8, true)...
    done (took 0.225741716 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11939011 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092836953 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.140090938 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120942276 seconds)
    (23/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.098852392 seconds)
    (24/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.217428144 seconds)
    (25/286) benchmarking ("sort", Float32, true)...
    done (took 0.23449024 seconds)
    (26/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117058886 seconds)
    (27/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098060266 seconds)
    (28/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.183287841 seconds)
    (29/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.213209462 seconds)
    (30/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117853973 seconds)
    (31/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.120443693 seconds)
    (32/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.190264815 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.173084162 seconds)
    (34/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106330351 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.228758685 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109639553 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100950906 seconds)
    (38/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193038806 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120671375 seconds)
    (40/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233858811 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139093773 seconds)
    (42/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090120699 seconds)
    (43/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.215506938 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.21256616 seconds)
    (45/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.132289407 seconds)
    (46/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.203887581 seconds)
    (47/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.162119484 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089027972 seconds)
    (49/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.131055352 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122959306 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093624824 seconds)
    (52/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.216535749 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135694368 seconds)
    (54/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06763661 seconds)
    (55/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.222268551 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138809415 seconds)
    (57/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.119235469 seconds)
    (58/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172559091 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091619008 seconds)
    (60/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17316405 seconds)
    (61/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123318451 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.141077439 seconds)
    (63/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123516095 seconds)
    (64/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078988241 seconds)
    (65/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127477964 seconds)
    (66/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122363797 seconds)
    (67/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096314675 seconds)
    (68/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.154825855 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119315751 seconds)
    (70/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.102983445 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.139853316 seconds)
    (72/286) benchmarking ("sort", Float32, false)...
    done (took 0.150852435 seconds)
    (73/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.158472362 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.092084209 seconds)
    (75/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.093058361 seconds)
    (76/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.122192478 seconds)
    (77/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.1739583 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138268976 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088382109 seconds)
    (80/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091549176 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.162134091 seconds)
    (82/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.149848025 seconds)
    (83/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076943742 seconds)
    (84/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117602864 seconds)
    (85/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068731247 seconds)
    (86/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.124548971 seconds)
    (87/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166126254 seconds)
    (88/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.121697134 seconds)
    (89/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.10788397 seconds)
    (90/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098105116 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.120730595 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112891194 seconds)
    (93/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150598045 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095352198 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119286393 seconds)
    (96/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128696476 seconds)
    (97/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160266929 seconds)
    (98/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230984211 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117523529 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108958087 seconds)
    (101/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092273617 seconds)
    (102/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.125999714 seconds)
    (103/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068600893 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138394055 seconds)
    (105/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.128042886 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119791819 seconds)
    (107/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088920325 seconds)
    (108/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108808074 seconds)
    (109/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090467594 seconds)
    (110/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18809867 seconds)
    (111/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184010301 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.194916111 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.069101616 seconds)
    (114/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112272408 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085917907 seconds)
    (116/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108297757 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.178687893 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096721052 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163964388 seconds)
    (120/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16628481 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095159958 seconds)
    (122/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.167461072 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09720457 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120446998 seconds)
    (125/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11842362 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087496654 seconds)
    (127/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130329644 seconds)
    (128/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.134077635 seconds)
    (129/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.100371958 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203015453 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097743 seconds)
    (132/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184988341 seconds)
    (133/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134295939 seconds)
    (134/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094779655 seconds)
    (135/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117662189 seconds)
    (136/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068873847 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068162073 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10966443 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097918674 seconds)
    (140/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134318669 seconds)
    (141/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112434432 seconds)
    (142/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.161851733 seconds)
    (143/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141745633 seconds)
    (144/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112358416 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09017615 seconds)
    (146/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134681581 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066024788 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119126205 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086161896 seconds)
    (150/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066334123 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.088366758 seconds)
    (152/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181667313 seconds)
    (153/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067183888 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087200426 seconds)
    (155/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12270349 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108654492 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096530692 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107466368 seconds)
    (159/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066709667 seconds)
    (160/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089900488 seconds)
    (161/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.087554515 seconds)
    (162/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123560497 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090127362 seconds)
    (164/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179371807 seconds)
    (165/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.071732428 seconds)
    (166/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072127665 seconds)
    (167/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120790085 seconds)
    (168/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147662242 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108198233 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068565913 seconds)
    (171/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100452749 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080182825 seconds)
    (173/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113750451 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093423828 seconds)
    (175/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120966618 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099508701 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.087056714 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086707415 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067979269 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126505011 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119242733 seconds)
    (182/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068000547 seconds)
    (183/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108188729 seconds)
    (184/286) benchmarking ("sort", Float64, true)...
    done (took 0.230303524 seconds)
    (185/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090581881 seconds)
    (186/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176037544 seconds)
    (187/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097205076 seconds)
    (188/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091939194 seconds)
    (189/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094169468 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.116929268 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068893376 seconds)
    (192/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12028662 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086585018 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122255525 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 0.223525825 seconds)
    (196/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.10066384 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108738031 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135787775 seconds)
    (199/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.112293547 seconds)
    (200/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175274667 seconds)
    (201/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.113513505 seconds)
    (202/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149604717 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.141035281 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113561094 seconds)
    (205/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06934032 seconds)
    (206/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.08066967 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126814305 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098032162 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119122921 seconds)
    (210/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097336015 seconds)
    (211/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091817478 seconds)
    (212/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066401253 seconds)
    (213/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.32120388 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086780349 seconds)
    (215/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.12369432 seconds)
    (216/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069813997 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110155613 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093283243 seconds)
    (219/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068396976 seconds)
    (220/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091076627 seconds)
    (221/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078263127 seconds)
    (222/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118500011 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084883658 seconds)
    (224/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108331778 seconds)
    (225/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086431952 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121675592 seconds)
    (227/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09475882 seconds)
    (228/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090783959 seconds)
    (229/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067408159 seconds)
    (230/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174944175 seconds)
    (231/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069617581 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134719143 seconds)
    (233/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.178216586 seconds)
    (234/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.123664231 seconds)
    (235/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122813249 seconds)
    (236/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067149546 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110114268 seconds)
    (238/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068604031 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069465885 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111150852 seconds)
    (241/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187792926 seconds)
    (242/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072897257 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.071525779 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111891978 seconds)
    (245/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069142856 seconds)
    (246/286) benchmarking ("sort", Int8, false)...
    done (took 0.187901298 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109839035 seconds)
    (248/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088806434 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116132777 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070547659 seconds)
    (251/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108019137 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09957926 seconds)
    (253/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.120838022 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068973109 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.0687554 seconds)
    (256/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.11975883 seconds)
    (257/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123432311 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087736048 seconds)
    (259/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067570465 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118100278 seconds)
    (261/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089010292 seconds)
    (262/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.09131655 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086436953 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108481512 seconds)
    (265/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089193755 seconds)
    (266/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.088708299 seconds)
    (267/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067732126 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117319185 seconds)
    (269/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086372696 seconds)
    (270/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115240841 seconds)
    (271/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089123479 seconds)
    (272/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115110393 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093017272 seconds)
    (274/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078554093 seconds)
    (275/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116120276 seconds)
    (276/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.10861269 seconds)
    (277/286) benchmarking ("sort", Float64, false)...
    done (took 0.147242711 seconds)
    (278/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.099175028 seconds)
    (279/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088672108 seconds)
    (280/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090170613 seconds)
    (281/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075469613 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094491473 seconds)
    (283/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11047874 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069001456 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090316902 seconds)
    (286/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088532595 seconds)
  done (took 36.260065451 seconds)
done (took 37.136771104 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099627803 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147408426 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098423197 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133885928 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121580966 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091150597 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116295108 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098750365 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122102192 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123118324 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097841271 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.091448347 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097358385 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119771585 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097068912 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138642886 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126286264 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093657702 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117570464 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087058217 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119412355 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087123903 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11160208 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071107207 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120916187 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094180757 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116006893 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120328579 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086178321 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10960672 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091063768 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116445672 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086755882 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12175366 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093290864 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117622022 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097259375 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118844063 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109871682 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086325325 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116998602 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086806496 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117379332 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094427297 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115669103 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091525065 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118940004 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100707549 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140263668 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119284337 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096155906 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122562884 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09609885 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11753119 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091575718 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117387787 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092809471 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137066951 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121894232 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091303825 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120324826 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094332183 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114834447 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095046539 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117452453 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119505039 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097705174 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115534591 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096060178 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114993737 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086018275 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117739815 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090826369 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110223078 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096899904 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119750942 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108432707 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092392607 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114793097 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091032559 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108962367 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089278025 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113231332 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092682107 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111926318 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070911605 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113834265 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093241969 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109403696 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095376501 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116072602 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093641912 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110642983 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099502283 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108631231 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.0935419 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110154306 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086549631 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111971846 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090018277 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110527867 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090497508 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118827945 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.110878677 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094070948 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121109995 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086676644 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115436086 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086325644 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109669435 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101500174 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119485651 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086124798 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115764547 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089452615 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119238821 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087609762 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108865453 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111538658 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087714949 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115962426 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088399526 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113738349 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096918586 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126399575 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08843405 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11380364 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089552821 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111609339 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092515356 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110517942 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088699563 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112910561 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079036162 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113022252 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088347055 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118400281 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090976239 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119380256 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089441864 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119899623 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09267164 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115570135 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116507799 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085897356 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074627174 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114953056 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092353287 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11378428 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088960985 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112504911 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088354253 seconds)
done (took 16.881534689 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086923504 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184258908 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151177257 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142710509 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105955605 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111352507 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121913874 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117220167 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112525883 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141307369 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109649542 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130631033 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146820643 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086536139 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.109809416 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091116696 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11111842 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102191965 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14333396 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131217159 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161138685 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086337998 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145035663 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133242881 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118897317 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114427625 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110068197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090939947 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114864569 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102662594 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132268065 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113726661 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087731294 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132627426 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104743148 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119514212 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088654725 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11957605 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086962251 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11108193 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139535318 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132599505 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091671658 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116597948 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091191297 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113638149 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08876404 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119502618 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098785885 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114967528 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124739244 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15426703 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09132055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119826765 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086924761 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121685069 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118905414 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089812028 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110573274 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090153346 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110261071 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091043884 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125577023 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140330453 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091710418 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119779903 seconds)
  done (took 8.529629046 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104260556 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137720235 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104944606 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128259405 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109930341 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088055328 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110848737 seconds)
  done (took 1.719926474 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087574546 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132294071 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110926798 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.133454023 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132674674 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111054128 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123406114 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0889934 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131135022 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090331626 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134634759 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148899244 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091488191 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120192941 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137384018 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088351396 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135533398 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08982152 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117962254 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113896575 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115660123 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135079922 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091657853 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112897828 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104490427 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115572575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161797543 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094396851 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11376357 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092584721 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11160479 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150479489 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103414135 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126314616 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090090794 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132577086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13269793 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088057936 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129166545 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097314858 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13278418 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09365845 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118860999 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090616196 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121489958 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101436831 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121405395 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106803656 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114881698 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134376781 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089628124 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127797421 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090356755 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117517383 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091759082 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121811548 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102164712 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117311824 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133447459 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089867806 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1307718 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105012006 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128698432 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133671603 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09125099 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127430241 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103685288 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117085323 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09200523 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117897313 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106083505 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.110745162 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091523644 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.122542316 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115264181 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11215754 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136174884 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094621821 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125069991 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112165763 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088850669 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112596164 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112086609 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118095659 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089057258 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116485502 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092386528 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111821841 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089796903 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117395072 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088920236 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115803846 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093741315 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113548443 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093931772 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128588301 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113095393 seconds)
  done (took 11.848529748 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089516997 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113458355 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091838265 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113456815 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090566343 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113310311 seconds)
  done (took 1.554421065 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116648336 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115111768 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104203763 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119266154 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.152896519 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103373797 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128574661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123060865 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109360756 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127744838 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128251476 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104810304 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135366889 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120780887 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104279453 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11986313 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10572993 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122863866 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124718751 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096808447 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134760559 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119012417 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096467314 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130617126 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1187567 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095475372 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124626975 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103334641 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125943495 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122061264 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095986612 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116736032 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095400651 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12312419 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129368102 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097416673 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12008325 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118894474 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100123954 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.115842931 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105657325 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122072931 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124717054 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095435902 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12344728 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121359892 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093668129 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125254775 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.106345804 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117879715 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119018702 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097110397 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120398377 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096083345 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121961928 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126472411 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096217675 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130168046 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12187427 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097877407 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11967073 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095124795 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123896962 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11753841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104069657 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117877778 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120222512 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095626896 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119966939 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097061322 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118713352 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094088849 seconds)
  done (took 9.18171137 seconds)
done (took 33.767860086 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671625347 seconds)
  done (took 1.613883495 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.804171124 seconds)
  done (took 1.748775798 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.818198407 seconds)
  done (took 16.790670531 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.477685375 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.560510048 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.971141085 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176219961 seconds)
  done (took 3.129399757 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.920189038 seconds)
  done (took 1.886737214 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279033976 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232109418 seconds)
  done (took 1.465197623 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.754035176 seconds)
  done (took 1.718000787 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.414618834 seconds)
  done (took 2.366745486 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324652957 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182856765 seconds)
  done (took 1.472040593 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550969885 seconds)
  done (took 1.515082662 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.614804776 seconds)
  done (took 10.584435361 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264903958 seconds)
  done (took 1.240806973 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299091232 seconds)
  done (took 1.266328472 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.283858306 seconds)
  done (took 4.250206408 seconds)
done (took 52.00375707 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097779853 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125006756 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102101451 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122118865 seconds)
  done (took 1.406448339 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100892338 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12034206 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101341239 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120935883 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128361873 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097510428 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124811731 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103571607 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120310913 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100261478 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124897447 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120460262 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100486964 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123853388 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096049689 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128098266 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125834131 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097640682 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124711861 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098990902 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119316606 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099136509 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124667338 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096437253 seconds)
  done (took 3.667309606 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099607356 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120197128 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097402599 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118145952 seconds)
  done (took 1.413984687 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099015119 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131385149 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107055779 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126219968 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131214949 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107353394 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117588444 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093451712 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120314972 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100856354 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117658238 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139295558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108429706 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12469859 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103295645 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112773924 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093179028 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131618553 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125086651 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102374164 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120238932 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101063152 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116701172 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110092156 seconds)
  done (took 3.714623966 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169483677 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129507166 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138936991 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096852413 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159538978 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142321033 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089015017 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143053 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090746262 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133443839 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118313031 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133868984 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130414588 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089373006 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114782914 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.090016821 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130210188 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129226951 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090661092 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127887174 seconds)
  done (took 3.427770617 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097656835 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117730429 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088720354 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116480614 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099311823 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121028292 seconds)
  done (took 1.618558198 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090760976 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115060605 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090800109 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114051681 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095161052 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115242364 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088886468 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115800742 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089304243 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115054301 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089004111 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113348681 seconds)
  done (took 2.210744394 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.496967952 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120845403 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118003729 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088489269 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122172159 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089971857 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129207266 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094191749 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142563996 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091052271 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.120249091 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095747254 seconds)
  done (took 2.688198106 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234115407 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125882852 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281423401 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364846935 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156356689 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165207698 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27705854 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160852552 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196865651 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150548551 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228971711 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198378174 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152430657 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191171258 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136054599 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145381265 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190577312 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249530025 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153286666 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211147785 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205046428 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166879245 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178906689 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152197765 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112990363 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192699895 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096123837 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132417622 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231597765 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179647522 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191412713 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160512749 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146803074 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235184558 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247438252 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195499741 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27811807 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138874756 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164689272 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142234394 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263593807 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140472492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231907955 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155764631 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105225784 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218860993 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165411853 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176636212 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146238589 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141479371 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197492738 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242821337 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192486938 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138667293 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299963959 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148249101 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157695017 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188365971 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252473049 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226118665 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186491728 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11905788 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185629348 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188676619 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210273225 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152275184 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182216581 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149301139 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184246956 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189453541 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166435412 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20268437 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18026148 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138675421 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170066987 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17346651 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171659486 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255830871 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184280647 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123061475 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170954659 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147721423 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131616441 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169155558 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128624598 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214662468 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142061174 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163830016 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208173184 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158774114 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161878089 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220004992 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18358507 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149754 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085693731 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152939464 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15406488 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175310679 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139635859 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158547934 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159983463 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12970021 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170357335 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099266536 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207913215 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091809885 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176046256 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207630489 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099576954 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161229674 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152836503 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150722149 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176367857 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197699774 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138529046 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1328968 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209770724 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179236603 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140671197 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177583997 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227575229 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119135328 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147117847 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225343199 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240551344 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114504304 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225671197 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153918916 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108730631 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133516015 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180176388 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157945034 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16397175 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132525722 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183654182 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230870665 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100095872 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139710504 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196524397 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135888854 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133988242 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154520425 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147061998 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111879255 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142992372 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145023178 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176921451 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1801543 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153760105 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166592999 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150072472 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247041041 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139654571 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150821948 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121908991 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119108305 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194271598 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223565993 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10489369 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229821183 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171598056 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220969276 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167449934 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108581601 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174900799 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130946157 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121078244 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192809462 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166874806 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163021959 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196523602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22246585 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178623276 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209383447 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166038202 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174696272 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164439349 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155525204 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112009122 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159104519 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156873272 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123586331 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138534545 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106129447 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148672747 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141058692 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13349922 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196254707 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169913339 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215340658 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156786406 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14838611 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17846043 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103050832 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201645473 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177064913 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146278842 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196345971 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191041705 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211080489 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118011711 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226690774 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120160772 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100195908 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142679638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170070936 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1340005 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108806076 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162297802 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204426979 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181289728 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172341899 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229496404 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174925994 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192108308 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094956833 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166616528 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184298917 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198572077 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153934276 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136525748 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150589301 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17632697 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155827992 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252622975 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167169609 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173773088 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231434183 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125598775 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131856363 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149363763 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176531942 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151776444 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174850324 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147335561 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141965157 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16007595 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104788734 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183771419 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185283414 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16451562 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186678989 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147853145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210961103 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102687605 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160546989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160251986 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16514725 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107061596 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173797547 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201041061 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146571015 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166829649 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214032131 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105233613 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308213251 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231632921 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193468347 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136725256 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154119724 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160356701 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160854203 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168957447 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177637764 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157244617 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186933592 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15949226 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135887883 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138440967 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123288317 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150124695 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13352251 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149049208 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176715205 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139886343 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187281865 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155093402 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158565757 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172508892 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150069219 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144792116 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122831085 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241857384 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182894333 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236034716 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148004873 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176374206 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20312757 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124321521 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129341592 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105909452 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17534903 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134914483 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186872585 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.209997531 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19731216 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209461338 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176801012 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13926798 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094115095 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155389102 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169540555 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225380935 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145650978 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120289574 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229297418 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110220116 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132425096 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166880727 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283880373 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142444772 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217938631 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081325474 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274957576 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122734942 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105217313 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161899565 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230888115 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135687706 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151142526 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164722854 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160276698 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160625228 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14786536 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212076569 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208632056 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220998849 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183407911 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10557181 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153592098 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200619175 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19068594 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155855885 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137989111 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203621657 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192565557 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220123712 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113876875 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19106437 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165516123 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155387729 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187131727 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134032676 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205152404 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132067642 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19098738 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151482762 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13837662 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175630265 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.210790718 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113991506 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212507107 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181264415 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133978027 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108223271 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190309131 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176711775 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152050579 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099365698 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206836969 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09946413 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216616663 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232942372 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134197316 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154418044 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145130333 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109687851 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154625071 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156358194 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139389445 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161034761 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200361201 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134320744 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189639304 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228040303 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171470143 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172262751 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144368584 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692750795 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129805135 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195486737 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145496669 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203513473 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150637515 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171539643 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159431833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167836093 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217768873 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158752148 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229177049 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189829145 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176145851 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132670681 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159850773 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156218278 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143867148 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153075616 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168739034 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160319572 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143322447 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176942297 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164720839 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133202155 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113654335 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222210767 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12122811 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213243634 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180427744 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112356672 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199851581 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186237895 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132518235 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178210919 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232777901 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113930461 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147757756 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134531339 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151896928 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258546262 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098874828 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216762327 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183523704 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158695338 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169734183 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148002324 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194025094 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157241848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209383764 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117616767 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157846552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159083568 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138433148 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129826708 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154953386 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165782752 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121783381 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183194114 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.136016339 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190872079 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124731559 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14191557 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279021992 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174969839 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239511036 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106221524 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134934557 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161589622 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147582836 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175131857 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174891072 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135057394 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132423379 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.133971674 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128428757 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110959428 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155660395 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190888093 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19296512 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204960625 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135424358 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275222655 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115076798 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155537459 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114218909 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107066874 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149860657 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146749963 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156380614 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193473013 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25829826 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145908907 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133047747 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120707128 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124528449 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134552247 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161590444 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162526041 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17773589 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14144429 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08042521 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153782441 seconds)
  done (took 81.966442356 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160456851 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130184726 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144711026 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200693482 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172568088 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266975275 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207152808 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249531561 seconds)
  done (took 2.592877445 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092918722 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142682499 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160783889 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131228543 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091424885 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121448304 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.338506849 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.137075083 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114400636 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122705595 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171071855 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093374084 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.541758818 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09728016 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121669531 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106297598 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091610003 seconds)
  done (took 3.729930859 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.953506032 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.465276799 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.577093205 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.185207996 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154575407 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.114962574 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.651169702 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093955095 seconds)
  done (took 11.265133652 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11454867 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.141852146 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123790399 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157098807 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.145638002 seconds)
  done (took 1.761412141 seconds)
done (took 122.424835455 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096941106 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126651398 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098102881 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129496779 seconds)
  done (took 1.509843195 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094127939 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077315521 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105390229 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074075808 seconds)
  done (took 1.419092278 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187418377 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.172314965 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383004342 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.078943091 seconds)
  done (took 1.560926936 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113319545 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131091407 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105139085 seconds)
  done (took 1.428540185 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105289809 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128277281 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102805843 seconds)
  done (took 1.410359307 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104390546 seconds)
  done (took 1.178306761 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106598195 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.140528018 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.1073826 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136415574 seconds)
  done (took 1.565829738 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097637598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126939884 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108386409 seconds)
  done (took 1.405767364 seconds)
done (took 12.907923396 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10217102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418102629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413360371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109735795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726459788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382420394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020464636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149585336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164885627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095452361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138550514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677693442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.016914761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.37825244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97152597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376657212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677950093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120150737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092833006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119991366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004050051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091989912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122566203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095043048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708703576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.399839326 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120273408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372907898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091930908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125247571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383694524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122929082 seconds)
  done (took 16.855215812 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093581229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172101894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104980361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121052033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123145579 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095294559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122772846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095613243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177655748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124697474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111972118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125226622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12607621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094671078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142575127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09883805 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127538161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092104467 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120571713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093277895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137206058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121416305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094233926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120386816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095159791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134038073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093536822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11869915 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120015019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098192638 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126181901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094811774 seconds)
  done (took 4.790783368 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140842482 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179117929 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132381404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125911494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171923654 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123450314 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196742568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122763519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179921545 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126111251 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140068563 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099674898 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160088363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128486691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114223716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126224468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097301494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123222768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093408385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123515522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140204193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096058464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126044278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092274179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123237655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109068838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124987911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122724785 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094583945 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127131457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100011867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124328859 seconds)
  done (took 5.162787602 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096317194 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125990181 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109985774 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14164874 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101540995 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129282878 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098685364 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127418655 seconds)
  done (took 2.003842595 seconds)
done (took 29.889208135 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109570568 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131979257 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.114026824 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137679911 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103951164 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136248678 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097791341 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136948382 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139529023 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105692413 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141951593 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.098855017 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.128165591 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09467173 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13857547 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105888723 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13688606 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.108749863 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136581483 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.135196155 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097617668 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136545017 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109745682 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138231596 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107542885 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137101771 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135120908 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105719942 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125636158 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094487223 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.127685845 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110989429 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127629461 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.110253517 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131159474 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10377303 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127558209 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098850713 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137212933 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.137790151 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106323942 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13750039 seconds)
  done (took 6.149829687 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107247503 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144579987 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108464093 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087353345 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.120817041 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085119036 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141884792 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085876167 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113943534 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108929172 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.080874404 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10976493 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079935335 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10055803 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07718139 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076985966 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107290935 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077215516 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078799393 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106184939 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081218941 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07417374 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109261937 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081836826 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.081291355 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108445278 seconds)
  done (took 3.618009626 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099313921 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134727095 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11314096 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181483509 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161492509 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100330821 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130371129 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135738106 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107789192 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119846936 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095790019 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14527879 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108967377 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128195137 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093252724 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137700057 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133465589 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09337033 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126554423 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111052526 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136810924 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10388639 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14043565 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129459069 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091638041 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121990307 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095672965 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132749638 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.10245774 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13466004 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097295016 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121642943 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120797133 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103574794 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129562118 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093290196 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141091591 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10403907 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126796361 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120332921 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101594136 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120718141 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114024201 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161575239 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097761196 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132003598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122051689 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105199893 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120723768 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11168577 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130606808 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092762222 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124199444 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091169229 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121066051 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107772781 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127319386 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095287733 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128455958 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126224852 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104420951 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124234613 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107306602 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124583551 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101668252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122794712 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.096777129 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124761258 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143339235 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100831493 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165376499 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099969009 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128775507 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102803426 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127350854 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127024837 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092406493 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137749611 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109600294 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.130272837 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103167335 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127744 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098994916 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142074184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124243617 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094771757 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122544144 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099522322 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122233169 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095816386 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135126274 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.096124357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.130076576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11228053 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11997893 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123308789 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099770277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124835009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093134244 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135927733 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101855945 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127859992 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13181554 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095250031 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.129301673 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105225957 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126886308 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09559458 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132042649 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099577418 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125375389 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097832982 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.129759757 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098881293 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135986653 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126663499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09823189 seconds)
  done (took 14.859565917 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.223945645 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219200104 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.247992308 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.259185721 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138224755 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.148385796 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215748092 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125767914 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129069037 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161404707 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169578778 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.177241135 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170362239 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186367281 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.165997746 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093404099 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.146801321 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164287282 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212354609 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.253543405 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143420815 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.13400574 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159264083 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.130511309 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134680549 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133073637 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111986612 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132341108 seconds)
  done (took 5.788038904 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107269878 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155301447 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.105568932 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142741329 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147984107 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095824754 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.131885518 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097298328 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140062902 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138613927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094785314 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.134102082 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.103301046 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135509089 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124223414 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101991927 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130810479 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094268718 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125480416 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097092893 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133684952 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103769134 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127252072 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121236851 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102697039 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120080264 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086137479 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141612205 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121220808 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114253803 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117874103 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100656431 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133651561 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092607838 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122654559 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.097022301 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125882113 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096326679 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126485863 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094274473 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125327315 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078642571 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122341709 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133173926 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098929686 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081833102 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130569873 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127294683 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093996082 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.11862596 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096413544 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121906512 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09677375 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128944754 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098035559 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123353757 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095659453 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.112768924 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10276129 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124191127 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084072293 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125514306 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09764996 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116419762 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101836363 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12429723 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092076831 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124076469 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09809908 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131294621 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.097547304 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13262591 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092366404 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126482596 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097215485 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126487779 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.122542393 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092155765 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119917812 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093574258 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074472511 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126084163 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075747553 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123229538 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091964103 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12154849 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096639923 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131869678 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13892635 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096546765 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132878504 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095455084 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124967923 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09754901 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115879834 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099174592 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.144901697 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140960626 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095175466 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120104214 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109502007 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125091948 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09350207 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.111564148 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103655682 seconds)
  done (took 12.986468326 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12998076 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157856545 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129191571 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111094307 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160990508 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162461758 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099655622 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132004218 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.098369369 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.145684462 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.100729801 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136120139 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095039869 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.141780262 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161546019 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104549783 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129616106 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109080718 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132967526 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168624446 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.118751537 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.148322094 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.117562185 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122883841 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129452438 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.114718615 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165584745 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.115455307 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135510943 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145948802 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111823661 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.166331946 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.149379971 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101710317 seconds)
  done (took 5.564678032 seconds)
done (took 50.041511865 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.187295866 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.381038305 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.173203583 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.980327924 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.190968165 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.191223036 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.185401038 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.170554648 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.36362346 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.174845948 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.422924817 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.628412845 seconds)
done (took 59.150792664 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.253685458 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.335169219 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471269408 seconds)
  done (took 3.904757179 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.759159593 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.042508172 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433867698 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.170078984 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189000655 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.482776255 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.70094058 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.420472449 seconds)
  done (took 27.53735485 seconds)
done (took 41.555643763 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.189204412 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.197754961 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.19263824 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.15029754 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.272389669 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.19476438 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.475679436 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.189620219 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185565406 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.165238653 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.174130982 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.175700732 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.187970926 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.437978067 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.178279725 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.175731462 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.189319518 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.664619389 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.528698004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.171824107 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.173351472 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.222454921 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.180832885 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.187501425 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.237856373 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.174616921 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.178411714 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.175004904 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.12844977 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.181920921 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.268947255 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.59386458 seconds)
  done (took 188.89976299 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.17308059 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.133485616 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.223748664 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.200753171 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.650871315 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375139671 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.305650478 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.714579324 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.191582327 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.177507827 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.400340961 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.176726102 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.468087963 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.144775821 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.203402489 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.236231019 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.401432367 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.47438367 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210564358 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.333772513 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.180303295 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.406278309 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.312222565 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.358560913 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.202328935 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.249675753 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.202002044 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.206019282 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382944975 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.333138603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218102513 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.215056173 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.70470384 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.030379441 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.180209273 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.186182125 seconds)
  done (took 148.665275604 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.175568877 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.175118798 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.175875498 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.202344825 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.176848246 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.656295286 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.661492759 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.669943557 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.291124007 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.23517187 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.346901903 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.158836956 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247378708 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.172034612 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.158147627 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.173164403 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.197379483 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.161604037 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.154247229 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.632717114 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.163579476 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.327697191 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310858805 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.158042561 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.173242127 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.530859794 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.14431402 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170001879 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.460581683 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.18506273 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.143681282 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.436554743 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.5190694 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253656506 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.141814825 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168283057 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.140963902 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.141130246 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.411281007 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.139801111 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.141869414 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.144366544 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.735055189 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.144741494 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.622992929 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.14508338 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.011452013 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.145017884 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.140973299 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.142567049 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.41585696 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.637591212 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.154767999 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.135202664 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.138396446 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.136972821 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.136037165 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.164850716 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.137323192 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.381057683 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.223080889 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.145106153 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.133380476 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.158034141 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.131149619 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.212967598 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.126368717 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.176091119 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.185491846 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.237340912 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.610166931 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.13050415 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222573945 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243931981 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.126810414 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.126629168 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.127347557 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.127995958 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.234091309 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.127749361 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.483507864 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289242508 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.142196883 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.211778559 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.223982385 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.126844147 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.449473226 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.131507039 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.127345336 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.793681529 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220983988 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.127580549 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.128720109 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.127605482 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.484943602 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.612534279 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.287545605 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.132596289 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.241744741 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.132383652 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.501793397 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.602697262 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.714324182 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.133496331 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235844004 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.290186114 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.141904332 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.129743173 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.12904311 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.211293355 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.134260069 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.183599804 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.133158188 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.52368785 seconds)
  done (took 355.209525835 seconds)
done (took 693.876341103 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.708049283 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.707590446 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.806677834 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.701561791 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.671952845 seconds)
  done (took 9.653393434 seconds)
done (took 10.710652245 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.300610134 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.303389258 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.187887703 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.30488931 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.163180982 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.318906448 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.284899713 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.155507314 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.225141832 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.202269804 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.22720969 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.179307484 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.165614737 seconds)
  done (took 17.078590227 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.42637117 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.42296886 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.197517553 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440353533 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.172902238 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42959144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.324890887 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.362032973 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.336727607 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.165296354 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.146687735 seconds)
  done (took 15.485749864 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444312605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.43420624 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.201676089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.449002195 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.175081501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.438421562 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.33600282 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.33850263 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339319803 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.165812694 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.147760343 seconds)
  done (took 15.532586638 seconds)
done (took 49.157525035 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.143653012 seconds)
  done (took 2.207088229 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.176233121 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.332509696 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.161715477 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.150020796 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.145369881 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.1480922 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.148217887 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.144543635 seconds)
  done (took 10.470949527 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.143722599 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.143101467 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.141384598 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.137545419 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.137220757 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.13842555 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.139408138 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.136491389 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.138980483 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.137387579 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.136331873 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.139244007 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.136280206 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.132947124 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.135815766 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.135614168 seconds)
  done (took 19.273864238 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.134177031 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.133883909 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.133080762 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.136003138 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.130577239 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.130475964 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.131549754 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.13133444 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.131628028 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.130463197 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.131723708 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.130859909 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.13150348 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.129923541 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.129957578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.131408653 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.129462343 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.130885565 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.135340267 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.129937517 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.130811653 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.131832771 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.131201769 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.131003505 seconds)
  done (took 28.217092527 seconds)
done (took 61.23276487 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.699448423 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.587372016 seconds)
  done (took 6.339870254 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.133815438 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.133710552 seconds)
  done (took 3.322513468 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.132691146 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.133051135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.132831923 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.133413152 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.133378285 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.134054311 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.132825835 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.133500412 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.133582332 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.133775772 seconds)
  done (took 12.38692779 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.134548408 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.133694694 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.132027169 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.133783475 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.133971294 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.131989841 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.134307097 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.133695639 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.134021147 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.131724001 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.135101045 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.132329785 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.135307477 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.133229568 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.135321869 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.13212217 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.132887806 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.132310879 seconds)
  done (took 21.457166771 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.13529081 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.13472306 seconds)
  done (took 3.324804766 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.132974056 seconds)
    (2/7) benchmarking "second"...
    done (took 1.132613293 seconds)
    (3/7) benchmarking "month"...
    done (took 1.133902388 seconds)
    (4/7) benchmarking "year"...
    done (took 1.132842111 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.133907782 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.133511598 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.13355608 seconds)
  done (took 8.988946754 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.136354457 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.307206698 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.384589561 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.732305616 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.138307417 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.1395524 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.038021339 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.140954563 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.142892726 seconds)
  done (took 13.215612675 seconds)
done (took 70.0890399 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.098980517 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.144260489 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.303201672 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.135073414 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.147997941 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.429299632 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.157877412 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.251654696 seconds)
done (took 36.72469288 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.149467426 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.115214978 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.742148196 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.116665014 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.132963976 seconds)
  done (took 18.163776002 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.063942218 seconds)
    (2/2) benchmarking "read"...
    done (took 1.481021313 seconds)
  done (took 4.602356059 seconds)
done (took 29.971951637 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.137746618 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.136591616 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.134086243 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.136396065 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.133212982 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.134022109 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.136021216 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.136667187 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.136758157 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.136271862 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.134359165 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.136802011 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.138005111 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137686112 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.134945939 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134183205 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.137655805 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.135090387 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.134884558 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.135101683 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.135475545 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.138069866 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.134133594 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.135648451 seconds)
  done (took 28.317535315 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.13869358 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.136973962 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.138566732 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.138359715 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.136744755 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.137999675 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.138727542 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.136356845 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.139918506 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.138972593 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.136422981 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.13719979 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.139029125 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.137878909 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139525438 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.136417062 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.13945411 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136239663 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139110741 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.136419599 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.139297268 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136351197 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.137283796 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.13919558 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.136970594 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.137266495 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.140066761 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.137003968 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139319119 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.137237118 seconds)
  done (took 35.197984949 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.143010511 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.144506618 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.139591965 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.140098296 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.139749652 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.139972764 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.139368308 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.139260263 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.139739896 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.139924342 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.139972149 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.139397146 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.139907797 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.140052944 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.139257899 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.140299873 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.1402383 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.140155301 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.140669312 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.14153693 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.141328057 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.141570131 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.140677127 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.140489745 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.140624102 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.140038703 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.140336488 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.140503975 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.141154583 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.140825481 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.141439648 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.141446549 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.141212204 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.140771972 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.141647355 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.141126308 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.146672982 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.147126559 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.141740879 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.142169437 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.141548538 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.141265633 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.1417385 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.142084799 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.141881852 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.141506829 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.140967943 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.142542356 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.141898919 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.142482124 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.141832031 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.142931585 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.141775224 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.142996577 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.142256279 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.141630277 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.142024507 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.143409843 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.142516135 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.143124094 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.142446272 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.14222819 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.142636949 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.142551699 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.143607766 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.14302777 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.142974664 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.143231935 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.143644622 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.14362116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.142897104 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.144229431 seconds)
  done (took 83.260804558 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.143977656 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.142090778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.141814566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.141255343 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140790587 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.144041748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.141793407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143906261 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141239058 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.143827199 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.143207167 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.141431143 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14209037 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.144336148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.144404421 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.141896017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.145153328 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.142117606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.144072929 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.145728477 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.144464646 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.142040983 seconds)
  done (took 26.210029608 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144889197 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.146375937 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.141572471 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.144304306 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.142190918 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.144692872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.145615571 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.147923578 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145392347 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.142453579 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143194335 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.14613196 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.142643991 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142732011 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143647027 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.144438722 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.145621798 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.144240006 seconds)
  done (took 21.662493969 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.144541658 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.14390873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.145715389 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.143832299 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.143484536 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.147168282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14522401 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.14714524 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.146931547 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.144289833 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.146608189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146952617 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.146351395 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145044177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146810789 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.144832125 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.147119411 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14511772 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147710095 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144571989 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.144281861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.146850538 seconds)
  done (took 26.270956425 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.147569406 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.147329354 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.14469578 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.144942685 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.144949421 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.14790461 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.147921754 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.145966942 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.149647623 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.147886973 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14533139 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.148676659 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.146357777 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.145363508 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.145922154 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.145257193 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.148213335 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.146453926 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14825006 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.146616657 seconds)
  done (took 24.002393353 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.149502062 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148897631 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.149760431 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.149597594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.149873161 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.150554227 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.149314909 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.150953319 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.149776212 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.150567629 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.151644332 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.150044018 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.149883858 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.149682244 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.14940712 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.149483185 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.149489133 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.150255851 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.150139846 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.149686902 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.15003557 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.150810832 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.15020756 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.150466399 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.150361121 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.149722786 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.151276999 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.150229667 seconds)
  done (took 33.270740073 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15107193 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.151391792 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.148605752 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.148905488 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.148349721 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.147576273 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.149060453 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.148374888 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.151795029 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.148577538 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.151491388 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.15146762 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.151217088 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.152520214 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.152058046 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.152202921 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151594096 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.149141662 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148616606 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149332499 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.152644923 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152400678 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.153441351 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.149227158 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149150826 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.15284218 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.14945703 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.150488166 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152765277 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.150377681 seconds)
  done (took 35.586936707 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.170388556 seconds)
    (2/2) benchmarking "in"...
    done (took 1.1711436 seconds)
  done (took 3.412519425 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.14971137 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153158076 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.153410008 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.150272268 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.149818816 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.15353744 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.153648519 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150453563 seconds)
  done (took 10.285313752 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.153394711 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.15381948 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.155967281 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.154494549 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.156119733 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.154831664 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160901551 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.173891552 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.15522894 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.155828072 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.160301452 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.159317047 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.156751034 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.155275413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.155604207 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.156327673 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.15399344 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.154087056 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.15534022 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.15508395 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.155194053 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.157102244 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.156726826 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.152573251 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.156568194 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.165264708 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.176567364 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.155160935 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.154905593 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.158578577 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.154310764 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.153662806 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.155825517 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.155567486 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.156153274 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.155063221 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.164484449 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.171575731 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.161552996 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173117264 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.15785986 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.154802076 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.156697664 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.157518594 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.158180825 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.155675793 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.157034099 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.153671307 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.156417549 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.159966084 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.160862434 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15599224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.155503302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160154432 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.157332961 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.163862749 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.173088264 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.160539644 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.164408838 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.167537094 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.18553622 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.177713549 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160193203 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.158163967 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.167073798 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.179133238 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.164375965 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.172499187 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.157101139 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.158782081 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.163763863 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186359876 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.180284545 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.159034253 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.160041039 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.159424726 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159755843 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159994342 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.165820182 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.17797894 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.159208653 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159795666 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.168979038 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.18000168 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.15938963 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.159110318 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.159121883 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.158822447 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.15929734 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.1691762 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.176021906 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.160036769 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.159475133 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.160618069 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.16083271 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.159978245 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.158961881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.159909518 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.157559087 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.160440351 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.160025509 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.162581129 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.167770951 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.160084806 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.160377048 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.166196113 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.177272282 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160735673 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.165585103 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.160284402 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.160873407 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.162064763 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.166053759 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.158595863 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.163812747 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.168151602 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.161143072 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.162335444 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.160106126 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.161870163 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.170442638 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.182155425 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.161221521 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.161769124 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.165334383 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.170728465 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.161623305 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.164650599 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.162343943 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.15924724 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.159785888 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.163031411 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.162008356 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.161434513 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.161513304 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163192997 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.159406227 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.162702018 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.161272414 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.163802239 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.1636074 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.162885436 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.164020786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.164354062 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.16311708 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.163417155 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.168577013 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.179055865 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.163984925 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.163409643 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.160301166 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.162789254 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.163118949 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.162487403 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.163790291 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164682393 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.162299352 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.162454806 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.164318627 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.16397047 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.16430039 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.163491871 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.167116566 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.163832703 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.166523012 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.163097008 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.161705877 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.163211157 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.164632035 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.163586314 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.165645835 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.16392892 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.165985762 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.169807022 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.165693454 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.164233846 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.166435488 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.16468906 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.165455949 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165288498 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.16693392 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.170624056 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.164985292 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.170760028 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.183601565 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.164845261 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.165719998 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.164534771 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.16583059 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16473515 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.167541218 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.171285306 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.175289858 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.187364111 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.165643118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.168603176 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.16596191 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.168725202 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.168149063 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.165489545 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.166549077 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.16586811 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.165637804 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166041439 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.167175365 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.166730386 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.165422291 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.166193886 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.166444739 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.167340236 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.168075243 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.166782583 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.167439522 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.165551045 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.167220626 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.166042302 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.166353867 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.164564218 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.166274768 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.165536562 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.167698167 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.167001362 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.172420172 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.164466657 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168324102 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16717584 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.166821619 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.166446219 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.167624232 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169460508 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.167218051 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.174563772 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.184408634 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.16905234 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173910043 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.18451477 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.167916222 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.170975591 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.168436178 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.166225386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.170297753 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.176267072 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.169293017 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.169179526 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.1694387 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168537004 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.169232158 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.174999774 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.183310287 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.168990686 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.169441869 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.170295647 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.167206263 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.170539147 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.16944728 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.169377202 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171042084 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.169456286 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.170172445 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171613799 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.169260267 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.170679179 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.171881945 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172242155 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.176020414 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.173727552 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.170266316 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.172482149 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.170935979 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.173848951 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.17091342 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.170664408 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.170891709 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181152038 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.191576048 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.177199469 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.189331647 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.172004589 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176786812 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.188189074 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.173788736 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.17160489 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172315316 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.171178854 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.17000372 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.168792101 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.172571796 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.173118765 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172093791 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.171722545 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.175453204 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.172506613 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.171645084 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.17158312 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.17118747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.17225134 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.171156974 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.171778703 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.174214306 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173204993 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.171331896 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.172139553 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179120421 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189921435 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.173593956 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.172451874 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.171809545 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.17242722 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.172914811 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.172288514 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.174157788 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.178132033 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.175898326 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.179292498 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.174440045 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.181278985 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.172888928 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.177889322 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.178965677 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.171477625 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.172316069 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.172614886 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.174560685 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17973192 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.191375624 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.174505913 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.176554455 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.1744728 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.174151509 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.175873748 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.173704626 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175160833 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.173476493 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182772048 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.190604001 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.176507799 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.176041353 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.172584803 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.176034804 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.175523224 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.173500679 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178189985 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.174238463 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.176277783 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.17487078 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.174381006 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.175236347 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.175540719 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.176264252 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.174468243 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.176994904 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183429797 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.193651525 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178124471 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.175588184 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.181912721 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193063268 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182776699 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.193523586 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.176205994 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.17669571 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.176679959 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.176542831 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.176038294 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.177242366 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.176019075 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.177517687 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.179959881 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.176832869 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.178321979 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.177729866 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.177053409 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.176382757 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.185933705 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197227467 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.180713392 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.180029555 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.175650311 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.178435014 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.181223673 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.178011955 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.176714184 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.180013112 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185371748 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182974047 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.178477489 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.177535001 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.178391757 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178448797 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.177785388 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.178627731 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.177944274 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.179376271 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.178533878 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.178768337 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180088728 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.178322776 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.178580404 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17995201 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.179115967 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.186776668 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.195885228 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.179558398 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17871014 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.18005296 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.178403005 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.178433465 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.17842597 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178351582 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.179545566 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.180558211 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184037314 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.183478538 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.180733506 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.17959892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.179143218 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.181128355 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.179722126 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180661658 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.180365408 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.179501067 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.180244922 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.179360894 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.179534294 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.179501461 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.180945582 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.180294719 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180395415 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18152301 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.185691502 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180795383 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.178193272 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.180556746 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180220655 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.180043822 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.180592739 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.187062941 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2000821 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.188951352 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.18788536 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.184151663 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.180099281 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.183776758 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.187314012 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.178656791 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.182272471 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.180767127 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.181994112 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.181316347 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.184022823 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18205913 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.186601838 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.200032764 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.180604944 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190001137 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.198227536 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.182072879 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.182302567 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.184333135 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.181553879 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.179408458 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.182310256 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.181213103 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188524759 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.199995459 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.183321436 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.183634877 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.180984513 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.183981068 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185463806 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.182769248 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.183114014 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.179743921 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.18318331 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.182685519 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183744735 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.180211387 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.182289814 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.182277532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.185816794 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.188537371 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.181567031 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.185215073 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.183602094 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.18416729 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.18407641 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183740324 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.181047343 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.180651837 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.182608337 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.18364953 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.183008346 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.185511593 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.182733269 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.183804275 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.184330951 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183852999 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.186567778 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.191763047 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.18953351 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.181549142 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.183994208 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.185362646 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.187061184 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18411448 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.184165845 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184046219 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.186400176 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.185174718 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.184951533 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.185043485 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.187240252 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198613654 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.202168439 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184255416 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.184826235 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.18751022 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.186000678 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.182626073 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.18588519 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.1871778 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.188898064 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.191059412 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.186837017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191650292 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203053891 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.18663266 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.189863615 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.189519789 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.192317318 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.188714039 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187064345 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.188080514 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.191174659 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.201163085 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190492125 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.196568897 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212772817 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.203323278 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.187668704 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.187554216 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.186268819 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.187429088 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.188088391 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.188304661 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.187977686 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.187863482 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.187592464 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.188220587 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192792744 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.188201812 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.188311539 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.188928537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.186474566 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.188551093 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.185462076 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.188624923 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.188546782 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.188576714 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.188176508 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.188029361 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.187967516 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199182758 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.211580716 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.189674856 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.189808297 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.185525763 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.192302447 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.190274396 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195871087 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.194211306 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.190165486 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.189896681 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.190134675 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.189286165 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.188416624 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.190193294 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.18891701 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188582118 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.187152869 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.200167578 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214780794 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.193784735 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.187915159 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.190301386 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.19093528 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.191010972 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.190252354 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.189322746 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.190275766 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.1917212 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.192242422 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.190073314 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.19111444 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.192911707 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.196672933 seconds)
  done (took 701.22739179 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18909814 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18844922 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.188630062 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.189554197 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.188639289 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188414224 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.189248559 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.188595449 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.189407929 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.188848567 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.188747118 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.189211491 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.190300406 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.189789653 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188920423 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.18875928 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.189295607 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.190221544 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.18884821 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189823217 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.190269239 seconds)
  done (took 26.081309058 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.19239074 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.190336605 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.19087966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.192237485 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190216064 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.193782294 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.189637813 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192723051 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.192342912 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189287884 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.193863518 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193261921 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.18972361 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.190721926 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189972932 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193183479 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.193093667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191027205 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.193240739 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.191336119 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194072369 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.191165099 seconds)
  done (took 27.327075174 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.192707766 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.195336532 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.192859859 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.191042738 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.194075236 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.191606388 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.193746618 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.193980369 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.195212067 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.194987482 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.193568712 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.194430695 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.200059904 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.197136728 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.196231892 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.195216272 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.339272324 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.194331657 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.196599272 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.194726957 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.192515177 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.200427759 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.2106565 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.192499601 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.193405626 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.194224849 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.195154616 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.194576637 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.194553623 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.194741647 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.197730362 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.197400995 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.194746737 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.197189697 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.19368215 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.195810239 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.198129963 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.196397583 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.192821033 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.195367965 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.204649763 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.212253656 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.196527121 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.204046856 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.213310473 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.196231069 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.198943759 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.201829966 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.195981932 seconds)
  done (took 59.893327256 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.196809903 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.196824372 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.194229779 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.196491479 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.197512976 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.19740714 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.197329963 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.197522115 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.193935733 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.193923648 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.197048893 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.194542479 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.194391565 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.1986814 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.197435138 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.194144365 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.194724479 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.194891911 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.194433335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.194743752 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.195245114 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.198779843 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.197187258 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.195423379 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.197986822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.1947712 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.195734734 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.197444031 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.196166507 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.194986421 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.198187439 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.198111991 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.198885211 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.196207917 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.195298077 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.198417724 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.198616179 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.195908702 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.200075395 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.195536282 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.198102741 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.199646885 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.1984128 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.198552262 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.195939522 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.195674189 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.196030345 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.196256081 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.196697813 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.198851498 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.198524187 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.196688739 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.198761874 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.196219032 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.198692597 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.200090444 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.197680675 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.196384963 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.199926315 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.197273444 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.196858409 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.200045971 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.196617097 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.199489871 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.199232473 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.197128446 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.197267194 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.199236239 seconds)
  done (took 82.510125697 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.199741457 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.199376841 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199541256 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200753091 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202792911 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.201814647 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.200033567 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.199635841 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.199913967 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202943289 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2035117 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.200928491 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.20195746 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.200611654 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.200569115 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.20102955 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.200399669 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20359674 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.201247049 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201060983 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.201194873 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.201206649 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.201893373 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.200640822 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202418105 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.201325499 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204517258 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.20233306 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204546318 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.204226007 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205162695 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.204551288 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.203814358 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.204311056 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.204707776 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.20386759 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.204103961 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20429742 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.205445443 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205928325 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204925741 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20633579 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205630393 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.205519473 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204655872 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.204805703 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.205536307 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.205018266 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.205873511 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202322795 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.203035872 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204691727 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205432346 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205956964 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.205152435 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.204476929 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202896849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20546871 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204934344 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.205274274 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206073568 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.204778053 seconds)
  done (took 75.717846528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205210739 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204356121 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.201533673 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.201386562 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203920743 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.201150973 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.204239508 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.203280416 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204647611 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.203964707 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204843699 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200952931 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201381382 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204324786 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.201979742 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202102325 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201390911 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20167574 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204989591 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202777281 seconds)
  done (took 25.179573389 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.202372638 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.206570639 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.203676218 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203922444 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.204742597 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.203982995 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.206148373 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205673053 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203978364 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205724471 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205865748 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2054893 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204484854 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.203708788 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.206315861 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.203348841 seconds)
  done (took 20.395700457 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.203726967 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.206410214 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.205408443 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.206144219 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.203566307 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.203041548 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.207516005 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.204190573 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.204350709 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.208058074 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.207247873 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.206659394 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.206985299 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.206541401 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.207027776 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.206934107 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.206460073 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.205419484 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.20783961 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.206526059 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.208127722 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.204724138 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.207988021 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.207986519 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.20513338 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.205534013 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.204649686 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.204332908 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.205486534 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.207673788 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.205782879 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.205609019 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.205015026 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.205078934 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.20772454 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.207089394 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.207817721 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.208262174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.208029685 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.208100284 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.208801815 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.206284242 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.207706027 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.207538302 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.205968836 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.208096304 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.206221978 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.206298782 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.205806334 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.205971205 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.21003241 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.208539299 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.211978443 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.209774386 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.209433662 seconds)
  done (took 67.49091338 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208849123 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.209546164 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.207768933 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.209246752 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.209862958 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.208041927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.20956548 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.208696308 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206675909 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.20973036 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208227198 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21142482 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208774726 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208789408 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.208367489 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211319171 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.20802763 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.208677541 seconds)
  done (took 22.88527758 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207781215 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20913861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.210446451 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.208168915 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.208003053 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21106531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208224402 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.210298963 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211622036 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.209307385 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208684981 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.211943824 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212211757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.211432363 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210042651 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209615451 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.211417939 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210559239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.20918368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209197585 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.211882182 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211452457 seconds)
  done (took 27.746949898 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.209981872 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.210728247 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.21081726 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.22570863 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.226763919 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.231338348 seconds)
  done (took 8.44174422 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217110576 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212588901 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.209916625 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212773965 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213401235 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209923441 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210154235 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210174298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211590513 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210807596 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209647497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213050854 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213026375 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21043008 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212635877 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212887208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209884487 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21045025 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210914776 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213136679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211211183 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21450729 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210997776 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21181188 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211239761 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211399318 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213889329 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211910392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210718281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214937673 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213623326 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211167478 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214522153 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211627449 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215693102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214821597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212020277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2145367 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214607202 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211578561 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215308294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213258486 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214790203 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211478943 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215016642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212867637 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211940068 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211572125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211548371 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215078451 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215139004 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212000137 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215215368 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214917925 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215049118 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212018997 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209534183 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208192054 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211705679 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209413263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209025684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212078215 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210373314 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207135849 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210447005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207381832 seconds)
  done (took 81.151610669 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207588977 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208500367 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208000681 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209195181 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207360167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206932354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206903554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207380114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207784307 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207876608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210445196 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206621399 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20763954 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207496811 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208107972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207012197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207901859 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206860981 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208271937 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21079845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207395852 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207197816 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209709293 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208460943 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208531043 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210315608 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207719126 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207884413 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207789866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20914644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207756838 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208425727 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208264101 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.20887063 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208758125 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208273665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208250089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208765251 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208915529 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211817833 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209014209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212596914 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209526247 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210276097 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210545828 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209672286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209754123 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209869853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210075825 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210289938 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210952654 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210976218 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211020113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210431705 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210513621 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209312292 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210187136 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210131527 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209424872 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212999803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209743292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21008451 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212903221 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210911684 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210816534 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209851881 seconds)
  done (took 80.928975436 seconds)
done (took 1635.512582943 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.373133666 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.328501644 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.210962624 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.262808547 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.212307447 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.227683884 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.219008456 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.211194573 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.211673014 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.210905118 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.211242311 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.399398676 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.214064523 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.212053705 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.212158164 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.309316753 seconds)
  done (took 41.15504258 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.23582197 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.22234738 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.325393905 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.236895753 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.242531492 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.393588912 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.274985984 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.227260165 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.377561761 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.267109499 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.655187825 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.242441108 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.22158628 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.242273719 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.236573981 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.390966556 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.455308197 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.658498578 seconds)
  done (took 28.03555645 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.630476934 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.218946623 seconds)
  done (took 8.98225586 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.238051823 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.220485594 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.221033182 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.219882857 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.222181345 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.212082866 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.21938737 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.21663764 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.597813411 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.336266902 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.229645117 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.231364061 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.239097573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.222565332 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.217473543 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.257802773 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.378964632 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.225821525 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.217883424 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.22667353 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.221701906 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.309465732 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.266032059 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.22647525 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.336458907 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.601412091 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.224021458 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.229836682 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.352137692 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.225128948 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.221362118 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.221915595 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.223321258 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.092146383 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.746994249 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.228778745 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.245290106 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.231512546 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.219430521 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.35486506 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.223716896 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.22800282 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.215056897 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.734254886 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.343498061 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.330076014 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.358457819 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.238671781 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.224091909 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.28503234 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.223106252 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.22403842 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.263319416 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.968980271 seconds)
  done (took 104.926892216 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.243543395 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.610210705 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.385662217 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231327094 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.992674126 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.859509951 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.230611242 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.48082685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.232603986 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.217240919 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.507556925 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.70123324 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.236007044 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.249421132 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.710985537 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.225508029 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.217078344 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.069915492 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.233123857 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.216652059 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.695340642 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.217900189 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.219060705 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.38232149 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.253798957 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.647533386 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.580821364 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.667800559 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.235247532 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.217922346 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.664827773 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.238495719 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.233695485 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.217651076 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.469659728 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.55769314 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.540541919 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.236116784 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.263358513 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.223385854 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.244706625 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.64327783 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.550394983 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.233466638 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.219457947 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.648413051 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.233915296 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.223061589 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.225290246 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.424314095 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.914740616 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.223487828 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.509173997 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.220199615 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.572689268 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.316993222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.225900236 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.678177077 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235298422 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.3855102 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.242843694 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.219584196 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.220025364 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.223581607 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.230439722 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.54721798 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.588827978 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.226683627 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.546848737 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.682536037 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.248170142 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.722023656 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.135682456 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.241359419 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.322896129 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.220360894 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.879773714 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.692066583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.268340333 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.220321147 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.528585645 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.238989265 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.490293681 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.243202254 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.222431644 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720053399 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.233475466 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.279582327 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.224541225 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.222343497 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.991909878 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.229504628 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.49548854 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.272718741 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.222189809 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.221618408 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.267056026 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.222293722 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.244786852 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.226465253 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.724122516 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.244380688 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.191475567 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.24347068 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222980037 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.230752798 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.223700334 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.224590102 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.445140935 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.640129073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.246993646 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.223480137 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.22267865 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.228553703 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.392111449 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.225276655 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.508790926 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.244509003 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223621874 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.230520843 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.995692424 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.273517762 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223349914 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.244939209 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.117004578 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.434682176 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.248635119 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.232330791 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.224880571 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.240550078 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.444384928 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249984995 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.312439038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.227256185 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.90657075 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279233113 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.256902733 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.561653056 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.235088863 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.071773595 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.251223807 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.224540344 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.507091134 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.48442781 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.509762998 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.234701177 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.232893733 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893933772 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.282913288 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.371214014 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.244538029 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.227783133 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.421941944 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.670811366 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226795521 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.892739718 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.226453536 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442091953 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.233185251 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.541071466 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.695256256 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.247322192 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.22737949 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912552529 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916919925 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.070537811 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.22738339 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.490191745 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.170608037 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.691056902 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.225744797 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.233250274 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.791321229 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.230762052 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.230791427 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.227782962 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.227451683 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.278807532 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.398277826 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.420880052 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.231533792 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.653444047 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.287451382 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236990468 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239370621 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.230930894 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.575359477 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.309782441 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.226053983 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.266965851 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.227474458 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.230548438 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.674971313 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.178874255 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.23569824 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.378877565 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.834976954 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.249756424 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.227293211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.771837019 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.495821126 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755622329 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.243191286 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.512431734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.247669984 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.264145353 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979588203 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.280822192 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.720176704 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.252492671 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.237183319 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.803855025 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.2503057 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.586074662 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.228542335 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.231852915 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.763430457 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.250188516 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.233401492 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.450815806 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.253675173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489701592 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.237018088 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.257911351 seconds)
  done (took 1086.412259989 seconds)
done (took 1270.639404284 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.229718093 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.238139401 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.218421726 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.239945121 seconds)
  done (took 26.075959331 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.239511016 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.236132084 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.237459387 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.235961353 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.239090892 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.236367712 seconds)
  done (took 8.574069707 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.269954856 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.237313057 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.239351048 seconds)
  done (took 18.897682729 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.435462394 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.447715352 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.552179603 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.260443398 seconds)
  done (took 9.847700321 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.237762927 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.237555563 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.23849637 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.239777943 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.241057416 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.241742912 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.239838714 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.23985823 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.242491896 seconds)
  done (took 12.309505594 seconds)
done (took 76.854552484 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.423027315 seconds)
    (2/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.040260029 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.216643968 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.246222464 seconds)
    (5/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.954034069 seconds)
    (6/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.694238369 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.054800299 seconds)
    (8/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.45872953 seconds)
    (9/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.216881809 seconds)
    (10/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.329879454 seconds)
    (11/286) benchmarking ("sort", BigInt, false)...
    done (took 6.229125718 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.49413914 seconds)
    (13/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.239326196 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.278122744 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.920907126 seconds)
    (16/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.08519783 seconds)
    (17/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.231764024 seconds)
    (18/286) benchmarking ("sort", Int8, true)...
    done (took 6.238174239 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.281333833 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.948995882 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.236269294 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.231502417 seconds)
    (23/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.359784822 seconds)
    (24/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.873904562 seconds)
    (25/286) benchmarking ("sort", Float32, true)...
    done (took 6.253358619 seconds)
    (26/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.247100404 seconds)
    (27/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.256889214 seconds)
    (28/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.210726468 seconds)
    (29/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.238863158 seconds)
    (30/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.357818606 seconds)
    (31/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.818030704 seconds)
    (32/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.69196044 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.350982283 seconds)
    (34/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.469855901 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.252260369 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.118613947 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.263641024 seconds)
    (38/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.212669326 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.351857305 seconds)
    (40/286) benchmarking ("sort", BigInt, true)...
    done (took 6.232751817 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.584488651 seconds)
    (42/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.232683518 seconds)
    (43/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.229734736 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.588957859 seconds)
    (45/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.82192687 seconds)
    (46/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.219814897 seconds)
    (47/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.239418195 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.050883386 seconds)
    (49/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.37626312 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.337344465 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.343156894 seconds)
    (52/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.695796987 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.496054572 seconds)
    (54/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.213482611 seconds)
    (55/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.710385958 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.845056541 seconds)
    (57/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.805789855 seconds)
    (58/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.22285557 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.352774246 seconds)
    (60/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.383180434 seconds)
    (61/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.244407007 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.256545489 seconds)
    (63/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.261150174 seconds)
    (64/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.476395544 seconds)
    (65/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.371471222 seconds)
    (66/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.253269604 seconds)
    (67/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.245861116 seconds)
    (68/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.604601239 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.267214941 seconds)
    (70/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.469721499 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.07498701 seconds)
    (72/286) benchmarking ("sort", Float32, false)...
    done (took 5.21575292 seconds)
    (73/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.227877386 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 5.422474776 seconds)
    (75/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.224892586 seconds)
    (76/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.413583577 seconds)
    (77/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.010977248 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.268537711 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.113007755 seconds)
    (80/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.217948424 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.225544449 seconds)
    (82/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.9602604 seconds)
    (83/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.584210223 seconds)
    (84/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.947108479 seconds)
    (85/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.231583847 seconds)
    (86/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.579491605 seconds)
    (87/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.228726175 seconds)
    (88/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.412588705 seconds)
    (89/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.217766614 seconds)
    (90/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.288424022 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.341070178 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.589557385 seconds)
    (93/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.636167511 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.688008369 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.648491453 seconds)
    (96/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.518912093 seconds)
    (97/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.226793405 seconds)
    (98/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.246060739 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.373384776 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.267030063 seconds)
    (101/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.962727897 seconds)
    (102/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.367356967 seconds)
    (103/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.026418023 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.872326402 seconds)
    (105/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.59315691 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.444324179 seconds)
    (107/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.961655801 seconds)
    (108/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.446626701 seconds)
    (109/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.072755588 seconds)
    (110/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.646836163 seconds)
    (111/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.262716511 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.217551646 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.219200566 seconds)
    (114/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.34578819 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.130054927 seconds)
    (116/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.328898385 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.754236329 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.284573717 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.229701638 seconds)
    (120/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.249867997 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.526830349 seconds)
    (122/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.963809847 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.959635818 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.526464887 seconds)
    (125/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.291408677 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.260943672 seconds)
    (127/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.978330971 seconds)
    (128/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.226977951 seconds)
    (129/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.438383897 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.226971009 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.351799351 seconds)
    (132/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.05464387 seconds)
    (133/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.608782868 seconds)
    (134/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.331347931 seconds)
    (135/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.265522416 seconds)
    (136/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.219474026 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.237851728 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.987236739 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.273185807 seconds)
    (140/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.067545995 seconds)
    (141/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.327091467 seconds)
    (142/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.66712888 seconds)
    (143/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.022900187 seconds)
    (144/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.329567079 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.302561553 seconds)
    (146/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.267339003 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.459123364 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.271206204 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.109544779 seconds)
    (150/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.585689969 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.448668826 seconds)
    (152/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.222399663 seconds)
    (153/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.233450967 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.860367047 seconds)
    (155/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.332423701 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.240061061 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.32587248 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.568939178 seconds)
    (159/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.811477787 seconds)
    (160/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.312780452 seconds)
    (161/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.414327294 seconds)
    (162/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.305218218 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.254378464 seconds)
    (164/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.333856276 seconds)
    (165/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.584166641 seconds)
    (166/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.228892787 seconds)
    (167/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.289850464 seconds)
    (168/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.383320052 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.651169316 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.261170484 seconds)
    (171/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.594779602 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.59828821 seconds)
    (173/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.318956909 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.270779347 seconds)
    (175/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.267074244 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.339684892 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.012958198 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.836899671 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.222099696 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.513615119 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.291917386 seconds)
    (182/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.720532735 seconds)
    (183/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.258075745 seconds)
    (184/286) benchmarking ("sort", Float64, true)...
    done (took 6.243784196 seconds)
    (185/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.306049689 seconds)
    (186/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.223066612 seconds)
    (187/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.251547033 seconds)
    (188/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.705572845 seconds)
    (189/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.277584081 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.267545205 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.222998789 seconds)
    (192/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.250775253 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.609946887 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.266150528 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 5.334882074 seconds)
    (196/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.257164627 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.301991581 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.28071363 seconds)
    (199/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.482493819 seconds)
    (200/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.593247571 seconds)
    (201/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.242161208 seconds)
    (202/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.24006548 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.669785084 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.270627885 seconds)
    (205/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.223170772 seconds)
    (206/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.494342772 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.941779106 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.921913842 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.44463624 seconds)
    (210/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.270390251 seconds)
    (211/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.731261837 seconds)
    (212/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.157565614 seconds)
    (213/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.274211322 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.642027482 seconds)
    (215/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.426471353 seconds)
    (216/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.233043922 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.821944694 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.275497811 seconds)
    (219/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.224580198 seconds)
    (220/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.256957032 seconds)
    (221/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.476806528 seconds)
    (222/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.278498494 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.285850033 seconds)
    (224/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.714946153 seconds)
    (225/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.034640219 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.3825394 seconds)
    (227/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.330101828 seconds)
    (228/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.819754177 seconds)
    (229/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.197698466 seconds)
    (230/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.236827038 seconds)
    (231/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.60097518 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.268846183 seconds)
    (233/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.346687578 seconds)
    (234/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.11485604 seconds)
    (235/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.253620548 seconds)
    (236/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.423645212 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.76818881 seconds)
    (238/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.22542063 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.279731288 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.283253367 seconds)
    (241/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.346804329 seconds)
    (242/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.746437601 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.226101171 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.444034561 seconds)
    (245/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.241101247 seconds)
    (246/286) benchmarking ("sort", Int8, false)...
    done (took 4.296965375 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.653251992 seconds)
    (248/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.381218274 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.27258794 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.023586642 seconds)
    (251/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.88778891 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.648703415 seconds)
    (253/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.328977596 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.912274829 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.025513082 seconds)
    (256/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.255506606 seconds)
    (257/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.547677894 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.304620912 seconds)
    (259/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.276749724 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.349344203 seconds)
    (261/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.247370563 seconds)
    (262/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.265028998 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.34243995 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.354871236 seconds)
    (265/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.304300582 seconds)
    (266/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.421493916 seconds)
    (267/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.22144822 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.081479119 seconds)
    (269/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.341958466 seconds)
    (270/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.270115498 seconds)
    (271/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.367667865 seconds)
    (272/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.329111757 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.285625172 seconds)
    (274/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.226705639 seconds)
    (275/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.296491377 seconds)
    (276/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.244160862 seconds)
    (277/286) benchmarking ("sort", Float64, false)...
    done (took 5.516267556 seconds)
    (278/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.449354474 seconds)
    (279/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.281992394 seconds)
    (280/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.329688769 seconds)
    (281/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.596153165 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.268253975 seconds)
    (283/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.245360795 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.227110546 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.226220781 seconds)
    (286/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.386275586 seconds)
  done (took 906.506372937 seconds)
done (took 907.658353187 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.279801692 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.274520918 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.256724477 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.27800364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.368179929 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.286179526 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.26769671 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.258699964 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.304549535 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.305881785 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.255149809 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.286324718 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.257555714 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.256089316 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.256714711 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.271795539 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.241989878 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.265614209 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.27348528 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.267022795 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.272900801 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.254728331 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.306748244 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.286694985 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.261063483 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.260159627 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.259929437 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.276919267 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.367946101 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.260318598 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.260911919 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.268307728 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.243666663 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.266284624 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.253327443 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.27701392 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.269461533 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.26778361 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.261522425 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.289429543 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.60968274 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.272588955 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.259232014 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.258792858 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.258613372 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.263554004 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.259620449 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.265203621 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.272965213 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273585598 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.594289989 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.28854438 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.261865359 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.260192876 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.270703251 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.25957021 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.263521516 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277552304 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.279064122 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277165255 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.218293385 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.265299883 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.262705756 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.277113894 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.267010215 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.635871716 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.270298012 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.265648096 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.60989163 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.280473577 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.632627137 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.28297247 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.262182503 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.274778448 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.291586661 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.242714325 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.264485131 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.260559252 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.268034644 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.259574972 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.271095666 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27491711 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.265519802 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.261540263 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275576934 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.290418432 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.271153825 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.262964189 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.269895431 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.280316736 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.268509473 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.272319719 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.264900981 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.257221554 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.271529975 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.266005912 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.265210037 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.264257711 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.267617476 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.273727404 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.607710499 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295472614 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.260006898 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.259195361 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.262035335 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.275387951 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.608324377 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.277557389 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.285336662 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.310412105 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.264376261 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.23325227 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.273892468 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.2805068 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.272799992 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.26683207 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.259925433 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.234751587 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.60771113 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.292443961 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.265459947 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.262091082 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282059183 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.26528401 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.260564721 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.24636063 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.274161295 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278806738 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.384641906 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.274416089 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.294725489 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.262394955 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.268192634 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.289992618 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282128863 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.295677449 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.268077774 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281353466 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.279841429 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.261075585 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.27536887 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.275193147 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.266350758 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.271250201 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.259318456 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.290403566 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.278739474 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278838599 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.286503456 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.386425294 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.263052173 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.237912968 seconds)
done (took 213.335973663 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.325831398 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.259865709 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.355153618 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.26232116 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.364887768 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.368632852 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.259453087 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.26058984 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.259523743 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.641589523 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.259735859 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.261058023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.262783703 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.259577273 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.349419977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.262690145 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.25972036 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.633827245 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.263713677 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.336929074 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.264281 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.260479545 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.26289956 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.679586256 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.259097423 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.262953614 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.337987656 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.263919708 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.609997491 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.261289634 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.263174472 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.642035181 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.356686214 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.281754372 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.273198162 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.271237699 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.366177088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.285786126 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.346168508 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.346816373 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.35734574 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.301853036 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.259852258 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.264130678 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.268630477 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.26528992 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.261960947 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.29083327 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.261032569 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.262818248 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.605489489 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.273977912 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.263815535 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.263270434 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.26330291 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.293599455 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.262945578 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.265617592 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.358561799 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.265520266 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.332590763 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.647904003 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.677828154 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.265189734 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.266501716 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.263325317 seconds)
  done (took 143.941128399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.333296449 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.338136747 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.372731105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.289027698 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.317400633 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.377241516 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.287161989 seconds)
  done (took 10.492671706 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.272140205 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.266985587 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.316823618 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.315990648 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.267639636 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.4450471 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.26810079 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.282339028 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.266182003 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.319357151 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.269190974 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.268143973 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.274321066 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.260302286 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.314828157 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.278821967 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385064631 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.268855252 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.268316932 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.418662713 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.264596074 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.275427631 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.318892184 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.279286753 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.270629215 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.27597209 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.090633418 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.26845257 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265220031 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.269324611 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.265929437 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.342640004 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.268876892 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.268075625 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265542536 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384293501 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.269090121 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265704049 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.269093147 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.269836447 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.269592849 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.269105934 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.268718737 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.266356433 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.269079313 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.291459141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.269269792 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.269532635 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.270181245 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.270484413 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.319640693 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.27040407 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.266606893 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.26681608 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.324806162 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276314365 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.270501822 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.266981349 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.271014977 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.267531943 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.420825908 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.317716245 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.269640914 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.316999267 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.271919832 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.271292557 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.269895078 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.270626425 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32428078 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.272027381 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.318898539 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.268203033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.456734675 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.294560077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.272882652 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.272666387 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.273152162 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.271758392 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.267224525 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.276940286 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.26887309 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.273183813 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.276768687 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.269758153 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269984044 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.439297759 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379529528 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.269300813 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.284682755 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.277883192 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.269159549 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.324593603 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.27176077 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.271386121 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323780455 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391126919 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.325522194 seconds)
  done (took 147.334808047 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.277190177 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.280528586 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.27409065 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.289046322 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.272713382 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.273145415 seconds)
  done (took 8.850159757 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.275202103 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.273442362 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.272698132 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.273660385 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.272437794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.273491303 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.272565026 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.273812808 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.276442451 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.273230756 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.274434458 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.275427735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.274932061 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.272333157 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.273801337 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.273888313 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.274131673 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.271616599 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.273861304 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.273894127 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.378240997 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.273815454 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.274032164 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.27400679 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.27874504 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.274457139 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.281685661 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.273823672 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.274486766 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.282664931 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.292572995 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.275773406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.275957072 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.280644058 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.277567662 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.275628266 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.279306462 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.278230212 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.273772191 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.276452246 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.27777076 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.275559643 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.276203328 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.277870879 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.27807869 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.279643222 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.281476306 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.284097609 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.276779777 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.277791009 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.278116224 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.277124782 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.277536295 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.278213599 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.278280836 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295577454 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.281475685 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.277647387 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.277625409 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.277566657 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.277963953 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.277492023 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.278391975 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.279570867 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.274998471 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.279697413 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.277672487 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.280907264 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277325709 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.277286594 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.280846472 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.275423475 seconds)
  done (took 94.235596463 seconds)
done (took 406.027532208 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.524155174 seconds)
  done (took 7.712460018 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.47826349 seconds)
  done (took 7.670595346 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.950055344 seconds)
  done (took 21.143365672 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.331387065 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.281510911 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.286482004 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.273836194 seconds)
  done (took 26.364614321 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.524802901 seconds)
  done (took 7.716549159 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.274067038 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.2879293 seconds)
  done (took 13.75544334 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.575500655 seconds)
  done (took 7.767474211 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.491032961 seconds)
  done (took 7.684387505 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.276988171 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.297984134 seconds)
  done (took 14.019725679 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.26415983 seconds)
  done (took 7.458409601 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.156947222 seconds)
  done (took 11.35124838 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.286436646 seconds)
  done (took 7.481917153 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.317703774 seconds)
  done (took 7.510596197 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.943807681 seconds)
  done (took 9.136627632 seconds)
done (took 157.961774734 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.275763486 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.28430397 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.284812629 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.286000727 seconds)
  done (took 26.324282523 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.315517528 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.316473217 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.318004383 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.327069742 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.320041388 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.316764338 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.308655379 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.310262361 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.327838494 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.319941651 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.319421884 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.320708211 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.318491961 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.309440957 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.319789585 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.318900411 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.328120045 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.319692613 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.309375493 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.320097657 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.284971776 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.3299202 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.320247451 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.285009502 seconds)
  done (took 32.779453033 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.806888637 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.356071037 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.437623809 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.336131884 seconds)
  done (took 7.131477265 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.335932163 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.338636033 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.34894288 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.389037289 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.414266147 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.347932475 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.312476808 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.306878485 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.292534105 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.339165256 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.415202434 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.355387458 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.422317968 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.285537582 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.485145815 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.286042769 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.285827758 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.338476908 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.389447447 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.403086611 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.286446691 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.338915311 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.34183826 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.355733247 seconds)
  done (took 33.611267374 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.286610885 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.304756347 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.285986811 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.285422761 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.294342524 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.284636075 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.286194209 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.287682638 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.286200223 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.292090992 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.286167876 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.298407131 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.285880703 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.287795151 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.29214783 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.288232862 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.293292529 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.285653629 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.286942603 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.294220512 seconds)
  done (took 26.989637552 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.280326125 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.134064653 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.631991837 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.536069453 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.281640355 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.288627023 seconds)
  done (took 27.350377873 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.352379377 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.503531556 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.287595753 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.62300235 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.71632671 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.304229302 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.286673861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.516582799 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.815846603 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.816363578 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.342613281 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.352732392 seconds)
  done (took 19.116462389 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.293182898 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.289785362 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.291158997 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.305761407 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.339052521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.306659489 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.294421067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.282788275 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.348834744 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.358569268 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.311481568 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.341373048 seconds)
  done (took 36.962217353 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369088626 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330311685 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.173985046 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379304835 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009757762 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.49499314 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347624746 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988362428 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.313697754 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557408282 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286875253 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381898918 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.539030035 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293609161 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293261223 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.224619626 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533379429 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743235559 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286155378 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146097769 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318326083 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.284989532 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.248929095 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513535727 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517643583 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26367318 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.546266665 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.060375963 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558401295 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30815303 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2961296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285744083 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5600506 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920589622 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406206725 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487308738 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31251589 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.832178398 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.272627181 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.150403268 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297630161 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313498869 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296752779 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286544668 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.220383417 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291972056 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989264791 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.310298428 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.997712355 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287699137 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532854744 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391991057 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.290829802 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.894436955 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370286756 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.280050537 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.291175527 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378728761 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877397054 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.391941273 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303694737 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.230315397 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28725234 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184548489 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894496855 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.309144099 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.291533042 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.291963024 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221343112 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.146722575 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313561713 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435231806 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.314388852 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934724023 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946074072 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316714689 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.226849808 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80899506 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290288912 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.231321134 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516060845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.064415005 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22326842 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.234216879 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.223219149 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954322733 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306262396 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.637769217 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318954974 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.99221895 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511869764 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333070074 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312894634 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.513413257 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.171336847 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289705424 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.289604103 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426101774 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311029229 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978355054 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243146107 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.293186201 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546198066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.501531954 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290179449 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.249784369 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770648703 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321605961 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.31386638 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298902338 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.502730542 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.873259727 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329524429 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401862238 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317404963 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.066541626 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991291255 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305988941 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.303183147 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292086993 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580540908 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.007675222 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.17496304 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3597883 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301089926 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291910076 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.185869357 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15070273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.17454751 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.481174313 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314290354 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.311502275 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.293067511 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240864867 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.290454189 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300315985 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.096137513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515842768 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296126278 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578829768 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226831582 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439595267 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301913772 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.516273112 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44830415 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.314023582 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552385086 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301170466 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.304974519 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311877166 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311941106 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392891899 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314690437 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.295225479 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.557892627 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.297033929 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.298172215 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.179391644 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.081871839 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299567077 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.299359134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296471417 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852286382 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287511408 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294491127 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182834227 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.308817301 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361789862 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299971751 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.49871567 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.475696892 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334296847 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.301287122 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.293121106 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525393854 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304951633 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.180047575 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384391424 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.756698264 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876541944 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333318833 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.229327761 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.006239 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.988107211 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295717946 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.483733106 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295680887 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499062603 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334684875 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307285651 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869291078 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322311084 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.175589549 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.311309025 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308366043 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.301378498 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296405668 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.432588007 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443492813 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307322811 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.33160433 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440598857 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.31036557 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.230016335 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.813651769 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301844876 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298565446 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.073160223 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33065998 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.195817823 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087654499 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573846153 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298455374 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545698909 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.274578694 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.336164253 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.293321982 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304952309 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307866759 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.326157878 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305729988 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.308123705 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.197914621 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.74435576 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868037688 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014714752 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83241997 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553438789 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.31980315 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.188469791 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.991361326 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249799814 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.956245458 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527356052 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026970887 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267883539 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765928503 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.482792043 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056068804 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557706136 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536988565 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535219016 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.326278196 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561756913 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519295362 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33380328 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31162872 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.235876736 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.091526477 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838576309 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323974221 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387007835 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991661661 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318226963 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.101186357 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.348031828 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.974942426 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697514692 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.870184116 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.686881641 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300820934 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313032073 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090259162 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321007907 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826407574 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90529262 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33923307 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.775353603 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263801465 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506638089 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338358024 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.298156035 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.784069303 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.317455458 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.564681715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551111712 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246237748 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312930182 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821961523 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.193964243 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.306918948 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302878929 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012535133 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323761038 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585965994 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.323287796 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.457189388 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331841293 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23652866 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237087871 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.994709501 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.308435481 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279827034 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76709354 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.312994319 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333552952 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31392311 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240713622 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558654407 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.316970659 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.858030811 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552742852 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308271939 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351595641 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.307080455 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303753129 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.309311755 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.185653997 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538551331 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330959865 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.535726261 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.213091929 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.213475449 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.758474375 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525405398 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.204859199 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313848569 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548992231 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.040517745 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.313787007 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979239552 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354754588 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314240874 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325486279 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.305275917 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334614315 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39341573 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509650689 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.341605173 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.316066146 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693427799 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343003627 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317012946 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.319269397 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39931127 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.450429623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.467342283 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.087568019 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864223455 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032187454 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.892915893 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582101508 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.316174702 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306436314 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239645582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455316925 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.833494467 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57982624 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437290557 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.31081519 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338643107 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306356672 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317873498 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527522779 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581253502 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.176472217 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313217743 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9745198 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.465697444 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316471131 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.517800912 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775872993 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855361795 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436710066 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307020644 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018062738 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600087055 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398144824 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30780244 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898522133 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.317013416 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.984050116 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.319734002 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306295926 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479120206 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550259939 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955910764 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.339735753 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.464122096 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.074184358 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21407891 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568140719 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.742855852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521525796 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891255242 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999040676 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5761293 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373845643 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.512559401 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.433258144 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452281151 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.302593802 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.203508711 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305590276 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208522437 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.013599848 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.312218594 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875422529 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591414777 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.306994001 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.301651029 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335724359 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.312978988 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.527814942 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982436487 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537490819 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314185175 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310841756 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.874530577 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870798941 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580775269 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250219712 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.308677712 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537608947 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.566267729 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330980291 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.758416235 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.016619039 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840762503 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.28515124 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327360687 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305613817 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989526079 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88443315 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.492414197 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801443804 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973109391 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305773511 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588552151 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.311091907 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312594327 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591691933 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.309290978 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.305444055 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54115461 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.891211924 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077549958 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.321192004 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.255191524 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.252487269 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.532188087 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332069841 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25221656 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311587799 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.701827928 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335386562 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437516297 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31824725 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.308803145 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31745288 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.049907688 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592621695 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.313135653 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.29901744 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.289743702 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324216989 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40722087 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854153821 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32668945 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.982449991 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.658517471 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.562882144 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.312944413 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.297731881 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.312795467 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308951504 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02563002 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277416287 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311958435 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858744306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.322028008 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.328019935 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312399177 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.5255322 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521228107 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319644415 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527180301 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340123355 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332475032 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.209108711 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077025795 seconds)
  done (took 1636.843531956 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.318207776 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.310668939 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.324587131 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.380987546 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.349458544 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.341554964 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.328620566 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.31494484 seconds)
  done (took 51.893310059 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.32369225 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.472683825 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.33945747 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.315381072 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.329130033 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.32031535 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.75751316 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.338108585 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.327860849 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.320952973 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.323298289 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.329221821 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.94289308 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.329791292 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.318617269 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.30092012 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.318737954 seconds)
  done (took 64.933916051 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.294272562 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.611463197 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.912504619 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.328261947 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.325818966 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.314621328 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.742059474 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.331648948 seconds)
  done (took 58.087676381 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.329656041 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.328585748 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.328544908 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.328588503 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.328361761 seconds)
  done (took 7.870041736 seconds)
done (took 2031.088753055 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.315420454 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.318531795 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.316214929 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.319298849 seconds)
  done (took 6.495268368 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.292024101 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.019454265 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.293533466 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.307444815 seconds)
  done (took 18.138775818 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.311136313 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.321319415 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.969242942 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.904408902 seconds)
  done (took 5.102020439 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.0627186 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.076462953 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.05941479 seconds)
  done (took 7.4252063 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.312794701 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.322742409 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.320068749 seconds)
  done (took 20.182613912 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.597293815 seconds)
  done (took 2.823799161 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.459998135 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.509711031 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.630533515 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.634402295 seconds)
  done (took 7.461837511 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.704049206 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.698435494 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.514184135 seconds)
  done (took 6.143995409 seconds)
done (took 87.63217083 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.010603664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.56485869 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.518550741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.9762892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.538874134 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.518927555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.522183255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.940408017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.524331895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.484099414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.977469081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.542645913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.468989983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.316974946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.470210734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.318156096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.541164376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.133359052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.669217134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.857831242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.521636275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.615274763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.810502508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.645756591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.549616129 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.470383058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.209192704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.320502755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.832684296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.223502241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.469594402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.031499194 seconds)
  done (took 187.823628852 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.318896267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.322695823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.316026079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.315519283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.315808753 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.314279819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.344852249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.314061158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.342716372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.314589928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.331572784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.3267036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.317557282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.333626758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.315709741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.327037171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.315318883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.315713081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.314791913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.3392228 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.314901793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.331325102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.315192231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.328230694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.316214543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.31588963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.31577802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.316106534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.316014923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.328529003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.316427172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.316265791 seconds)
  done (took 203.517824845 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.321562827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.316101311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.331707968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.317062579 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.316277975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.330675869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.316292507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.316412028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.333503806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.316350719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.316187241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.329378374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.320327163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317550599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.332526564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.318474958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.346034634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.317802804 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.317879867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.332399432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.32067806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.317832114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.333774711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.317989942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.324454096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.317636429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.317944586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333652359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.317889105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.334876172 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.319191151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.318936767 seconds)
  done (took 203.571116608 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.513436256 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.324472155 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.325888583 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.259633611 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.325070791 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.325268694 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.320232034 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.521849373 seconds)
  done (took 14.14800948 seconds)
done (took 610.287962475 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.522893012 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.243937392 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.520540372 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.346820465 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.040977323 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.362069174 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.345956615 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.510737001 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.239520183 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.523043475 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.547875162 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.368817521 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.66790355 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.344670498 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.601495853 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.444880439 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.187985129 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.303639691 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.654075936 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.817660592 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.608410034 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.809228617 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.535024865 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.237924834 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.686446108 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.782207813 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.006641892 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.174977961 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.361858763 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.667226926 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.861881768 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.25801213 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.403796801 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.410207181 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.466867782 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.447715349 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.259290881 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.409262097 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.553292011 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.568723525 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.818953266 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.053495032 seconds)
  done (took 90.211304132 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.309923554 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.31054558 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.309676887 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.310959632 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.311743905 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.309963512 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.310483899 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.309626383 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.310868181 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.310269151 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.311406848 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.312991468 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.309671143 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.312690957 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.313128023 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.311013921 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.312545601 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.313059283 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.311292857 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.31089981 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.31426803 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.310890498 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.311645717 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.312029029 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.311283505 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.312081506 seconds)
  done (took 35.331421272 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.3298366 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.584873614 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.737914018 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.343672012 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.330697867 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.33483571 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.406381468 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.340458545 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.332050828 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.333457742 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.483671483 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.336252223 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.365369236 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.767827256 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.341354755 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.331653286 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.332021441 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.33173508 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.593053527 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.339566757 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.427731896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.331807361 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.40607337 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.349125764 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.353947893 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.331620426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.336896095 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.906234845 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.359297032 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.486398533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.093317883 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.41451894 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.882975726 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.780464265 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.097644196 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.342854796 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.332518118 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.490178692 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.345470135 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.333017106 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.406851228 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.34442468 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.76471185 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.017340972 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.3600756 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.333943309 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.930367389 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.512435529 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.566850901 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.34136395 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.767465722 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.336874789 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.33551018 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.335134662 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.566230943 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.351156171 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.333149253 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.930179008 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.356702188 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.408766205 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.344116906 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335055357 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.588327631 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.335244907 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.578356607 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.336184804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.34344728 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.353666025 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.757099797 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.345584544 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.027802571 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.360260697 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.334397855 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.483100286 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.577009309 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.963598088 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.365105845 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.593459087 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.894177217 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.432644866 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.349085377 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.895122446 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.438929871 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.345987566 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.337157972 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.337491537 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.336672003 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.386260804 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.4074241 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.969838954 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.059983421 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.961688342 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.429653708 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.356254916 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.336748129 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.935080456 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.362661293 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.336522338 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.742086659 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.045246472 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.361806174 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.344738026 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.021525552 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.355374413 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.413545368 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.345661913 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.764027147 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.348157741 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.387911614 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.337732613 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.3442939 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.358500701 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.412510671 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.351469244 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.337722027 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.022408836 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.524347179 seconds)
  done (took 176.989197297 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.331205889 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.332029341 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.336082624 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.34820355 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.330611023 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.337789937 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.331311526 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.333022281 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.335692063 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.331950421 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.332983453 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.332674569 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.333870928 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.338963887 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.34333788 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.339750994 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.942235312 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.333597727 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.33274866 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.332909627 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.121787894 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.343861336 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.333546752 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.332631121 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.333705312 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.335331826 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.333816672 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.335799902 seconds)
  done (took 152.026782556 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.33942775 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.880036841 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.365959701 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.46530325 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.359750958 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.33641023 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.461721467 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.403894749 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.365736392 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.337756705 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.337769786 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.628528054 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.3508766 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.833588717 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.529923543 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.489689094 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.841759323 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.364952052 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.339069262 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.33958093 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.468244142 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.343168675 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.628916247 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.889270401 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.359238668 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.878246746 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.325895277 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.341971433 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.340617676 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.881088974 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.356631848 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.629297617 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.414743324 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.406860352 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.906547088 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.848062569 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.846865949 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.481699824 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.340630775 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.340259398 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.340005076 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.325264325 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.880375791 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.359603195 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.341850129 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.873431252 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.368502284 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.342860128 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.34697685 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.339754079 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.398444771 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.424033421 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.660261074 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.901132788 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.441015856 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.363202596 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.467021855 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.718949313 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.356109857 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.833079999 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.324692891 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.888434824 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.369436054 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.325126326 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.343173447 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.347732125 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.485436899 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.468486578 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.848033928 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.368413169 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.837464972 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.509953068 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.341959756 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.342214134 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.344301514 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.888901378 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.866127593 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.511232162 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.471120722 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.526072749 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.337053326 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.343247584 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.327363223 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.417831966 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.349726633 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.891113431 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.865963028 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.369297023 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.345229593 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.345708168 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.345001861 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.511753266 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.915298537 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.443939631 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.830017109 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.663143151 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.648119408 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.356370051 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.400378999 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.36877149 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.639928139 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.357377569 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.399213781 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.7829604 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.649759182 seconds)
  done (took 160.044360511 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.580072788 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.515121442 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.445458291 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.499363927 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.93726097 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.919269492 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.575207528 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.492747389 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.461656099 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.60598935 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.46455604 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.440225837 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.552180999 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.42677852 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.072705821 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.437003634 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.452138142 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.49927366 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.500610608 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.33342359 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.003032225 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.631627208 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.53100945 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.132473696 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.445282325 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.090756121 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.906541757 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.904690363 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.530169362 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.612384865 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.884762892 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.453601245 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.293998847 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.039594256 seconds)
  done (took 64.924139686 seconds)
done (took 680.760642235 seconds)
SAVING RESULT...
DONE!
