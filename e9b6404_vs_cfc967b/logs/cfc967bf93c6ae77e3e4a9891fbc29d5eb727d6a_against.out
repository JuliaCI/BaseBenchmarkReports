cset: moving following pidspec: 23639
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228893577 seconds)
loading group "string"... done (took 0.459902143 seconds)
loading group "linalg"... done (took 7.506385347 seconds)
loading group "parallel"... done (took 0.169821118 seconds)
loading group "find"... done (took 1.14662667 seconds)
loading group "tuple"... done (took 2.076191817 seconds)
loading group "dates"... done (took 1.312903661 seconds)
loading group "micro"... done (took 0.243377043 seconds)
loading group "io"... done (took 0.645636167 seconds)
loading group "scalar"... done (took 40.474513515 seconds)
loading group "sparse"... done (took 12.412509194 seconds)
loading group "broadcast"... done (took 1.103146074 seconds)
loading group "union"... done (took 13.705396585 seconds)
loading group "simd"... done (took 4.7467152 seconds)
loading group "random"... done (took 9.5935349 seconds)
loading group "problem"... done (took 1.980684017 seconds)
loading group "array"... done (took 22.416080144 seconds)
loading group "misc"... done (took 1.42532274 seconds)
loading group "sort"... done (took 3.5489211 seconds)
loading group "collection"... done (took 19.186979265 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506889901 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135689063 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132396636 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145354553 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200489298 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142551203 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15434344 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112258409 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.936563659 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178466091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151789054 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.504313659 seconds)
done (took 5.038982488 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.219119151 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092473454 seconds)
    (2/2) benchmarking "String"...
    done (took 0.101997153 seconds)
  done (took 0.857106396 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07606006 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143743122 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09329033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076967244 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093071431 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076680108 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093705654 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077661453 seconds)
  done (took 1.325115456 seconds)
done (took 3.152549523 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.721388152 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272941569 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200421078 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454907543 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194335251 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211008341 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667928602 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34656846 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.257956559 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099046226 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141111135 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382592222 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134144639 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675892148 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090757293 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121485637 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176852981 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.465218632 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083748358 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109104255 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115216259 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139818294 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12647497 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089479417 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183873261 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081144673 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191782244 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106404233 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079204381 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285005812 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199786085 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680250342 seconds)
  done (took 10.790768856 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109167101 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131881091 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096317244 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136712709 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132186945 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097719903 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083211047 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095412433 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119698763 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173398692 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.126680312 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119321962 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093486579 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080002877 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112723031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241536373 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121246412 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103090484 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099049421 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10258021 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120049225 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110977738 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106743227 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09122375 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164324884 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219217578 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112877604 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126584847 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098559889 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113988178 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143066589 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141787931 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093389643 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079351021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170454322 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122939892 seconds)
  done (took 5.073988409 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18510963 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11873131 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165426532 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160865927 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137838029 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157701869 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110565529 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243128429 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.115032155 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162944776 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138506434 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114773039 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078523893 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096453564 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093514784 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.602737853 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161752892 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133134297 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09477421 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105245855 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098602543 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362114726 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100902569 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079650612 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097339186 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065307657 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153313879 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158421959 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098204361 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.12411529 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122373293 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081593029 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133180941 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20414498 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108168507 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13187306 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094160458 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078210765 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177025768 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104111681 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077969938 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11921541 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132991069 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13243185 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095738246 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079851079 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201645418 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094882416 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112107008 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.927595286 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179605424 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089111593 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095445298 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320188763 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097646783 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09924788 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076005322 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248432186 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.178511312 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097130618 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078861915 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095018116 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080427422 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380254081 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095359152 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096206313 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081428574 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10558893 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.658083921 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08455795 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096728298 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10217303 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087153907 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113247137 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079004885 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097782316 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078183027 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095364927 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080226871 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108023755 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100792334 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080023929 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163130029 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079350448 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113229631 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126539632 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083224683 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094782009 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12939386 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081840309 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095638349 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130644131 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079361285 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107361268 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09779099 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140640864 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082009887 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160355552 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078121332 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093592538 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076544009 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12199351 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097535641 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113159322 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11001763 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097284229 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083260884 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09464393 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075892741 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163540062 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078964489 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096160768 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080368083 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109584547 seconds)
  done (took 22.221748931 seconds)
done (took 38.755200043 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323663185 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099518179 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100489936 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099862239 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098171912 seconds)
  done (took 1.462233033 seconds)
done (took 2.178375008 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295127873 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170219126 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093880045 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165363837 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092731007 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171748545 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157435332 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110063401 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216183958 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07642156 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.15987263 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093115428 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075951277 seconds)
  done (took 2.61860739 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09325861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113242673 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081469252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10967415 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074730125 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10984395 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090652801 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116014952 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107392877 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083287191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091872402 seconds)
  done (took 1.785966984 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092560466 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110783701 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081152459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108254177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075216819 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108663691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09064002 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113271664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107967389 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083618231 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092074739 seconds)
  done (took 1.777076596 seconds)
done (took 6.887153929 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088711708 seconds)
  done (took 0.797907776 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.901575819 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.505608707 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111995121 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.146874338 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.295740391 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.187967779 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.456111366 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.122405632 seconds)
  done (took 10.645992627 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.114151123 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.113377826 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100058243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085653557 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101859862 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081470322 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100311903 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099535191 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080477614 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101150157 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08169118 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097890811 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100451879 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081545304 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098923032 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083658218 seconds)
  done (took 2.299482767 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117834449 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116991134 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105121874 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108062254 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087013526 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103646606 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105565321 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08813481 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100943869 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102981731 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090072158 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102850951 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102483965 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078976275 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103796272 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107162338 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084691938 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104223116 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104902707 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089209912 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104696535 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094511875 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084963158 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104533045 seconds)
  done (took 3.216204898 seconds)
done (took 17.673653332 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158988685 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106698178 seconds)
  done (took 0.986445063 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094478001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111465419 seconds)
  done (took 0.930037592 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095778687 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094748154 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119682645 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109315311 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079267804 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094623926 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118477906 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078863412 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094827735 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078784872 seconds)
  done (took 1.69237983 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081166856 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108256713 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100399972 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093724879 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103657703 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09297227 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085963687 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097484196 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10837016 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07569744 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100804852 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113474776 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083854755 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113908569 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10216403 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08130573 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099720773 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097834505 seconds)
  done (took 2.468424655 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078705442 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095416857 seconds)
  done (took 0.901584282 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079844442 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093120875 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08013932 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095377503 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09242197 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076271184 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092699786 seconds)
  done (took 1.337336241 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.466263875 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.133757325 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25101887 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084283369 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.117929623 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300239015 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096755956 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0835601 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101267581 seconds)
  done (took 2.419053953 seconds)
done (took 11.459696786 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092811042 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116621056 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110403586 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460774618 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105204523 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097101119 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158603737 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247973039 seconds)
done (took 2.118905522 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147622034 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321759662 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112473308 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066468859 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09487116 seconds)
  done (took 1.332640411 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078223756 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098981561 seconds)
  done (took 0.908878197 seconds)
done (took 3.125521125 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079547949 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131009732 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080033598 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095352597 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079521184 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.093889026 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076925167 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096650389 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079176528 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.095398755 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.095451905 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078815754 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093416607 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07668895 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09537482 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076317898 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09330462 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076760427 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095451461 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076763467 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09544221 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076861238 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09397918 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078164388 seconds)
  done (took 2.876709149 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099032214 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098204511 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101636881 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084300522 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100500819 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085199876 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101576856 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096119026 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084732613 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098341938 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098974902 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08329537 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097843086 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083490867 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098106226 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099192766 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084717598 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09657092 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081429161 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098695075 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101993858 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080502705 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099111856 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100650778 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082950071 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100041087 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081545502 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096597601 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101743559 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081843886 seconds)
  done (took 3.535779833 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083804289 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093121952 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077231909 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100446296 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076733661 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096651021 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075917388 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094326437 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078726124 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09402496 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07846113 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094093991 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077025927 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094287346 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078609563 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097328353 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105847822 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076698122 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094227528 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076958277 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096823563 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077020203 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0942872 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077233249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093338963 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076698426 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093995033 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076665177 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094614735 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076755037 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097431412 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080647955 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094195138 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084253516 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097151568 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077913724 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098265425 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093288991 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078503295 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094003584 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076614393 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093485577 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076393484 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100548955 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077663241 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095745929 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076856451 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09599492 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077821451 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096416875 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076376972 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094099666 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078742967 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094377594 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097657517 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077062558 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095027052 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076290512 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09512803 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076188972 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093235858 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076276533 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096480792 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077873647 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10943503 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083950817 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094087391 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078723754 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094577126 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.078927622 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095864174 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107563314 seconds)
  done (took 7.05326382 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08207061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10446199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078842033 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0960895 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07517965 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094990052 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0973995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077646795 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096124788 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083595944 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094466061 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079539725 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096195803 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106587756 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078410762 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096396322 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084411286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092204829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078084946 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098563772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07900724 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098785456 seconds)
  done (took 2.711741495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20874805 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103740563 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141341177 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106597199 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081955796 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10441508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100311947 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086694828 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102464098 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081924198 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099248364 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100850884 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082462083 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099119677 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098794625 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084589386 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100676239 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084058952 seconds)
  done (took 2.615055152 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091689744 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097475189 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100712902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096843363 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097855722 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082719341 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103779742 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107427278 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083002683 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09699007 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089707097 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098577268 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098885996 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080777715 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099873381 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081156296 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099381389 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080757526 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1064246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103023443 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103000267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088513518 seconds)
  done (took 2.837169963 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095370509 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100149511 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115574499 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082867254 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093812026 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078168464 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103815578 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079847128 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105975873 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098481563 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080028518 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09609943 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087225614 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09637347 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102506219 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080663808 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099771493 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0805786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100375301 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077963178 seconds)
  done (took 2.605485697 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102844601 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09931438 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098543133 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090885255 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09879242 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081585176 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107912923 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099088948 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08131175 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123750463 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09888811 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081681691 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10920834 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104691948 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098838162 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090775695 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106966985 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107688709 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082734477 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099136279 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123907984 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081990566 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.217357197 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098680859 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081764091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098472893 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098847427 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087903525 seconds)
  done (took 3.60544487 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080141055 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097808669 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078066708 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095332596 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078243126 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095299306 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078585624 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095004628 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080503141 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09507059 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07945973 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096868882 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080895227 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097696301 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080753888 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097339829 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082606505 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094960203 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077709565 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094906972 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080831647 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097235679 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080608136 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095165741 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07797645 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097490837 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078587383 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094820796 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080195436 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095242019 seconds)
  done (took 3.389403935 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089349702 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105377186 seconds)
  done (took 0.949206632 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077543951 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113137458 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077934649 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101479184 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084984723 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098669899 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106924029 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084326259 seconds)
  done (took 1.498008383 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095384705 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108330446 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082522258 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111235226 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107862649 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094092992 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158681629 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099769681 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08673173 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096292995 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111354417 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080387988 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103902118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080353282 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103759737 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087125064 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095846747 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08759987 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100257756 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097064862 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082140564 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108839196 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083017677 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095387137 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081799258 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109562597 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107863961 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082211123 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101400822 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107293696 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086639099 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093362308 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081076382 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100676665 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078923214 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10796468 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110242478 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085025992 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107607757 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081442196 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109152289 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093431798 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08670818 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105015785 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09248337 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099535075 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082511453 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09332965 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095814502 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082772779 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093572839 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082220768 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092830331 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088013037 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103139504 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111049695 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079384022 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099438885 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084331984 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101422681 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087028811 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101246776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083615998 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09803353 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105429251 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084672405 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10566096 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077096897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092506741 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080011858 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106604988 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121499159 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089756448 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100265177 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082344777 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096078775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102637761 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082233709 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107031406 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089865807 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098937802 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105631791 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089723066 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099031347 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08354225 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106427117 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096434888 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083912496 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096991746 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095997404 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097459241 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079114803 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095834365 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107198287 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08425495 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098572394 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078650803 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106717708 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078431409 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100102957 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081895205 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099367172 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107284302 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087177445 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105105895 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106181754 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089437934 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099470305 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084246661 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095635235 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082448621 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10070751 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104733579 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075525307 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101558517 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083926591 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099803069 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088284023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096827543 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081653588 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10722981 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10549413 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079643285 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096041253 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08391782 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098767386 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084530024 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105819585 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096789249 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077169313 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093568395 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085478534 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098557029 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085820107 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10408937 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101353065 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075461312 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096874075 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085032055 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105683278 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099120004 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082226941 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104204718 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.081916511 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098614868 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086500953 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102176002 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079862055 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103479481 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100274741 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07657758 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103598256 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084881852 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098269862 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085011454 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10331881 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102054799 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082795703 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098362526 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087423232 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100458183 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080326683 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098293771 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080481179 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107957804 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101046558 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076904954 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09596576 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088566208 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0965028 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081232926 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097867525 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101243429 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08294734 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097777255 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081341903 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100674147 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110695089 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085864317 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100777838 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086940387 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109573454 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081488826 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101575927 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098760098 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083122094 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099937509 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088425336 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106384666 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105063354 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084908603 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095465946 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087182925 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106448564 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080772984 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098166997 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080287296 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102789926 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105972222 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085243795 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100023885 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079991333 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100806657 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104105816 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083993111 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098726678 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080152719 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104733886 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081389053 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106263941 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101140321 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090612623 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103450894 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077046771 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103402353 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098382683 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088401301 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094763862 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079608323 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099152709 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082881699 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099626739 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085816944 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094202151 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089092043 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107058582 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100003019 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080680525 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10023222 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089968048 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101969543 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084809846 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102486705 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104331459 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0945912 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099186413 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084693035 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108459924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099833269 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075653356 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105928124 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080511391 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098569806 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080034273 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097566326 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085269244 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108382952 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104210938 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075296855 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102956605 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080341932 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098834979 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077595147 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106959057 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102879049 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083547956 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10838455 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083227378 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100679444 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10396178 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081706686 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101974567 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082630617 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102854087 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082762098 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101874469 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081168534 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102182025 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099182126 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08035178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10083158 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081939593 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100104283 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088199203 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101742001 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081958826 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10253071 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10063523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082345521 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100321348 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08146621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103425645 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08278998 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100130716 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.083902023 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094683052 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106866633 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082264432 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108379288 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082347918 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096994353 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086973572 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103952138 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104774528 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083064861 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101417384 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083320977 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100528244 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084363967 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108763007 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097400363 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091204953 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105841469 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082972624 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103773868 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082735147 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101627703 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098666114 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084145643 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101702281 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082291007 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10025266 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086769872 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103165729 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082125879 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102192202 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101319694 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08205968 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101521238 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077173474 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09915552 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081244873 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10103528 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089823462 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100943367 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103387101 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081281617 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101777059 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08237839 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097432967 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089775572 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110325357 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102096806 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090411775 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100403066 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083207916 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109698348 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09449044 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080809001 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098469316 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080038431 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108384286 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082882804 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108360776 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100660384 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081357853 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097049713 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08358693 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098758363 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076874185 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09885221 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085040267 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102533452 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081075453 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100790944 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084073284 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101736969 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107608707 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081909509 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102415014 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082585996 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097964516 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080596331 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099159428 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103299885 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083265876 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098039703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07943955 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100407413 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084419676 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.1098188 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082754403 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102109068 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089710138 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10061465 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10380694 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086000345 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095704553 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084778268 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100534517 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082961885 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099708879 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105699962 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086486783 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102235663 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089487194 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100866005 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082936165 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101774213 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099196743 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082154823 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101190471 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082225853 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100332927 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083361944 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110137185 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080409349 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102758174 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100243577 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082883245 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105409108 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084300373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103053961 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108301539 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086126978 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101990118 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088377464 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105005838 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085891379 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102261145 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102307719 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087977816 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099892276 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090327394 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100482029 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083139348 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102795849 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079541662 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100567602 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100592809 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081176388 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105342377 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083762402 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100509542 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08142636 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099224718 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084753053 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105605757 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108455075 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084361702 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103712677 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078050918 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098243392 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083108714 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098643137 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083611368 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104922748 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106990178 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084906633 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101512312 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081418981 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109299328 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106164411 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08811088 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098557108 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087741394 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10168427 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084692416 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102401008 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083042063 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102865218 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.105347914 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084556975 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10023603 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090042101 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105126555 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083529404 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102936354 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100900348 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08411631 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09659572 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084187575 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103085458 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08944764 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103800992 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101804361 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091684424 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09989626 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082233692 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105222775 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08232855 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107411982 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096681018 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083143756 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102393013 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083861621 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096884721 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082443938 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099201546 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085211086 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100730071 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077528412 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109943284 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108357321 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084412965 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100318316 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081655716 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097221203 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078075837 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10043789 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08377051 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102944454 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110057151 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0823431 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100303123 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078225791 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102907123 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085039845 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104034244 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078573322 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09706868 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099692981 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085049917 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108135364 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082257972 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101539075 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086173605 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105524298 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080287846 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10527106 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098242785 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087280376 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112432154 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083952504 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102963029 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106640619 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091380449 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102333698 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078319077 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10270783 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.083989052 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102492737 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102006622 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083328309 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115588618 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08671109 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100436232 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081342954 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104554295 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099762286 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089869067 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103289256 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083823415 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10765328 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084060157 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110956527 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103838196 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088471666 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103666765 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085034154 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100508705 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102001823 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081056387 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099739339 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083867686 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102742703 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088427876 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10980644 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100273599 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091750988 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109263936 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087705838 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098869166 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082026306 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100653735 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077606788 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103251525 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100131626 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080904355 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099981204 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081511022 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102282023 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08919681 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103620979 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084368365 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101835603 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095086113 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084487476 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104267496 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085409551 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098586054 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083600372 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103788731 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088267139 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108403581 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101767896 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084654695 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102656121 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08421989 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098285257 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089636251 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101459285 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085129146 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101004604 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082626224 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103241835 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10501935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088438677 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103198402 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085196973 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115681909 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10434593 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080934585 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099200677 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088561597 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09949898 seconds)
  done (took 57.026379864 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144717013 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080557022 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097510517 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078784768 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111597532 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097474748 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078376632 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097768158 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079377857 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100489242 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078349959 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097736338 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107742817 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123487091 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092387587 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10304374 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096357762 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079425209 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096872112 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079755501 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106915441 seconds)
  done (took 2.829852812 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10273794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115246453 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113997838 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1182921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088325907 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113681613 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112697161 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113156317 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097877771 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108874739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117153547 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114286184 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091123718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10849726 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109241988 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091568142 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116446273 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106808901 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114061163 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093405307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112165624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113230953 seconds)
  done (took 3.173527227 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083275259 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101184408 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084524427 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097103609 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082929785 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096825298 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086935908 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099584538 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086964017 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10124545 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081226935 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101078807 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102998713 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078034909 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101269157 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081326158 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149545375 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105845528 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082286857 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103451335 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.096489694 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08453601 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096573603 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078091583 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100682198 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087155938 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102666114 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081160778 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102055983 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081327242 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102816361 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080385421 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103217046 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102751711 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081769717 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10135686 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082809555 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100614308 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078336401 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099251537 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083288844 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098442738 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083069785 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103649879 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08047826 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100554192 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083247368 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102965783 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096317088 seconds)
  done (took 5.387442383 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103175795 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158967 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084781986 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140639337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119932996 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111463697 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086464332 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140734403 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101282007 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081631623 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121173063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118077417 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103154088 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088933297 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106322162 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10208219 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084580614 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10121579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088818025 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101930151 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106335027 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090285341 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116836117 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115990202 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105760086 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083360473 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102739288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106535035 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095916298 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109152169 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108459461 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088679865 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119448635 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107287587 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082787292 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105593649 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119813163 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102811961 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086031544 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100304824 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086006882 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10812997 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108070822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101422992 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103342597 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107825709 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082851969 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099673672 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115429215 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086787514 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111937084 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117985601 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106098299 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083427639 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108476842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118622578 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083874452 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100206788 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086101868 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115317082 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100280005 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087204543 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117178273 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104597812 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110639018 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.096779107 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107074168 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106749169 seconds)
  done (took 8.008155348 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092498189 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109033619 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118906667 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11944215 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089551582 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109353726 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109622824 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09016139 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108509439 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114114137 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108191936 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131734026 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085301923 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113754008 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108771357 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089557944 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109332729 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109568522 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090411148 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111617317 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110072297 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118444731 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090246568 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117633043 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140205727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103889367 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089842321 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110095704 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119360117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109622299 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121358477 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090067121 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10943925 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120484751 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122631966 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089817535 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103041884 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108998691 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089945981 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109683851 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10376909 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117909834 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089675685 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104439518 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108319301 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090488409 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12023562 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12138659 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112479742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095579432 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110377491 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119146116 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108614796 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090440514 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119014115 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145132709 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117787642 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118216356 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108495252 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11862681 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099967439 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127573286 seconds)
  done (took 7.558969847 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106694566 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114110376 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11655093 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098799862 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081426571 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107668692 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082105945 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100867556 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113098928 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092321444 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114776951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10781888 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109708284 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096488186 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107789443 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111063183 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088477032 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108199465 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113457893 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107353564 seconds)
  done (took 2.898117365 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09225487 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122257771 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084588978 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110595548 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106916348 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090904184 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105760789 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10572706 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084903972 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10616628 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094340722 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115345217 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104014025 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090838951 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115609771 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110220276 seconds)
  done (took 2.459177939 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095552242 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115829024 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119650782 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083994322 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103052192 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079565262 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1046309 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099103063 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08027666 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119632123 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083498352 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107595158 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103548245 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082417861 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099880233 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087568762 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100111767 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.080966249 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105115644 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120238 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095310279 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103720349 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104253922 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086176524 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103625426 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088877473 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.1045519 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102490318 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082919306 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104692025 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083798182 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112570011 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100615593 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082954204 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101746488 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08190066 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103548482 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084263697 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107816036 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103711033 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083920548 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103956126 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084846348 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105729398 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079471736 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104262388 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099747387 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090762341 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.100965754 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083845877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10405893 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106397764 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086154544 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114712723 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.086993907 seconds)
  done (took 6.170414546 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097827714 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108234608 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079962782 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102685549 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086967703 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106438877 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108259951 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086817046 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105078611 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082531142 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106252327 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088126686 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106843397 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10780447 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085914809 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107686485 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079409187 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105432792 seconds)
  done (took 2.580312246 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089352308 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103705069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090852586 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104681388 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083438251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107601886 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080738424 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10302299 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102452171 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08553718 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103862216 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087133841 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102378202 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086140786 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104794385 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083678123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107158871 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103084359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085455685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100311348 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086553929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102808972 seconds)
  done (took 2.933195926 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117222139 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123754405 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091020178 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227679931 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102823875 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131436397 seconds)
  done (took 1.623411749 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108959017 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119288512 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10449222 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106218808 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11427517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105127413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087259878 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106028008 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116505886 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100122009 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106699286 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116845226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115994352 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095247625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114278221 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113057537 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106404601 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086893294 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104244086 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127280245 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087498667 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117015911 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107184591 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08532073 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106241883 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114849919 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115573798 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121650198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087366861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11700435 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112107743 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087065849 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117405612 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12013124 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108380313 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096014178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107593286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12765486 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113444117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095966028 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108085028 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113317217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097282354 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112894287 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11766584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105838849 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091349247 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10698109 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106029072 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134785147 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09255934 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116914416 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113343055 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117606463 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116993573 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134201095 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101748939 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115632504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11442756 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120945057 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116574561 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092976395 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115689855 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121497014 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114668491 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115590988 seconds)
  done (took 8.047897386 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102189115 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124551863 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107423248 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121670573 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096108616 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106932692 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106714888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086362127 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107286609 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105308297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151323457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087844297 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11632134 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117132216 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106710339 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086415782 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10690983 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116891742 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085984953 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133378881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107398201 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115190812 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116326602 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095371817 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120597808 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113395788 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106275946 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08674784 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106996312 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106233124 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092867711 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108144904 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116995439 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085628756 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11713387 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108244776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086003942 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112884666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107882872 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11346073 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0960659 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127447176 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107292124 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106020742 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120832185 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087516163 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107537946 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08572063 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10758345 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10534953 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12194391 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101404477 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121655183 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117106589 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107747894 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086133841 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108190147 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107230241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087135713 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114440355 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116205487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108026834 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134763361 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087857428 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106718205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117578929 seconds)
  done (took 7.927253374 seconds)
done (took 153.032716878 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097408506 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135203183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094555006 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167750128 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105349023 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118639947 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137466812 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096871888 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105682301 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084778292 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106093529 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086704096 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170726233 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084372331 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106462071 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106813528 seconds)
  done (took 2.637952036 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198563906 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2527555 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100806048 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104388162 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10899082 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087985431 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104387064 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090464515 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108948228 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085105099 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107930756 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08518989 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105460909 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0843655 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109850781 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086572477 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106254062 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107174776 seconds)
  done (took 2.873787949 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111798556 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144432862 seconds)
  done (took 1.09896071 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117808855 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179075127 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29438626 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15426486 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117048055 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125998357 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155246687 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129836485 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195111942 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121979032 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122033661 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095955545 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138710809 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115365341 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093512601 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117531796 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139534229 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091724666 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114396462 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114990827 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115204117 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10575865 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114151968 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091910239 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179217134 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119075202 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083954556 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106430629 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113787941 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093995335 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113136533 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123458179 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097173785 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173694971 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101297396 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176105027 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096693035 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111556354 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114022063 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090349969 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117861156 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117520974 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104015523 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117828924 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087281698 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117474663 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104557188 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085529867 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113874262 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117251971 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094053615 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112391408 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154216048 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117283566 seconds)
  done (took 7.458829341 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791102325 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162091043 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089563326 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.876233764 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137238513 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103796226 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.774606364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132117863 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231498914 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75642216 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132261962 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121703063 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222261739 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23487373 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.92612711 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303914159 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.665732436 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101749032 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147990854 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152088165 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119115785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136650602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129584276 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449368765 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094992862 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111704783 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116420344 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099717549 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15705342 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124523354 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113920864 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176317655 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.264414913 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182382412 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11395965 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089106579 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11161533 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166994711 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264014124 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211769242 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179272035 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086769908 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11063109 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120640541 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108633246 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108426874 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16186993 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191800184 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170542099 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091655717 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120385203 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118530996 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119097496 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163180276 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119821015 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283474008 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31796597 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11109033 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118806104 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104944007 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261347944 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121476419 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220752669 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115062816 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208919298 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111149928 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775428515 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188856959 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089045977 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117118491 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11763523 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093503322 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120846978 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169739725 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391303348 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123175178 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092625501 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110740011 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.201895308 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124599068 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109487162 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160813654 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113531817 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097738076 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124235006 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121794525 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169934507 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.224265807 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123764128 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118966508 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09385747 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123930808 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113910006 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212723038 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216095693 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160723442 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207322739 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121776196 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160414426 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187755923 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09787437 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191785649 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096085017 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12649282 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121432477 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212624576 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144162701 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100631208 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115862891 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116848166 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146546234 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124819033 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096624461 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165945326 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.501515282 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165693739 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10861915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12631618 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098327018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158665904 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118072519 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256718382 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119619511 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167666617 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117520919 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087245713 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118292877 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164163398 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121888596 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097191826 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122473747 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11878082 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.228129528 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214999668 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121505671 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218707797 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183213098 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117870909 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170765438 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120321074 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164800077 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119482298 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119675829 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093946114 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7837394 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122105696 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097084581 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115739587 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195291219 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10996697 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102214127 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124348861 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107118127 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750036673 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126114742 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119615582 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101469446 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118052338 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11830624 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094730775 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115562326 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159933602 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228842317 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120644785 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117611665 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101884918 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179788753 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094003917 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124440597 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123381097 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101903524 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120471093 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114469165 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100326135 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190454586 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160134312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217831959 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.593781167 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09026543 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123844239 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225431638 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090335946 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284088296 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119261931 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22022696 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161840555 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119282199 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313131545 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166166107 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195548446 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.124953373 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172162773 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086494165 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118576271 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161517904 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1128604 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116734544 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160742646 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124792149 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100859263 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.951727672 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111006343 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224313876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085563153 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191453706 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092568102 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121472283 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285226736 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110194644 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107150744 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182182679 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092988523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124545182 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.726628311 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124989861 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121588747 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117029306 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.197130573 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183569352 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097535498 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119948098 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120091556 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162688394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206281652 seconds)
  done (took 43.677144392 seconds)
done (took 58.584212955 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272356049 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211470939 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256298471 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167340236 seconds)
  done (took 1.849111962 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.168419095 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146724858 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119427281 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106602716 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.147543216 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084535003 seconds)
  done (took 1.641114058 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.349719736 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267481034 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235854684 seconds)
  done (took 1.724438177 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28483767 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250099071 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352706475 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41269555 seconds)
  done (took 2.288259539 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20704423 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.1299108 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110419499 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103811284 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19465509 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246864843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13910571 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198873454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121091923 seconds)
  done (took 2.367983158 seconds)
done (took 10.74311461 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.129542512 seconds)
    (2/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.269054252 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.126474735 seconds)
    (4/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116720963 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.181802929 seconds)
    (6/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116761728 seconds)
    (7/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115567135 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.194126969 seconds)
    (9/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.20945856 seconds)
    (10/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.248964899 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125055702 seconds)
    (12/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.243914012 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098988367 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116291814 seconds)
    (15/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.166695484 seconds)
    (16/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.204785592 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069201395 seconds)
    (18/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.154796781 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.167571351 seconds)
    (20/286) benchmarking ("sort", Float32, false)...
    done (took 0.171460643 seconds)
    (21/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.229932221 seconds)
    (22/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.161889299 seconds)
    (23/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.211729022 seconds)
    (24/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.179516841 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.145402948 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.223514002 seconds)
    (27/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.2246032 seconds)
    (28/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101371776 seconds)
    (29/286) benchmarking ("sort", Float64, true)...
    done (took 0.233985847 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117035726 seconds)
    (31/286) benchmarking ("sort", Float64, false)...
    done (took 0.169636606 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115082114 seconds)
    (33/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116279722 seconds)
    (34/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.231222827 seconds)
    (35/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088861779 seconds)
    (36/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.205845065 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164344432 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118528385 seconds)
    (39/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088411054 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108631773 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.113249011 seconds)
    (42/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089657598 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.114332646 seconds)
    (44/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113846492 seconds)
    (45/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170571771 seconds)
    (46/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099995721 seconds)
    (47/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.213279149 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114526903 seconds)
    (49/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128042317 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093340578 seconds)
    (51/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.065891114 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131201755 seconds)
    (53/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.150592325 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092481565 seconds)
    (55/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.12101249 seconds)
    (56/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088711982 seconds)
    (57/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.162573396 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112163407 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088580775 seconds)
    (60/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139176455 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06726155 seconds)
    (62/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.179448018 seconds)
    (63/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.122986871 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111433386 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125236651 seconds)
    (66/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116435313 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.201687573 seconds)
    (68/286) benchmarking ("sort", Int8, true)...
    done (took 0.219855329 seconds)
    (69/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.130996993 seconds)
    (70/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169998921 seconds)
    (71/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195017844 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12505036 seconds)
    (73/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.18037111 seconds)
    (74/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.187627502 seconds)
    (75/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092101269 seconds)
    (76/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.172235154 seconds)
    (77/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.173427966 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083710478 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108531447 seconds)
    (80/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097207735 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090165052 seconds)
    (82/286) benchmarking ("sort", BigInt, false)...
    done (took 0.217469659 seconds)
    (83/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069646651 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.108841124 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.176395455 seconds)
    (86/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125595275 seconds)
    (87/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.172263299 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085478328 seconds)
    (89/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12232898 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125009376 seconds)
    (91/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150686605 seconds)
    (92/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107122562 seconds)
    (93/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110373587 seconds)
    (94/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116298105 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169119177 seconds)
    (96/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093186623 seconds)
    (97/286) benchmarking ("sort", Int8, false)...
    done (took 0.18645068 seconds)
    (98/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090010111 seconds)
    (99/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06669149 seconds)
    (100/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152815489 seconds)
    (101/286) benchmarking ("sort", BigInt, true)...
    done (took 0.231598036 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.109264423 seconds)
    (103/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173508145 seconds)
    (104/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.153111451 seconds)
    (105/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117473958 seconds)
    (106/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109985352 seconds)
    (107/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123542964 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096775259 seconds)
    (109/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.171749361 seconds)
    (110/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099335198 seconds)
    (111/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116642275 seconds)
    (112/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.152210673 seconds)
    (113/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.129498914 seconds)
    (114/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.181999452 seconds)
    (115/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088393754 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.173840623 seconds)
    (117/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089117525 seconds)
    (118/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082783735 seconds)
    (119/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090516927 seconds)
    (120/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119010605 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119268633 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085430672 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.180246419 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118491791 seconds)
    (125/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091096934 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116258869 seconds)
    (127/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.130628364 seconds)
    (128/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.189293262 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108223978 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092114898 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.131524886 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11737851 seconds)
    (133/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164109335 seconds)
    (134/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111088847 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084843288 seconds)
    (136/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.172191779 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116648343 seconds)
    (138/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094284537 seconds)
    (139/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.14942472 seconds)
    (140/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085519089 seconds)
    (141/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119898482 seconds)
    (142/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082299168 seconds)
    (143/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119988106 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.0859191 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118000369 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085294813 seconds)
    (147/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.1104316 seconds)
    (148/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067273543 seconds)
    (149/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.088998355 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087389385 seconds)
    (151/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.155670928 seconds)
    (152/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066941555 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182562646 seconds)
    (154/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.0815741 seconds)
    (155/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230809876 seconds)
    (156/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110451684 seconds)
    (157/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094598756 seconds)
    (158/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111042363 seconds)
    (159/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067718669 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09171046 seconds)
    (161/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091482096 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11606603 seconds)
    (163/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.129546803 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108983186 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132254064 seconds)
    (166/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085724024 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118851975 seconds)
    (168/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.066433047 seconds)
    (169/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088609158 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110192077 seconds)
    (171/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182970344 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09705182 seconds)
    (173/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110267017 seconds)
    (174/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095102448 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109391196 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134915849 seconds)
    (177/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087543076 seconds)
    (178/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137460921 seconds)
    (179/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066537095 seconds)
    (180/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114690823 seconds)
    (181/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089327954 seconds)
    (182/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120460576 seconds)
    (183/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067019862 seconds)
    (184/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169713133 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066353708 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.222657808 seconds)
    (187/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135220763 seconds)
    (188/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066938341 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108328015 seconds)
    (190/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087396459 seconds)
    (191/286) benchmarking ("sort", Float32, true)...
    done (took 0.233178102 seconds)
    (192/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.090085194 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148217197 seconds)
    (194/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124035486 seconds)
    (195/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083739578 seconds)
    (196/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123539196 seconds)
    (197/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066782008 seconds)
    (198/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136626338 seconds)
    (199/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06650672 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109404357 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095474826 seconds)
    (202/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.197696373 seconds)
    (203/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.12110575 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094372453 seconds)
    (205/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099087117 seconds)
    (206/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066728998 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.0856372 seconds)
    (208/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090049478 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067574894 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11551465 seconds)
    (211/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139068897 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.330294234 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098318779 seconds)
    (214/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090260591 seconds)
    (215/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103682273 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107601252 seconds)
    (217/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145529499 seconds)
    (218/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067260523 seconds)
    (219/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067439854 seconds)
    (220/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117178639 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098316767 seconds)
    (222/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091735632 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066554972 seconds)
    (224/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075116984 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101751191 seconds)
    (226/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092117692 seconds)
    (227/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.08939608 seconds)
    (228/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086568841 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107835556 seconds)
    (230/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06793127 seconds)
    (231/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.089395414 seconds)
    (232/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.147315719 seconds)
    (233/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.089160072 seconds)
    (234/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065514592 seconds)
    (235/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094721468 seconds)
    (236/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09031224 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086935177 seconds)
    (238/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.099875239 seconds)
    (239/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066007513 seconds)
    (240/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06686586 seconds)
    (241/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109593143 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09294673 seconds)
    (243/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104815473 seconds)
    (244/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085785693 seconds)
    (245/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.15407106 seconds)
    (246/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085579036 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118403543 seconds)
    (248/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068027932 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.12073846 seconds)
    (250/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067604942 seconds)
    (251/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.089435708 seconds)
    (252/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067019429 seconds)
    (253/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.139919255 seconds)
    (254/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092705789 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.17928549 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066869408 seconds)
    (257/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108255877 seconds)
    (258/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066727327 seconds)
    (259/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110573816 seconds)
    (260/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067143476 seconds)
    (261/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075501584 seconds)
    (262/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.114933603 seconds)
    (263/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091773808 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.115964807 seconds)
    (265/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065815185 seconds)
    (266/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067492227 seconds)
    (267/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118617924 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084759184 seconds)
    (269/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090668064 seconds)
    (270/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087047675 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108739399 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085451451 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117757708 seconds)
    (274/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067670747 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116080894 seconds)
    (276/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111916766 seconds)
    (277/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090426562 seconds)
    (278/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092884528 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08970023 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092388193 seconds)
    (281/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134735262 seconds)
    (282/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085901575 seconds)
    (283/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110192576 seconds)
    (284/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067120316 seconds)
    (285/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116579951 seconds)
    (286/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066853484 seconds)
  done (took 35.762577948 seconds)
done (took 36.636444059 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099577526 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146487413 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094433217 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134455827 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121625812 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09016759 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117518141 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096034594 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122487764 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12352411 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097360127 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09298332 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095580204 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119624712 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095580439 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13727941 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122286854 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093026971 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118161296 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084767903 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117648086 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084758958 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110718685 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069010371 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120243774 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092247619 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11453674 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118675588 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085509366 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108956429 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092125795 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115791593 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085566613 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12235861 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092855812 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118211681 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095271583 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119301788 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111192894 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085761458 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117282461 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08549522 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115807366 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093222396 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114695038 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091628656 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117755071 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098469807 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138046177 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11438642 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09421254 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121641895 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095544107 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115997424 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090027268 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117668556 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090677509 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137709547 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118364158 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090565361 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116746452 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093305919 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115887942 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093995795 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117819144 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120132845 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096994175 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115246874 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095465757 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11549158 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086114584 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117243675 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.088884433 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108705278 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094691169 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120131197 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108210768 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092004249 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116008556 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090678648 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108583428 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088936496 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111357362 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092650838 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11170832 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069358127 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113477955 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092979454 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108188721 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094729557 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115405703 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093130226 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111099182 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097563612 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109370121 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091532143 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109969133 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.085666772 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112013037 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090455991 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109485202 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089313346 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119201589 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.110829083 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092484466 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121772232 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086185521 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116154619 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086315219 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109138791 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100698336 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120235814 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086371398 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115556256 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085821507 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117826402 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085890365 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109592936 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110055551 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086406946 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11548448 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08592698 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112558385 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093112537 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124187016 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08667457 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112967032 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089036404 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110048171 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091914891 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11028965 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086302015 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112941039 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076794763 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113280192 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086051375 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11753982 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089315424 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118668714 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088241271 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120086181 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090339424 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115935944 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115201459 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086377528 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073824357 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116159517 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088244755 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11262552 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086022008 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111695966 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085597366 seconds)
done (took 16.74736312 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087831382 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181675469 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150142751 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140939242 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105401308 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110510476 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121415346 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117667915 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11209918 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141914126 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109089552 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130139649 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146202795 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086209694 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111346784 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090199302 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112544692 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10117009 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144429047 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131118722 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161467773 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085886206 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145283137 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133983798 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120565329 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103919836 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111024152 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.089992566 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114195007 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110897679 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131284553 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114065547 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.086899572 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133058759 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1025511 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118745838 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086346402 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117214551 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086602067 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111964483 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140095664 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131945494 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091742956 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11673034 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090769245 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113528418 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088128961 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12036148 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097198539 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115570301 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125934061 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155295081 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089952611 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121054122 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085339827 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122803834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120015156 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089433068 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111168018 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089489928 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111136869 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090883269 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125782074 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140601189 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090396669 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.11999851 seconds)
  done (took 8.518141793 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10349599 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138417886 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104436739 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129704287 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111396871 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087554787 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112036297 seconds)
  done (took 1.72208033 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088618119 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133155559 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110581451 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134675753 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131374092 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111037893 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123153457 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087459409 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130984602 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089320379 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133138415 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148556002 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08912874 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120430587 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137031767 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088224913 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136550942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087751095 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115785629 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110933986 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114896891 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134533645 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090411315 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11243376 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102267931 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112256466 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160178659 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093200501 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114012999 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091246526 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111595359 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149627818 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101964078 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123603649 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088047197 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129438562 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12721764 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086406898 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.124609905 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093297656 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126648708 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089058624 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114242865 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086689781 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11742866 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097758681 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116451978 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.130531619 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091338982 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133077432 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089453642 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126219179 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088009767 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117375067 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089004887 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118428667 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097708925 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114507595 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133367371 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090352249 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129776803 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104105671 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126530494 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12952017 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090680728 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126683654 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101746269 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115973732 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0900301 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117038103 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104785211 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.110780202 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114878175 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099490341 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11492376 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11238639 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136693204 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089935478 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123499705 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113001679 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089070381 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113991413 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111130918 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116890292 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08853341 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116785674 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091180725 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111824345 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087355201 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116646294 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.085916126 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114072786 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090895671 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113365649 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115620419 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104467874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113799044 seconds)
  done (took 11.710822944 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089013528 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113495764 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092045992 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113861672 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089052555 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114077407 seconds)
  done (took 1.561880164 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115612539 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116187502 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102840297 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119968871 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.153848314 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102952797 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128276255 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122445329 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107951089 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126275709 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127909602 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105422256 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134883745 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120110716 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103182267 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119810169 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.127203237 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098750464 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12686667 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095873182 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135599535 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120011982 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095401334 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130703221 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117817116 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095419716 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124926741 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103726456 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125991549 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122168074 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095132764 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117050579 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094350355 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121468227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128671268 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094878985 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119420175 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118501944 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099425352 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116872664 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103313269 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1205786 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125903389 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094030553 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122663967 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119562761 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093563518 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123620847 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103304849 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117915634 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11827544 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094308941 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119668902 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092863597 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122290098 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125837165 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09290013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128394777 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120518924 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09566424 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116590418 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092249825 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123674629 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11629446 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103007299 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11803792 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120190273 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095513318 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121493709 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095453056 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118195895 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091419326 seconds)
  done (took 9.134482919 seconds)
done (took 33.581621354 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686023515 seconds)
  done (took 1.635381746 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.806085559 seconds)
  done (took 1.7573282 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.011073013 seconds)
  done (took 17.988853748 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486257963 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.571399259 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.969900535 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175726369 seconds)
  done (took 3.151770621 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941602339 seconds)
  done (took 1.910967044 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279810872 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23308951 seconds)
  done (took 1.468039335 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763633261 seconds)
  done (took 1.730431187 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.387769292 seconds)
  done (took 2.341379121 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320162609 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181362602 seconds)
  done (took 1.467017901 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545786704 seconds)
  done (took 1.5077689 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.96078904 seconds)
  done (took 10.928563356 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264550408 seconds)
  done (took 1.24186144 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298620258 seconds)
  done (took 1.267505474 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.459159463 seconds)
  done (took 4.430845328 seconds)
done (took 53.78992702 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09796266 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125861733 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101208811 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123604146 seconds)
  done (took 1.414569945 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099461193 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119717069 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100098666 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12000394 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125346431 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.094458145 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123612726 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100593211 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119726715 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096009045 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120439937 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118741207 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097943052 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121915073 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092258644 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12330601 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122568646 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095678595 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123002965 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095253101 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117080155 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096662075 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12367157 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092640912 seconds)
  done (took 3.612011558 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098982978 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118170569 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096161233 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117213584 seconds)
  done (took 1.406163681 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099910744 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129565791 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104778779 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124195489 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131287338 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104025167 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116311927 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09128143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119117508 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.09859061 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11475339 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138264348 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106022665 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123273437 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101409424 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112894362 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.089736809 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129754415 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123721756 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100290622 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117064515 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097981723 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114812779 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10834034 seconds)
  done (took 3.668919681 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168381857 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126738971 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137494324 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094358525 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158612076 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139533048 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087862135 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139195017 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086683309 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129635707 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117597116 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.131390776 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127987915 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087047027 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112465606 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087424375 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126786328 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127344468 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091240166 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126096715 seconds)
  done (took 3.383544167 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097140559 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116053592 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088082085 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115324565 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098705689 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120172163 seconds)
  done (took 1.613942077 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090844301 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113099461 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089234641 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112754777 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09352082 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114447032 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087760639 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113739023 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089406941 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113632068 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088546391 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112292432 seconds)
  done (took 2.198135116 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499517966 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118930545 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119550811 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088269241 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121328748 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089100973 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128154029 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090916021 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139709128 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08826452 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114469454 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092721641 seconds)
  done (took 2.66895331 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235473127 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125444333 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281614442 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361088469 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154440979 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162560131 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276716033 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159953639 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196933728 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148229166 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228302417 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196319955 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150836792 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190116206 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136522396 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143739387 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187994689 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245790151 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150203108 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210884196 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20490858 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164710982 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179428075 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150329048 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111818711 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190777369 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093708795 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129434607 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231004267 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177818563 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187371225 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16041201 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145901042 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234585169 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245341853 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193051483 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276451636 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133355112 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.165730296 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142303403 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261708216 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138104337 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232327204 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153995449 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104743648 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219027815 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164709442 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174819061 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144096983 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137043976 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19611055 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240089626 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190954812 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13844371 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297326931 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146304022 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157055907 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187346419 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248735088 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225797881 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187280209 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119588109 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187165507 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190074232 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20934428 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150520451 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180838667 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146008918 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181911554 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187386603 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164478479 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202320679 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178710275 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137613471 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168902171 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172093315 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171799747 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256171442 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184222489 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121620339 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168041797 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147364226 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129669587 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166923016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124275033 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21262241 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141884234 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162956832 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205877405 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15725584 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160012985 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218423978 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182041738 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147554282 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083158557 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153150581 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153969537 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175383249 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139101893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158327844 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15552228 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129170113 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16810061 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096123837 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208344304 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090874536 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171458467 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20929392 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100145485 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16107975 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152334637 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148714736 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17557762 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196674502 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14018238 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132937699 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208311352 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177642446 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139988687 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176089012 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228174236 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116772029 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146816542 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223602009 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240788845 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112826275 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22603176 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153029101 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107375659 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132559287 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179102536 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154244213 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160659606 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131337384 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180899686 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229501699 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098023956 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138016581 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192484476 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133144003 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131069121 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153024437 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145911136 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109348215 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14213818 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144415205 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174880227 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176330608 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153679614 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164506699 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14822381 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246686945 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138192018 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149239127 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120541124 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120102422 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189891306 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223261175 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102244738 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231018863 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169179037 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222556506 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16899082 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106585533 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174695491 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128799438 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119628715 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190537623 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166205083 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160409461 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193128139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219278528 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176894252 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.207818492 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165420809 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17426218 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163780276 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155116361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.109421806 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159282842 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156795395 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123360574 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138107202 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105795643 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148897003 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141019729 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132325356 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194798404 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168342047 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213429591 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158880321 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146926487 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178731127 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101575849 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201160057 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177304421 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144264131 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19584647 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190530284 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210715817 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116596057 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224134481 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118883588 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098174711 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140617117 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168574599 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131808662 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107306175 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160214513 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205609788 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180028175 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171543083 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22881991 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174536192 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190098434 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093890475 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167558942 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182705416 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201772201 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153134102 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136341536 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15008817 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175952817 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153412227 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252503027 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166683545 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173391906 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23313102 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.121188888 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130970786 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14820353 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175986341 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151222533 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174453437 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146466196 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138101796 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160047807 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.101251786 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184927807 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183169655 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16280402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186125243 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148369265 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209678636 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099945018 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159516835 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159561994 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163667066 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108158963 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173578353 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199138637 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145256277 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164988066 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21391084 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102440746 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309323483 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233196146 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192429831 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136646264 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15327384 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159722037 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161007273 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168950197 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177817507 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15655856 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186698374 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157869906 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135488025 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137086235 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120912902 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150752868 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131451397 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147025045 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175520933 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137267107 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186050037 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153603337 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158469678 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170376157 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150188816 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142718071 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119588244 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242862892 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18091568 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237446308 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149283076 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176949221 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203084425 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12560188 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13024324 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105041573 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174605139 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135455965 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187997356 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212257139 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196598856 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205629484 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176504678 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137695254 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093026762 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156709325 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1681776 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225185934 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147663954 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120298325 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228486406 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107736426 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131419746 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164935257 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284787599 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143112294 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219460262 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080260769 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277187238 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123751106 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104176095 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162340495 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231599932 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134720725 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.14997434 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166108121 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159600372 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161283837 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148785531 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213607127 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209812383 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223929493 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18247863 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.103362389 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154896373 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199462327 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190424719 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154106122 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.136910282 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203739158 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192870666 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2205731 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113978613 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194375513 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166273659 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15699894 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184627006 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133630529 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204992553 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133973397 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18978342 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151137994 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136250491 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17583294 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.211493956 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111512011 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211455783 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181844574 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133357487 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104250868 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190395429 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176418078 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15207594 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099588334 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207345904 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097333434 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188340633 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258989019 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13303055 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154561938 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145012047 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106790921 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152773912 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155578297 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13718223 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161875267 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200320366 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13407337 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188761196 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226849297 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170115044 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170722243 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144458602 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691348556 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128609853 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191992063 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146704673 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204275396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150446239 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171669189 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157558135 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167800749 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221491934 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160722919 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230007719 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191104496 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175597043 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131551335 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156644207 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154184422 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142762484 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151978744 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167720176 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159881622 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144532051 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17887262 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163141517 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132691507 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112560988 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22386425 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119245664 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211815709 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178749256 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109781528 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198555487 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185880303 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132893154 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178788322 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233273193 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11261238 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147697336 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133284308 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149596388 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257467807 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096007736 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215543083 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183438808 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158698892 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166643439 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145956923 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191199971 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156683373 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209991296 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11519783 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157764807 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156383787 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137411971 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128477476 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154497523 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167576286 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120432921 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185460312 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137502248 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193225915 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124316871 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144267179 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279385134 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176421573 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240937578 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106417541 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135629743 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162450088 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148706051 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175172917 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176340487 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134480122 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133708719 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.106984044 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154755327 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111301114 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154613863 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18882008 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189662593 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20641033 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135117766 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27697629 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11113664 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154120127 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113652766 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103349121 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148564161 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144013572 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154337069 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189871888 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259129481 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146168113 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13176299 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120220587 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125757585 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134637073 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161307086 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163005128 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177931307 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142497595 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080787792 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153641546 seconds)
  done (took 81.567867895 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161031179 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131642636 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145708364 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199426883 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174707387 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268627578 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208487423 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251910548 seconds)
  done (took 2.607255726 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092944819 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144392574 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155356035 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132033169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09147602 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119072459 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.3382229 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132017487 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115051791 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120192822 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171353811 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093592611 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.540825535 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089974897 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118881403 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106166127 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090828954 seconds)
  done (took 3.711327422 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.129056113 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.49488371 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.967556565 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19221967 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158584585 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.116908895 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.701809845 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094075349 seconds)
  done (took 11.923558584 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114178731 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135107023 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122220287 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151094544 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139181992 seconds)
  done (took 1.744973666 seconds)
done (took 122.488356525 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097001944 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126324048 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096786299 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12935738 seconds)
  done (took 1.513081699 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093559219 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069510514 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099611732 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073899029 seconds)
  done (took 1.409622639 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.18918904 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166615259 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.378669053 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071209004 seconds)
  done (took 1.554717666 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113926016 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130840295 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102920372 seconds)
  done (took 1.429405536 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105253666 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128314248 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102236167 seconds)
  done (took 1.415764853 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104429857 seconds)
  done (took 1.183088367 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107336374 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135260877 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107285961 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134690036 seconds)
  done (took 1.563337934 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097309478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12584205 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108238068 seconds)
  done (took 1.408925681 seconds)
done (took 12.90758359 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102540737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422573391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411958907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108929432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721329127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379506059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032452592 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144327348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164108623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093126388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137289112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67281644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.062384318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377561885 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021014693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375404303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.689846534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120401465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089581422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121235964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016352165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091861328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119800976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091260605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715118066 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396191025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121152163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374090292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091145346 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12487541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382894265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121403546 seconds)
  done (took 16.963087466 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094199339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172020423 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097313601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121916559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121718184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093610518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122885726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092616087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178149064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121500276 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109413961 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120873964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123784924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094016128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141581375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091816429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124754009 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091721519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119743598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092925753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13862918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119191925 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09455686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119860702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093951894 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134379732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093409333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121268063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119101779 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097676561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126391673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094769756 seconds)
  done (took 4.76058677 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140268946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182115597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126856164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125650936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166478512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122869826 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198539334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14449137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153693692 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122119735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138389437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091711653 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15468269 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120863884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113392366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119667403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095341638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120785792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091300066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121740909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13811357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09214182 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120482864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092123225 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121408394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107412875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12303162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119058603 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091959815 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124660513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099122083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123102179 seconds)
  done (took 5.093199486 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096205123 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124507302 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109602502 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137595889 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094562698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124755284 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097119681 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123522831 seconds)
  done (took 1.994640242 seconds)
done (took 29.892985462 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110006295 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125858978 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105569963 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13472364 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102524136 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130139603 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09051099 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132310995 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132131517 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101719225 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135669455 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091579946 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120931458 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09039059 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133088745 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096424973 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131460573 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101096161 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132284922 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130215699 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093710712 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131302314 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101651717 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131545907 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102629174 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131595692 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134908948 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098776397 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120390626 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093838402 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122333576 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102142713 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122741352 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103978993 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12585688 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096127924 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121930535 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09300382 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131620428 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131608875 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098438317 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.1317752 seconds)
  done (took 5.929628486 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106739945 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138062261 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104048319 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080698861 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115980253 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079430335 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136742748 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0782643 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108847127 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107080396 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073617293 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105266177 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078292963 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100522219 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076450222 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074694486 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106980368 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075130896 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075048758 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105394567 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078950603 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072618707 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107035912 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077878561 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075088405 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109011649 seconds)
  done (took 3.53818978 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099793666 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132869114 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112711088 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182078943 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159615379 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099581637 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130578363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138159214 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107246318 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118185653 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095800543 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148843739 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108879703 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128292063 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091180734 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135243932 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133827462 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093784611 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12581322 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11108698 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137455174 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101389583 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140206416 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131117136 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091225296 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121775925 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09616031 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133815923 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096867966 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130030897 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096424951 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123511911 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122008125 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104398589 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124857689 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093539217 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140768617 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102713121 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130216736 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120640641 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100740893 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120749723 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113671291 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159509553 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090584711 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127636496 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12190301 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102542277 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119838172 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110412433 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129305625 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091179055 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124108096 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09158652 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120330806 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105461466 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122819786 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094008977 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130083657 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125579808 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105389427 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123526833 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107473011 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120613534 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099588951 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120045132 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091196606 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118919953 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141490626 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094193419 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15988987 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092333594 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122294184 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101546523 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128563712 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126674321 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092685497 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135945805 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101752482 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124489787 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101719435 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125102582 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094508843 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139187696 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122573285 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094330654 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12060935 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099359137 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122849565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093465025 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135327171 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091421429 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123865833 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109456515 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121016136 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120982534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099157963 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124981797 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091707891 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134312967 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097072239 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122759362 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129691889 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09303855 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122531948 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102454303 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125604707 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091172285 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12636027 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098316978 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122914098 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092894992 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12475996 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093393516 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131417578 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127891499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097141146 seconds)
  done (took 14.668323103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226833997 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213128245 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203813331 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.289231852 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134786188 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113034462 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208938756 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15461996 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123028116 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157775008 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168968945 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.17858021 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137848879 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.209562347 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168208856 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092260564 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142300285 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133312358 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.24376191 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257843555 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143321665 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103217916 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159757809 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158758537 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135511767 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101361558 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139126291 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133002113 seconds)
  done (took 5.741116078 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107369843 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154336511 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096987135 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14430259 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146360694 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091223841 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127157385 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093349705 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134495627 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134858527 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092201964 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127681519 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098824824 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131600709 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121785611 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10241699 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131296368 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093555167 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125596619 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095666139 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133078763 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100633984 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126463882 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120458512 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102288406 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121328011 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085940208 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141301961 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120898647 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115068172 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12002879 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10147626 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135647806 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093292618 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122247249 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094024377 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124611943 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094095882 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124828909 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091032865 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121737116 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076610594 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122228252 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135499314 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099498888 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079502058 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128782755 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126478343 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094802199 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119401714 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095823112 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123568023 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096873049 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129785314 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.094779981 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122603824 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095459386 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114787137 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099074247 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123902744 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084471003 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12068072 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097415835 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116468749 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099634739 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127288562 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091082901 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.1239399 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096325906 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128976597 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093711843 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128632942 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090022204 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124666109 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094388287 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12764124 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124011226 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091729115 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121638041 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093262307 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074541958 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122287469 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073566351 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125957882 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091144158 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120993308 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094623365 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128557977 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136010047 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095399912 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131225916 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093773302 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122131509 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095552615 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112604235 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095119845 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139334126 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139900233 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093367168 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121131369 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107046141 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125983269 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092441668 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105519354 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101488107 seconds)
  done (took 12.848761701 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129251543 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153451397 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123688317 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111530491 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156073609 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157023725 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100764913 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129925098 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09422334 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141646088 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093176722 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131152915 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093066036 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137166995 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155701999 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102752064 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12444116 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106662651 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126720511 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168129089 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111319831 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141237568 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108665596 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12385631 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128176142 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110058388 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.15972727 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106201908 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135535574 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141553216 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107292045 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159927933 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141391042 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097935007 seconds)
  done (took 5.434224809 seconds)
done (took 49.247326039 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.192008554 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.403211886 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.179704471 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.06892039 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220014485 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.201537191 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191550596 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.182400325 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.68414743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.182028114 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.408104552 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.708011177 seconds)
done (took 59.731475846 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.195054945 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340287596 seconds)
    (2/2) benchmarking "String"...
    done (took 1.473497236 seconds)
  done (took 3.921525718 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.754116519 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.129785633 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.444278821 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.183676523 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184394452 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.471525602 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.87407954 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.535127616 seconds)
  done (took 27.930193198 seconds)
done (took 41.909968458 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.19495788 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.210229344 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.216621346 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.162026134 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.292431214 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228444395 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.482379475 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.209065436 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.19900664 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179763974 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.203847607 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194148232 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.195013526 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.522081947 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195000345 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.185019449 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.193432502 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.705348813 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.585347921 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.195851575 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.204118334 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.226406718 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.204332729 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.213563187 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.218288025 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.182837954 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199316379 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209707499 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.745379366 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.186264428 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.20872431 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.703296103 seconds)
  done (took 190.161647293 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.183575822 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.300628026 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.390725262 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23952391 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.86730627 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382302374 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.320137854 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.924711074 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.202169954 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.19797496 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.528605447 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.186033836 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.588972548 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.172409711 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218665102 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.247334608 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.525240032 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.56752017 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225494787 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.315075604 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207377326 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.560735439 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.506918567 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.447244922 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.199778014 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.224478857 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.212464884 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.195628725 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377882217 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.467783949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.231954525 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.20071026 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.801878851 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041286624 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.213035345 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.212513834 seconds)
  done (took 150.795838811 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.185361361 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184628925 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184763015 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217483793 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.185507397 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.76004194 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767945292 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.695767946 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.797586231 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.5740964 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.496743339 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.18917612 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281223416 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199627316 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.190241332 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.202865716 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.230057572 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190040118 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186655021 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.764076635 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203317153 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.371744988 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378487618 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204317786 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21966675 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.577147062 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.186812096 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187578077 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219442145 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.518837515 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236944538 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187749324 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586447714 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.526179314 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303176709 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18939383 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219558159 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.187734922 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468390534 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.1873479 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188513316 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.190922373 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.8842995 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.191419628 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.763992234 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191622188 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.166056287 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190959108 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188608869 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.407408293 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.883804098 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208070024 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188517109 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.190698648 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.189543221 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.18820112 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220889799 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.380293039 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.286419648 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.206189208 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.193085944 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222270619 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.189555255 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.315215676 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205760185 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.189393224 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.24641236 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.307879184 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.265129257 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772303133 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192610313 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289263831 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311579559 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188722258 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18946428 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190149271 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.190240534 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.300624097 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.190467555 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.599261514 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.366256952 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.20784594 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.573291739 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291524781 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.190303783 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6121381 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195795773 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190903625 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939394406 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288856056 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.191446906 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.192166954 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191555831 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.602729283 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.772405482 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.444094994 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194601932 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.392151545 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.194997851 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189612925 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.191720131 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.617178913 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.74339117 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.877683473 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19626485 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304678915 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368103079 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208775557 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191388956 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.576746377 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.194841771 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.246948052 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195015968 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.589786815 seconds)
  done (took 364.342173607 seconds)
done (took 706.408848849 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.817202017 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.807951097 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.915088139 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.796488307 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.762883329 seconds)
  done (took 10.217886742 seconds)
done (took 11.336181977 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378632966 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.378330825 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252492867 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379967939 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224413865 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396200254 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358470804 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21274398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.294387926 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.273934442 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294075416 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247707691 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226959415 seconds)
  done (took 18.036703557 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507588985 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508172415 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258229462 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506138157 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232756069 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523611167 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382601772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40430787 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.40579283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226072247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207298335 seconds)
  done (took 16.282947393 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517839265 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.50845289 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261043364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522238737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234641956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512505941 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395853356 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414005956 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407698896 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227200148 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206812986 seconds)
  done (took 16.328737851 seconds)
done (took 51.768064573 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.203229011 seconds)
  done (took 2.323802635 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236178936 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.399365162 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222448795 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.207311903 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202668098 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207467895 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206735708 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.203949596 seconds)
  done (took 11.007591084 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200058319 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203238677 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200928664 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.203672074 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203658242 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201191582 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203365235 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.202875979 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20045292 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.203539793 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.200903415 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.200554458 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.203914559 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200690822 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201599574 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203627696 seconds)
  done (took 20.355628048 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.203776318 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200753167 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.200506769 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201812183 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20233658 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201125152 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202345806 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202730533 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201514484 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.201417175 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202840815 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.201730687 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202023588 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201910412 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.201707579 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.203062575 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202855384 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.201901765 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.206574949 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201785658 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203194328 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201548755 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203153784 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203077129 seconds)
  done (took 29.980157487 seconds)
done (took 64.787993265 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.812570202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.847905497 seconds)
  done (took 6.783249822 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.20594 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.204213723 seconds)
  done (took 3.534130671 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204469456 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.203946931 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205330854 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204975658 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.204450422 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.20619341 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.203878822 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205038613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204715916 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.205169148 seconds)
  done (took 13.171975994 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20236292 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203437979 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.200508079 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203432989 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.202666919 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.200468656 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203651777 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.202939715 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.203711006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.200885587 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.204268356 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201233009 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.203394013 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.20200692 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.203990764 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.201407 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.201568298 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202508424 seconds)
  done (took 22.76873415 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.202799747 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.204045225 seconds)
  done (took 3.529422643 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.201592159 seconds)
    (2/7) benchmarking "second"...
    done (took 1.201895749 seconds)
    (3/7) benchmarking "month"...
    done (took 1.201898763 seconds)
    (4/7) benchmarking "year"...
    done (took 1.201957566 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.201907307 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.202789751 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.20203227 seconds)
  done (took 9.536302031 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.205147466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.385347402 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.487916597 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.787129823 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.206168333 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.208956673 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.056325855 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.209962722 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.210790825 seconds)
  done (took 13.880678503 seconds)
done (took 74.3277595 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.222260842 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.216588796 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.452430717 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.212848402 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.21796602 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.542768239 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.249858628 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.320757651 seconds)
done (took 37.559673467 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.211648933 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.190296689 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.957425819 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.180310284 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.289274579 seconds)
  done (took 18.741872486 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.246429873 seconds)
    (2/2) benchmarking "read"...
    done (took 1.534883674 seconds)
  done (took 4.905643795 seconds)
done (took 30.983089576 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206518682 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.205827758 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.20675901 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.205253804 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.206590058 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.204484718 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.203877011 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.206064806 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.206887473 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.207455555 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.207237035 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206342107 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204653378 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20393853 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206979998 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.204340167 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204969638 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.204224949 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.206800078 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204180659 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207290622 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.204254279 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.204887913 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204502266 seconds)
  done (took 30.059546335 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.208424486 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207564309 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.208594237 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.208581787 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206603651 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207842014 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.208207755 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206230617 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.20794921 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208854407 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20560747 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.205658238 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.208550899 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.205915775 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208565604 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.205834546 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208337713 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205671461 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217689837 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233985395 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.209503917 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205909486 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207344495 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208839632 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.206230436 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206737781 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.208996235 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207203336 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208673686 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.207592926 seconds)
  done (took 37.387770908 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213588411 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.215748777 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208849468 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21040926 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209158698 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.209816035 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.208642679 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209375147 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.210509191 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.209433629 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.208685516 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.209856928 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209616744 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209454358 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.21002621 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.210316491 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210057475 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209658689 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.209308508 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210617736 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.210099863 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.210950119 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.210438379 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210389761 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.210045014 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.210537732 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.210699168 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.211416228 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.210006141 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.210654375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.211567129 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.211126024 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.210685608 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.211347972 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.210450472 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.210806216 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.215407979 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.218688366 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.211802959 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211607847 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211733612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.211717609 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.212145865 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.210724974 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.211324125 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.212545197 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.211360331 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.212499419 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21129355 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.211506339 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213284314 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.212823024 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.21215253 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212497291 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.21208404 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.212399363 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21275533 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.212269182 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213400731 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.213211997 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213280604 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.212811157 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.213026701 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.212689065 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21348245 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.213598018 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.213153205 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.213606437 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.213397032 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.214931604 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214335731 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213998083 seconds)
  done (took 88.367329564 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.213617824 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21173046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212130618 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211088531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211325465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214323915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212149009 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215248472 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21167349 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214861478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214351832 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.212103197 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21170385 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215391857 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213697993 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211500292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.213981909 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211673558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.214210367 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215127435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215287612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.212314334 seconds)
  done (took 27.821185151 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215044176 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217532988 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.212547579 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215051367 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213769174 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215265283 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215137307 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217735585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215405546 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212959154 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212863724 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215849964 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212929365 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212977993 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212737942 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214093995 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21595092 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213995054 seconds)
  done (took 22.994745707 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21360609 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.213604294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.215776085 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213446181 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.213255404 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216676837 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214401219 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217459152 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.21585182 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.214388448 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.216203706 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216785454 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.216412033 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214699726 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217415578 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.214207352 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.21661083 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214353978 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216770492 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21470119 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214106812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216547276 seconds)
  done (took 27.870880092 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217810024 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217269416 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.215308501 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215120165 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215336388 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217788352 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.217672886 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.216043825 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21921256 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217230799 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215965288 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.217842331 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217076192 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216275723 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215006685 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215782215 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218278291 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215787079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218656577 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.215487686 seconds)
  done (took 25.470660611 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219382657 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219256056 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219334653 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219599629 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220172304 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.220485714 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219446402 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220168733 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219278859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220774318 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220456669 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220221798 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220728877 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22009147 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220719063 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220422921 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220039861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220156463 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.219724474 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220125109 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220661889 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221048009 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221410098 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221099346 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221718964 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221577669 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22124209 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.220918397 seconds)
  done (took 35.306426281 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221502267 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221782816 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219255864 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.218941474 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.218688534 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.218754259 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219177652 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.219080792 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220893203 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218728725 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221460153 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221952327 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220795531 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.220600487 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220942511 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.221103083 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221758863 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.219238626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219226472 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218534069 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222580044 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221753225 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222379859 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219699975 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219515722 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222882873 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219788123 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219358079 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222603113 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220455724 seconds)
  done (took 37.752506057 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.240937262 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240931615 seconds)
  done (took 3.621160784 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.220445841 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222881673 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223623192 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221044207 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219549026 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223363886 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223565001 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221125138 seconds)
  done (took 10.916265326 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.224178377 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223831421 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224117579 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224574195 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224648299 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224601139 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231725234 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.245410188 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224376223 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226123722 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231635898 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.232426751 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227501876 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225298301 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225244951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227220451 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224049742 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225019585 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225480218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.224363534 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225682342 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227621813 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228152848 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.222416313 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227032396 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235924352 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.248433699 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.224603091 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226954345 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229096597 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.226470644 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.222857602 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225707588 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.225926675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226033525 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225856619 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234774092 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245798116 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.232570996 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246424503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227248254 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223316109 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228238953 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228244298 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228448464 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.226056989 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227892885 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223722495 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.226022629 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.229554212 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.229956127 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226918929 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224798992 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229985113 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227958221 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233044108 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247358869 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230281668 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236235528 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238472926 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.25905666 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252027303 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229485865 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227051163 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239389262 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.249057382 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231407744 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.24215176 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.222647487 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.225249757 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.232740499 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257780261 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.251528228 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.226663787 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225535106 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.226865922 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227019024 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226777373 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233920988 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.248588354 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226346224 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227656144 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240763974 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249235463 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.225353503 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.226599783 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226643105 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.22652456 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.227878621 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237770624 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.245180424 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.22668642 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.224774063 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.226419063 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.22657094 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226497708 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.225307742 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227504446 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.223541315 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.225865541 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226283625 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229654501 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.233796719 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226316937 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225470248 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.234490558 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.245727816 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225313894 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.231047123 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226288895 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2254054 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.227724938 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23183626 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.223929227 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229347617 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.233740612 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.225746673 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.226639339 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.224697458 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.226901368 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234780083 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251264516 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.226091847 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.225723312 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.232011404 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.237998265 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226411943 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229192846 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.226317126 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.223469339 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.224111316 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227953573 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.226053625 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.226672502 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226434138 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228241249 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.224683361 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.226391034 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.227476925 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.228518755 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.228175581 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227861422 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.228031477 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230134395 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.229274512 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.228189628 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234371432 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246748418 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.228534976 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.228138214 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.225626333 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227816198 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228585942 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.227509794 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.228723399 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227687625 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229099224 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.228579719 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229152564 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.229460904 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227670217 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.229617343 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232643639 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.230028899 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2326673 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.229042603 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.226365164 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.228792083 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.229960442 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.228931311 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.229859797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.22890316 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.233520113 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.237893556 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.230153294 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.229381477 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.232338951 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229138116 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231076934 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230202545 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.23326968 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.239012278 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.230627855 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236515086 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251002356 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230881304 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.231111408 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.231021022 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.230993159 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229982113 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.233958812 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.238562232 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243188356 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255759549 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.230933662 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.2355702 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231548525 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.234273188 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.234720835 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.231118601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.230922702 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231418357 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232004081 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231985109 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.232878769 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231094242 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.230858193 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.232799023 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.23121563 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.231857927 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232162171 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.232961663 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233663634 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.229616792 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232644432 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231747621 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.232844817 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.229220735 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.232373448 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.232312853 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.232419779 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.233290908 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.239091017 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.230297434 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234451071 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234436778 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.232409437 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.231974774 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.233757248 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235256346 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.232279446 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240491159 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.253051812 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.234344736 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240245196 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.2520376 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.232946948 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.236688462 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.233836279 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.231033189 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.236743741 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.242573935 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.234871779 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.234447029 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.235167215 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235037716 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233553686 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.240775051 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.25190593 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234877329 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.235089346 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.237094009 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.231726724 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.236061965 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.235732269 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.235407761 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237477756 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234963323 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.235073314 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237124884 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.2343088 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.235138413 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.236056979 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23832681 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.243028198 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240308308 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235191871 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238497138 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.236012922 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.239790856 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.236146399 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235606442 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.23604818 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248629762 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261073402 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24367263 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.256628652 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.236638216 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241433234 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.256571386 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.239672964 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237104067 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236535381 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23766825 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.236090002 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.233746102 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237401435 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.236621936 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23738429 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.237967744 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.240696581 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.237917655 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.236238143 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.235995831 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.236871069 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.237092514 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.236391818 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238696675 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.239482346 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237838131 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.235974266 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.237665119 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243757017 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257512543 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.23812146 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237456221 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.237918473 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.237678068 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.23932123 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.238158956 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.241421909 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.245266166 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.241520915 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.246153731 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239771209 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248105207 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.237823348 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.240612015 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.245254288 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234559404 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.235958303 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237375821 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.238957798 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244295452 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.258585184 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239072658 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.24209306 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238805124 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.238098444 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.237882919 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.238513598 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238298704 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.23839997 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245971992 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.257413443 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.242187558 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239889447 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235120703 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.238770756 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.238028935 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.237534088 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241798247 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.238663867 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.239041195 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23795808 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.237781114 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.238356777 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.238107752 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.239563241 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.235198829 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.238402609 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245013657 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.259597375 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242177057 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.238791937 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.245383689 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258077338 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246811361 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.25777205 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.238309522 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238400712 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238411322 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.239898217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.239164966 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240439827 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.239410813 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239267114 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.243228696 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.238493967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.240474552 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.240439835 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239653877 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24017372 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249844508 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261388489 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.241140744 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244169432 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.23769384 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.241145812 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.24342914 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.241103225 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.237284875 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243429635 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250450173 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248032035 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.240204611 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.240235361 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239407653 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240441607 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.239811687 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.239476454 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.240951421 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.240203129 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24072988 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.241988357 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24212954 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.239997975 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.239838866 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242705728 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.241193344 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.250718703 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.260684589 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.242034181 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241259544 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.241914568 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241036492 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.240882337 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.2418138 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240895703 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241506307 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.243626227 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249249549 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.247780339 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.244237877 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.241232676 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.241717667 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.241778782 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.242992153 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241710932 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.241887086 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24322201 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.242137845 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242224017 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.242348046 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.241487831 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.241942303 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.242227649 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241768881 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245456634 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.24863583 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242251701 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.239342337 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.241908835 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242909503 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241090744 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.24301167 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.249547739 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264865756 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.252004181 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.249821584 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.244930313 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.243865846 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247461657 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.252775201 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.24542337 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.245586885 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.245160385 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.245675925 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.246748094 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.248120015 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244791329 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.24990804 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.264449739 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.242584414 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252019338 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.262530134 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243400212 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.245357216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248023634 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.243480386 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.242471516 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.244573661 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.243678899 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250220164 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.264182776 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243556945 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246412527 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.242540117 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.246547377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247568662 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244232529 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.244401711 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.240268814 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.244352973 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243650393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24337165 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.241729385 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.242702587 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.243372772 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.24668469 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.248665793 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.242563579 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244788355 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.243572871 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.244046897 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243896188 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244677131 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241947409 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.241758641 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.243290029 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244672456 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.244304623 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.245982798 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.243797985 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244913648 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.245164086 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244438233 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248541001 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253955644 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.251395055 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240795401 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.24397457 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.24392222 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.247528721 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244158675 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243794928 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244473634 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.245753242 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.244829614 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244331353 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.244002466 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.247217132 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260283649 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.262198456 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245707498 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.245371532 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247388755 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.244673789 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.242735949 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.244878549 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245876398 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.249152158 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.251810838 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.245172072 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251755228 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264007642 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.246326565 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.249158519 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.24806805 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.252139353 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247669464 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24444719 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245763508 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.250674009 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.261114373 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245294131 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255170514 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274012021 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.264217831 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246743896 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.245830653 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245410548 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.245608407 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246092794 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.246398918 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246590684 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24625172 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.245015018 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246574989 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251881601 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247584505 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.247834973 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.246689454 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245645554 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.247102274 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.244645984 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.246326235 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.247211663 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.247029491 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246249058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246000528 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.247908538 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259634612 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271980755 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246645157 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.24812757 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.245030618 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.249735378 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.250130575 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258057624 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.254905756 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247008465 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.247224636 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248963265 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247244816 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.246615687 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.247975856 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248618213 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248509028 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.245967421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.260742968 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274793046 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.251951157 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.246690818 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249458518 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.24755429 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248913894 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248610683 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249623685 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.249060036 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.249890619 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252576848 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248030267 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.247637473 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251520206 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254945933 seconds)
  done (took 739.640185591 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246396866 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246318445 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245383623 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245034898 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245244765 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245767476 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245759179 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2455745 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246493318 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245484349 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245469119 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244902924 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245489389 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244725831 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244580322 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245282727 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246325075 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24534032 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24633292 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24493276 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244979449 seconds)
  done (took 27.318208943 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.248115554 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.245516069 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247096959 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248501331 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24527485 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247024378 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245318486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246739499 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247644691 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245450132 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248765018 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247485566 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246094324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.245564602 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245062279 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247773514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247926656 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245371332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.250012247 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245869206 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24744056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245420881 seconds)
  done (took 28.591800802 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.248189727 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.248521972 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.247274519 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.247157223 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.247719818 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.245172492 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.248373125 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.248059412 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.247997507 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.249456186 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.247470337 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.251196858 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.254140077 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.251707233 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.249783996 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.247122226 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.391981332 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.248477375 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248791089 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.249003247 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.245760707 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.253926656 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.26511525 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.244938028 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.24730496 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248856832 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.248384302 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.248454229 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.247652675 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.248564569 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.251678043 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.247791795 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.24699617 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.249574348 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.246989113 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.249608613 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.250809418 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.247216654 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.243991058 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.246967571 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.256396837 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.265201656 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.247887202 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.254971904 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.26724222 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.246895785 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.251241564 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.255306968 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.245380182 seconds)
  done (took 62.552217783 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.247852561 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.248770919 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.245349544 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.247827164 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.247824002 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.248064911 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.24725776 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.247860243 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.245771579 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.247268429 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.249164186 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.246345088 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.245260482 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.247991159 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.247292353 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.246068647 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.245824709 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.246768685 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.246094652 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.245633268 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.244876077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.247711673 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.248791641 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.245941077 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.248147392 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.247286865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.247532144 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.248670676 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.246705847 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.2461659 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.249706135 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.250511388 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.24861996 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.247415961 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.245552454 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.249509376 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.249735941 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.246729783 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.248049974 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.247048753 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.249605449 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.249523135 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.248780447 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.249410541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.246440503 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.246363991 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.247341418 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.246279784 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.246486226 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.24962586 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.248826762 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.246954518 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.248811334 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.24705045 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.248255073 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.249610845 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.248048281 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.247508472 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.248822004 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.247488012 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.246707242 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250018532 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.247376967 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.249642551 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.249420668 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.247625199 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.246562857 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250091224 seconds)
  done (took 86.008057002 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248780196 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.249828611 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249714455 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248784101 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25036868 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.248880801 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249314457 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.249464718 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.249194558 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250862849 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249442784 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.250300751 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.24951318 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.249789171 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.250079196 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249453249 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.249645367 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249490635 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249564876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249979636 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.251374194 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.249991744 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.249538345 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.24972636 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250188978 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.250736726 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249793068 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.250429738 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251104715 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.250036164 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25019613 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.250040506 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.25043318 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.250335248 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.250373129 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.250239673 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.251223436 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251307131 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.250492424 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251142298 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251328988 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252160757 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252449345 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.251180359 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25169338 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.251654131 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25186791 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.253050143 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.252112806 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251578991 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.252200024 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252018747 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252662226 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252682209 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.25203521 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.25219016 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251922051 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251305181 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252895499 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.252874985 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252357609 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.252479421 seconds)
  done (took 78.713823231 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253186617 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.259302216 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.260530889 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.265858732 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276875333 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272996242 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292694476 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.274628501 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267796697 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263006703 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26170579 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260364596 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260724538 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262430262 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261028136 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259198781 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259261328 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260746165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2625857 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260412118 seconds)
  done (took 26.46215314 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.260011933 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263688746 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262697871 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26093224 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.262767392 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.264614513 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.263714117 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263804669 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264024623 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263291474 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264601063 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269324679 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267262735 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.252847512 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.254751605 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.252899479 seconds)
  done (took 21.368261308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.252566093 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.255104596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.254852169 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.25562065 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.253736863 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.2531876 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.255188551 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.253861077 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.253422118 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.256103337 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.255616131 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.255861008 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.255289146 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.255229953 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.25276324 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.256251589 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.253647753 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.254148494 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.256381351 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.256912326 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.254588314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.253989549 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.256663529 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.256668333 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.254236685 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.254909195 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.255134448 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.253765122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.25409848 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.257311735 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.255525459 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.255429958 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.255038009 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.254400336 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.257073887 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.255583308 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.257978972 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.257948495 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.257885048 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.258155362 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.258725128 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.255943941 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.258281689 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.259559579 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.255692481 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.25807359 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.256396479 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.256283126 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.254569761 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.256132483 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.257842508 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.257881456 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.257740772 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.259870153 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.25924467 seconds)
  done (took 70.24447871 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260362611 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.259238063 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257221965 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.258761372 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258636386 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.257010438 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259248624 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.258721067 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255594089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.259457702 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258270286 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261133892 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256816227 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259996771 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257332786 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260178883 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.257345963 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.25669702 seconds)
  done (took 23.82436507 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258549777 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257454184 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.259878988 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.258173227 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.259199922 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260505887 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257495908 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.260724384 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260393061 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.258098228 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25789142 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.260437756 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262202101 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.261035966 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257933519 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260037778 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.260997952 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260659982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.258865193 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260488138 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262304463 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260334369 seconds)
  done (took 28.887228247 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.260881528 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.260214861 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.260085491 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.27556766 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.27700477 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.281232782 seconds)
  done (took 8.788440771 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267498382 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262751222 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259307778 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262392709 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262591486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259613414 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259567213 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25956114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262783998 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260566566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259945115 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262462009 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261945534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260482575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263253237 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264143244 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261118746 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260776912 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261596363 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263181615 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260966919 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262323889 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26041729 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261483782 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260676376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26100781 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263704753 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261650759 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260752683 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263964067 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265006096 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261011878 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263305597 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261368067 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265007134 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264120719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26135916 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264238542 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264442631 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262336777 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264017814 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264234556 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263991781 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262703227 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263812707 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262233231 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262036316 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263416025 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261872146 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265322875 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26502975 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262583554 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264915245 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265124282 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265362353 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265889066 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262826961 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26421806 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264653398 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263855394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262894365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265184737 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263302392 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262999538 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265952574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263296111 seconds)
  done (took 84.543322384 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263054584 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263538631 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263582915 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264508003 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26285616 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262755893 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262857926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263323014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263898136 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26294736 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266580871 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263815876 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263416179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263417858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265127799 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264223596 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26372008 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264251154 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265948943 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266861628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265070599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264905222 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26472272 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264618669 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265875714 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267985508 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264818266 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265331653 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264699375 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265080293 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265123592 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265664079 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265546003 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265662339 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266972472 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264817008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265076215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264923755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265990654 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267299902 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265612814 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268042018 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265516353 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265730869 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266659991 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26532434 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265664145 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265122452 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265687317 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265737838 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266122776 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265811944 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266511355 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265981759 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266385029 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266731087 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267578536 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267115283 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267084491 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268431157 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265931955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266341222 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269312489 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267052004 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26690492 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267368463 seconds)
  done (took 84.701137584 seconds)
done (took 1720.336499898 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.434402056 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.38374354 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.267765082 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.31752412 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.267028854 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.279631642 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.284974131 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.269118884 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.268373238 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.268538651 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.269038573 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.454178767 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.269748343 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.270519411 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.269268712 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.363304433 seconds)
  done (took 42.120654568 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.296607226 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.2756061 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.379870012 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.291155249 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.295599577 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.448928754 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.323605619 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.275272714 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.430440401 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.31410024 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.70918506 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.296588026 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.274922871 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.297199286 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.292496934 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.447324803 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.500325016 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.713137937 seconds)
  done (took 29.046893733 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.683752214 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.286774777 seconds)
  done (took 9.155027342 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.291547132 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.275735391 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.275807765 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.273815894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.265914812 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.267615071 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.273051844 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.264416324 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.643494577 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.384974596 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.271940569 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.280666944 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.288353071 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.270996283 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.262206561 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.30059906 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45946107 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.260659213 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.258430621 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.267904046 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.260998616 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.351582368 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.294067936 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.25232356 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.370465313 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.630441252 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.256413846 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.258896589 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.422702087 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.246040277 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.247111221 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.24835684 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.248288796 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.132272769 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.669979035 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.251875495 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.284060004 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.255381268 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.242394429 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.388847665 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.245455214 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.251491614 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.237177381 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.671162855 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.374181234 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.351604075 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.391779693 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.259961162 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.241476086 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.299693382 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.241374214 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.242012292 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.28009769 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.010774385 seconds)
  done (took 106.735959717 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.291820149 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.624692227 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.40079 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.259092747 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.847489891 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.802097222 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.249959721 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.498677371 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.269472579 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.230838471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.512269411 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.710927726 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.251482991 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.246502533 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.882027115 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.254133817 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.227969138 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.913409472 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.238680048 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.228365256 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706286343 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223752917 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.221117297 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.469595566 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.255779656 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.649502463 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.533730649 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.637116187 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.236394511 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.21963661 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.659916247 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.241458457 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.238783973 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.222149868 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.470960455 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.55706439 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55674845 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.242654576 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.231811379 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.223927388 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.248122432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.644767778 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.552758051 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.235736026 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.226151562 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.650736297 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.235293177 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.227307946 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.220210849 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.422499509 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.862463222 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.221299056 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.535940265 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.222605153 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.515488128 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.264438405 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.271129739 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679643851 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236166707 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.291698922 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.245433822 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.219980265 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.220661255 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.221268459 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.225290918 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.545390713 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.561667431 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.22601384 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.541088725 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.671103015 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.235739629 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.739832938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.093040578 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.225386157 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.291366716 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.218523248 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.723323809 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.684116746 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.252445934 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.218601615 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.528502363 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.236294432 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.488925305 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.23379533 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.235427681 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.723719903 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.221068811 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.265690202 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.223152396 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.21958796 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.848554102 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.22087592 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.49046029 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.239627676 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.220663615 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.219729115 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.261347459 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.228784505 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.219578932 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.224799566 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.724328045 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.238934743 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.332684631 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.23699868 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220839696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.236275071 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.221026128 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.220891762 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.437868225 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.706771099 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.240056242 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.221691601 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.220453144 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.22493854 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.481416982 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.222640947 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.504573412 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.238114625 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.22075828 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.223671661 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.80385967 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.255609166 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223181651 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.227003717 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.091144127 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.431393462 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.238359102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.222943174 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.221854097 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.237878719 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.371995677 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.248136468 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.252399321 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.22797738 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906844848 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.278240476 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.245171993 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.532891904 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.227430328 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.041090424 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.248298408 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.222667441 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.51795796 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.478045921 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.432644429 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.225916847 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.237485265 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893972552 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.283361909 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.359641485 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.242611092 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.293711148 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419193278 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.526414889 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.225590001 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.82475773 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.223729265 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436262031 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.223919045 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513632695 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.686492758 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.239688774 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227469171 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900037811 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.943031753 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.029423064 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.225047565 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.488310497 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.164450915 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.687672269 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.224267618 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.227126088 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.656990824 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.225587132 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.225361595 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.224547462 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.225621994 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.377062932 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.396747623 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.876232303 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.225909353 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.651009727 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305349762 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224748101 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.228804568 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.229348314 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.574229018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.295706494 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.226047174 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.272309255 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.226734497 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.226878187 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.671832736 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.124289238 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.230991642 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.375355925 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.835355615 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.240980814 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.226301966 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.892828482 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.914396504 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.713325357 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.267461548 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.510208405 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.244110284 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.262665645 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.77654493 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310228837 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.674747569 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.242391655 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.227084658 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.78972139 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.242484043 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.31676581 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.227476502 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.226556254 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.732029124 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.242939098 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.231431723 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.389736471 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.245056089 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.497205137 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.228316429 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.272172096 seconds)
  done (took 1085.388317372 seconds)
done (took 1273.628075499 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.228254322 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.234089159 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.213267674 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.233549221 seconds)
  done (took 26.057116305 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.238674007 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.233746244 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.235893497 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.234334082 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.236436184 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.235282817 seconds)
  done (took 8.562572115 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.357154037 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.228643474 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235145272 seconds)
  done (took 18.969279576 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.425869466 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.447350296 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.541259605 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.280761392 seconds)
  done (took 9.844446611 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.236403909 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.234768299 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.235569112 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.23722746 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.240378159 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.240595225 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.23856481 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.237861046 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.240269523 seconds)
  done (took 12.290252302 seconds)
done (took 76.871359017 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.314661297 seconds)
    (2/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.210167 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.03759694 seconds)
    (4/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.261577275 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.657394153 seconds)
    (6/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.262435411 seconds)
    (7/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.332561513 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.106133339 seconds)
    (9/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.624206614 seconds)
    (10/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.886444184 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.490352224 seconds)
    (12/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.711152243 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.276334487 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.256924211 seconds)
    (15/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.574863358 seconds)
    (16/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.406361653 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.227364245 seconds)
    (18/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.434920048 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.25301769 seconds)
    (20/286) benchmarking ("sort", Float32, false)...
    done (took 5.232914305 seconds)
    (21/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.217331125 seconds)
    (22/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.584939039 seconds)
    (23/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.59308453 seconds)
    (24/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.61484423 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.597931035 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 6.236163136 seconds)
    (27/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.057287845 seconds)
    (28/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.270985597 seconds)
    (29/286) benchmarking ("sort", Float64, true)...
    done (took 6.242931355 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.336354542 seconds)
    (31/286) benchmarking ("sort", Float64, false)...
    done (took 5.504668163 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.238062155 seconds)
    (33/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.373737875 seconds)
    (34/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.221184642 seconds)
    (35/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304293645 seconds)
    (36/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.00525705 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.230486321 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.259602714 seconds)
    (39/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.319097394 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.046221842 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.23294773 seconds)
    (42/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.704028797 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.240961716 seconds)
    (44/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.665605876 seconds)
    (45/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.180189578 seconds)
    (46/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.545743632 seconds)
    (47/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.246329592 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.062471312 seconds)
    (49/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.971243374 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.349754827 seconds)
    (51/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.434612625 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.506673291 seconds)
    (53/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.483797535 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.255666909 seconds)
    (55/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.360525113 seconds)
    (56/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.298759548 seconds)
    (57/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.244163831 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.275839302 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.298262564 seconds)
    (60/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.262478963 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.025444201 seconds)
    (62/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.219653172 seconds)
    (63/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.385932178 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.103984694 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.517719346 seconds)
    (66/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.326359405 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.474864366 seconds)
    (68/286) benchmarking ("sort", Int8, true)...
    done (took 6.251247909 seconds)
    (69/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.349793826 seconds)
    (70/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.389752749 seconds)
    (71/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.21593175 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.83168208 seconds)
    (73/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.949766165 seconds)
    (74/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.200889704 seconds)
    (75/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.285091908 seconds)
    (76/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.295938581 seconds)
    (77/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.839504935 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.227458593 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.236754539 seconds)
    (80/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.236966653 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.04677041 seconds)
    (82/286) benchmarking ("sort", BigInt, false)...
    done (took 6.236153139 seconds)
    (83/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.231916852 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.363142378 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.867566967 seconds)
    (86/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.341398206 seconds)
    (87/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.481630096 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.826559958 seconds)
    (89/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.245519306 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.930245096 seconds)
    (91/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.232330872 seconds)
    (92/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.318712088 seconds)
    (93/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.243591254 seconds)
    (94/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.265590238 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.430128001 seconds)
    (96/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.268730505 seconds)
    (97/286) benchmarking ("sort", Int8, false)...
    done (took 4.293179012 seconds)
    (98/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.218069218 seconds)
    (99/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.219017819 seconds)
    (100/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.013738367 seconds)
    (101/286) benchmarking ("sort", BigInt, true)...
    done (took 6.243164345 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.458237379 seconds)
    (103/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.216946455 seconds)
    (104/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.616399357 seconds)
    (105/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.115451686 seconds)
    (106/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.242780196 seconds)
    (107/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.970074712 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.867208408 seconds)
    (109/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.590946203 seconds)
    (110/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.2473429 seconds)
    (111/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.270897787 seconds)
    (112/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.444734654 seconds)
    (113/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.453571371 seconds)
    (114/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.578823958 seconds)
    (115/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.368650488 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.257820083 seconds)
    (117/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.439651624 seconds)
    (118/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.714855391 seconds)
    (119/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.263189807 seconds)
    (120/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.264827445 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.580972128 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.144215255 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.747357575 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.27794949 seconds)
    (125/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.358595457 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.517537922 seconds)
    (127/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.218303634 seconds)
    (128/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.315822851 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.704984575 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.955303555 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.507891646 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.341008985 seconds)
    (133/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.335434816 seconds)
    (134/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.346576159 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.979875284 seconds)
    (136/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.225451032 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.281575634 seconds)
    (138/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.277820587 seconds)
    (139/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.587199776 seconds)
    (140/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.949151414 seconds)
    (141/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.258315433 seconds)
    (142/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.236846205 seconds)
    (143/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.373218775 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.071198476 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.267719339 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.818650669 seconds)
    (147/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.339117183 seconds)
    (148/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.877394366 seconds)
    (149/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.430506155 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.265490016 seconds)
    (151/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.222729758 seconds)
    (152/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.609922949 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.362482497 seconds)
    (154/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.699543865 seconds)
    (155/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.241360547 seconds)
    (156/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.287209535 seconds)
    (157/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.366888606 seconds)
    (158/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.244121732 seconds)
    (159/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.229058356 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.260490834 seconds)
    (161/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.46383018 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.282331305 seconds)
    (163/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.987428283 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.753495942 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.256761499 seconds)
    (166/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.47840356 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.65207373 seconds)
    (168/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.4329401 seconds)
    (169/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.32104904 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.645242418 seconds)
    (171/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.272580777 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.282919615 seconds)
    (173/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.301783972 seconds)
    (174/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.247038167 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.248586946 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.515187501 seconds)
    (177/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.263984271 seconds)
    (178/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.497084024 seconds)
    (179/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.228515477 seconds)
    (180/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.586539007 seconds)
    (181/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.305812324 seconds)
    (182/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.242600844 seconds)
    (183/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.82090636 seconds)
    (184/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.01894748 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.435297448 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.344183463 seconds)
    (187/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.090453437 seconds)
    (188/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.238409106 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.30125535 seconds)
    (190/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.271640582 seconds)
    (191/286) benchmarking ("sort", Float32, true)...
    done (took 6.248532577 seconds)
    (192/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.234515428 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.298561579 seconds)
    (194/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.395398028 seconds)
    (195/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.22368368 seconds)
    (196/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.376630409 seconds)
    (197/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.428268667 seconds)
    (198/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.0848098 seconds)
    (199/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.024767098 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.659855547 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.912454371 seconds)
    (202/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.224783712 seconds)
    (203/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.252845734 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.458576403 seconds)
    (205/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.951570283 seconds)
    (206/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.226084826 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.649764 seconds)
    (208/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.239023056 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.242131349 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.267971992 seconds)
    (211/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.246410043 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.872195983 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.274973557 seconds)
    (214/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.224434892 seconds)
    (215/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.578522987 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.291663466 seconds)
    (217/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.225372259 seconds)
    (218/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.231070581 seconds)
    (219/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.230084379 seconds)
    (220/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.254268735 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.329623243 seconds)
    (222/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.258376725 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.244769983 seconds)
    (224/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.601610714 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.613272271 seconds)
    (226/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.291010836 seconds)
    (227/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.833477358 seconds)
    (228/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.252479875 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.595341244 seconds)
    (230/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.240105292 seconds)
    (231/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.331880383 seconds)
    (232/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.250458297 seconds)
    (233/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.226254219 seconds)
    (234/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.020963086 seconds)
    (235/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.275717311 seconds)
    (236/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.719544229 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.448194033 seconds)
    (238/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.255414643 seconds)
    (239/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.077690641 seconds)
    (240/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.239652468 seconds)
    (241/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.249344688 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.278356421 seconds)
    (243/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.740998858 seconds)
    (244/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.979959645 seconds)
    (245/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.367233282 seconds)
    (246/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.586584263 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.639800984 seconds)
    (248/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.230799986 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.357445786 seconds)
    (250/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.721036677 seconds)
    (251/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.227765921 seconds)
    (252/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.612009264 seconds)
    (253/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.430382295 seconds)
    (254/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.291684675 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.348553564 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.226376747 seconds)
    (257/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.334210095 seconds)
    (258/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.22709142 seconds)
    (259/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.318234777 seconds)
    (260/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.227722376 seconds)
    (261/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.601651711 seconds)
    (262/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.279247743 seconds)
    (263/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.975048444 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.336251405 seconds)
    (265/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.164317911 seconds)
    (266/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.236655973 seconds)
    (267/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.288030721 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.330591404 seconds)
    (269/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.82035187 seconds)
    (270/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.253905531 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.412965631 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.143510226 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.038131049 seconds)
    (274/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.248210406 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.299419889 seconds)
    (276/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.688046548 seconds)
    (277/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.723476819 seconds)
    (278/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.363108262 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.227761744 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.276294955 seconds)
    (281/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.332057729 seconds)
    (282/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.965216 seconds)
    (283/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.339876045 seconds)
    (284/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.229564291 seconds)
    (285/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.357777463 seconds)
    (286/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.822690103 seconds)
  done (took 906.654808455 seconds)
done (took 907.80478412 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.282194262 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276663626 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.259902477 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.28134157 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.371444136 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.286073164 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.270745848 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.262146237 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.308204127 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.309096132 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.260033128 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.284428202 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.261263847 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.261073312 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.259352136 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.275362174 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.251530444 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.260488545 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.276919307 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.269621375 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.276043239 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.258042482 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.310576748 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.285502535 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.264129217 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.262782879 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.264479514 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.279423052 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.373017879 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.26402948 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.263738632 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.272251847 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.25183663 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.260566672 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.255521397 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.280786804 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.271922816 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.2708683 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.265190796 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.292992211 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.642336565 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.281850825 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.26316535 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.262439914 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.263137116 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.26541489 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.263352547 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.269455098 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276627195 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27695455 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.645666806 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.298672785 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.264996893 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.262969944 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.272764077 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.262581602 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.266636791 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280931544 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.282094422 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280940938 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.237985254 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.268097445 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.265069941 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.279929567 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.270583382 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.689013446 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.280112328 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.268728376 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.645775184 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.289672471 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.688244076 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.293547278 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.265917664 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.277348742 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.295460109 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.25372823 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.258512789 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.264205191 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.27118297 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.261757338 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.274868011 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278556302 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.268433104 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.265785251 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.279469997 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.289675578 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.274447527 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.26505263 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.275081287 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.284480898 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.27242178 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.274764549 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.26857846 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.260482275 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.274411814 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.269706311 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.267774002 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.268778018 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.270077568 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.275495217 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.644775758 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303250401 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.261180732 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.262160721 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.265153776 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.279234857 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.647219946 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.286948681 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.287828001 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.313838109 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.268276596 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.243637655 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.269286448 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.284619079 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.275484697 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.270186384 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.261677323 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.241956664 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.656507469 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.302861935 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.268947901 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.26498829 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284605488 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.268730078 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.263461339 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.25878037 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.269044132 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28179748 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.387446455 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.277893625 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.298152045 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.265582548 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.271259882 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.297491169 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285731127 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.299085556 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.271395801 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28442232 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.284019258 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.264979683 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.279701866 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.278593505 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.269428405 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.274061917 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.263627398 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.297540498 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.282127937 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282550563 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.290359939 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.388334461 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.266741726 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.248375477 seconds)
done (took 214.226747709 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.329507246 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.264045551 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.358121639 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.26540946 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.372135134 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.369621737 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.26305275 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.263902025 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.264394063 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.642389251 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.263649641 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.264144389 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.266167962 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.263768404 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.352771454 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.266590037 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.263913712 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.606541716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.266016271 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.341501463 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.265517541 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.264194462 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.266938305 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.654678147 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.266639543 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.264820545 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.342316971 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.266511885 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.615544481 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.26255087 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.268464917 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.618841442 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.362789582 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.284650579 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.277689464 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.274785003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.375797497 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.285128222 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.350856452 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.351345661 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.36144127 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.306951174 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.265272441 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.262241763 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.269584993 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.268522751 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.265750562 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.296055052 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.265705913 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.266174489 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.608936868 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.277769996 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.266343587 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.266862179 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.266995689 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.297258879 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.266353898 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.269050663 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.364677646 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.26976814 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.335134861 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.656529118 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.646764011 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.269498425 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.264396044 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.267814857 seconds)
  done (took 144.068143412 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.337396403 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.341771336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.377996793 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.284790223 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.321880246 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.38277124 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.284915221 seconds)
  done (took 10.511103438 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.275122609 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270930312 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319298319 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.318430035 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.270212948 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.448756646 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.271506219 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.282076533 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.267930467 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.322125988 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.272122514 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.271058222 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.280392873 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.264243694 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.318556382 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.283059444 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390351302 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.272156766 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.272598812 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.422557302 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.268578739 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.277802792 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.323798149 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.283568832 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.27349905 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.277090084 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.08852286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.271863806 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.269398687 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.272209137 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269391137 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.346677773 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.272789446 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.271257507 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.269853871 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387393336 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.27184624 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270521035 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.273931497 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.269840126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.272174168 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.272350773 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.272063996 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.271006742 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.272406119 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.294297579 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.273058 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.273613116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.272741131 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.273453825 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.322579966 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.273930737 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.270868177 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.270550187 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.328270792 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280610522 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.273211947 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.271304027 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.274962484 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.271052224 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.423765124 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.320479426 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.274684004 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.321311177 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.274715598 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.274029548 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.274253314 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.274594268 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327958495 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.275763263 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.321941172 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.272565679 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.460818624 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.298555703 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.276504208 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.277568022 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.277458123 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.274825005 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.275607041 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.28063228 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.273166614 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.275713017 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.280574826 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273094829 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.273119675 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44215449 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383274856 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.273252519 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.287620387 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.282263565 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.273883542 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.328781583 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.275862555 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.272961749 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327744245 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.394469451 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.328494263 seconds)
  done (took 147.676258247 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.280013269 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.283153518 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.278729316 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.297282075 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.294203578 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.275622549 seconds)
  done (took 8.894908275 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.278113692 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.277375482 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.276970867 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.276857735 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.27536865 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.278557619 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.277269064 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277628981 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.279881664 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.277271191 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.278792136 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.278831881 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.278627308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.27748239 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.277680666 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.276796097 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.278403127 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.274808009 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.277373163 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277527216 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380792528 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.277780985 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277850932 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.27871633 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.282407528 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.278253842 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.285957749 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.279283181 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.279344113 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.285803712 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.295654012 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.279135339 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.279357342 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.284313934 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.281652324 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.279748861 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282690794 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.280512097 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.27622232 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.279668629 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.281415638 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.278675091 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.279621924 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.281314835 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.281532212 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.284876312 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.285232248 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288211573 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.280623383 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.282765754 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.282588578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.280676442 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.28165951 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.282508606 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.282634368 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.299505507 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.285637773 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.281369044 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.281064243 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.281076775 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.282655963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.281490276 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.282473026 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.284145466 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.278008485 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.2830184 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.282570122 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284415194 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281212473 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.281916519 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.283625601 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.279361223 seconds)
  done (took 94.513654734 seconds)
done (took 406.840159615 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.558575872 seconds)
  done (took 7.750173473 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.47841146 seconds)
  done (took 7.67245215 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.252138845 seconds)
  done (took 21.446337067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.288112657 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.286066228 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.311232709 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.280638583 seconds)
  done (took 26.358172493 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.459861989 seconds)
  done (took 7.653622542 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.279162553 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.276516042 seconds)
  done (took 13.750902511 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.600964602 seconds)
  done (took 7.794556678 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.556744698 seconds)
  done (took 7.750087642 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.278097799 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.312857001 seconds)
  done (took 14.037027518 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.258539922 seconds)
  done (took 7.45327194 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.047814398 seconds)
  done (took 11.24343934 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.285793033 seconds)
  done (took 7.482356529 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.330669594 seconds)
  done (took 7.525563997 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.050216545 seconds)
  done (took 9.246267196 seconds)
done (took 158.356162484 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.278385223 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.279249034 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.279447222 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.278617566 seconds)
  done (took 26.310730453 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.33892851 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.338414522 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.321954021 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.329831186 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.32348415 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.318682468 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.314380389 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.327120261 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.331225525 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.323017911 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.321351698 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.322987009 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.320400496 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.312179082 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.322420422 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.321940431 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.331736598 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.320780933 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.313382271 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.323907991 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.28869769 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.331651919 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.323435375 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.287482113 seconds)
  done (took 32.905657879 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.809264686 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.358723942 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.440653618 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.339299682 seconds)
  done (took 7.1452017 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.338664368 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.341645964 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.352293047 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.390991556 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.420796608 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.351077169 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.31467008 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.309413572 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.295741353 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.340759492 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.417203064 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.356461418 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.426959642 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.288099478 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.47432968 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.288715885 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.288445906 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.339578148 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.391806975 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.404993239 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.288653379 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.339977293 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.344259888 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.35520703 seconds)
  done (took 33.659142269 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.288135299 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.307020158 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.288054721 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.287737294 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.295621491 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.288287515 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.288613939 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.289647614 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.288590603 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.295159688 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.288073688 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.301693399 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.2878485 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.289430048 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.295893263 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.289813357 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.295619123 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.289568763 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.289917722 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.296021118 seconds)
  done (took 27.039666325 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.283038901 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.136452561 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.635812621 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.539197892 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.283768927 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.282665275 seconds)
  done (took 27.360107625 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.3559231 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.509144171 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.296716961 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.629286622 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.728837069 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.313399899 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.290721953 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.52323752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.828274791 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.818785972 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.35121751 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.362511288 seconds)
  done (took 19.208631042 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.285344447 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.290868847 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.289811464 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.322278486 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.342503034 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.316220151 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.296922438 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.284400998 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.349979011 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.369583397 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.316199722 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.344629936 seconds)
  done (took 37.010236206 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372698011 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386953221 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.18692622 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365103366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.999315647 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498505425 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302311934 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977583618 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.309189676 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560902602 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289773748 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383177852 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542239477 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29078228 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295035406 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.232351793 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537058136 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748951338 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290212621 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16944644 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318799142 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.287605178 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.273915683 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515227962 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523225841 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.265212354 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.548723313 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.06568465 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562980801 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309728232 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299798774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288664698 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562651079 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928188381 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409946934 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490964771 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314948618 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857750331 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.277583287 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.182643855 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298606042 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.315560217 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300269519 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289831576 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.223827049 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29430584 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985865948 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.313444513 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.99985204 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.290726416 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538503407 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393392743 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.294830421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.859741797 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296280571 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.295835353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.294310537 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380308673 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878345796 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.404377135 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301047089 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.23144393 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293120368 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.182091244 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904130142 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.319858504 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.294948963 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295023893 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225962443 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.187526438 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314795589 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439820828 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.315927708 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925753558 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959014813 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31673083 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.228915075 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814537392 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300339198 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.232351975 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519210347 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068860602 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226708643 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.238962096 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.225660396 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961845308 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301093553 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.803167775 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.312961032 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019773771 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.521448984 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334433611 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31599261 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.51606268 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.17129749 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293231224 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.296712199 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429056119 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314232435 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.004039405 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252045213 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.297561442 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549030787 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.50426951 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295680025 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246492734 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782003825 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33184239 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.315036283 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.293443677 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.521397175 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.875959332 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33207359 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416751657 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321400787 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.073121033 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998250063 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295468427 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.306631765 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.307632219 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563354775 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.021074834 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198750955 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361990792 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296071592 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.294859826 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331526211 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152350637 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.177388725 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.48382785 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332573 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.311877419 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.295193326 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24343298 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.301761007 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304846533 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.080488193 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.519375173 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297129248 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577255902 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229506286 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44234032 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305210148 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.517752677 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.45904144 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.317734541 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556158244 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30248919 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303202083 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315620287 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316438957 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397068779 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31842451 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.297261932 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.575772109 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.301287125 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.301329848 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.218345032 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.081503033 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297987716 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.302831171 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296486006 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857954251 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297316134 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305841018 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186307543 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.311164343 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36455233 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303585971 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.501914632 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.468891327 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326989387 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.303871974 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.308517141 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521735747 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308693524 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.198617021 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382723227 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.762637664 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881354092 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334734173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.23216011 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.009550365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.991362052 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299101039 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.496379185 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.298899195 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503669149 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336905691 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304109423 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860749581 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32508884 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.20476509 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.311448538 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310761945 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.304195782 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298877708 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.46796748 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.446900895 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316113039 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.316548168 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443384827 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.314026949 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.233742022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.815871826 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304724751 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301297766 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.075174871 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333911125 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.183362191 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082619413 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579422577 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313887398 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551388345 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288517575 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.339318471 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.299541979 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310643047 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314154218 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.327149173 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308888778 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.310476611 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.196635974 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.745810641 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866127893 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007918187 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832922719 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605700884 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.333254973 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.207775045 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.992265469 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253501006 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.958281134 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529369569 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015542816 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263301622 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767333821 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.496730573 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057756415 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551071711 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537627748 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.583098634 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.332109773 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56021599 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522108247 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33616301 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310982349 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236963449 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.588406551 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841105111 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319426191 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389110251 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021571751 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332006791 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087270774 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.321760622 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.957066547 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691483822 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955017772 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.690021011 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.305398965 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314516248 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091470391 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330885596 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828683716 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908375208 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32996168 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.775738195 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263240366 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.508965565 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.33959874 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.300643896 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.786030703 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.309040732 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.580846538 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553376672 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246775068 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308511591 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824792696 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.181864811 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.309159453 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304695315 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009919629 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320049388 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585896382 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.321735944 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.469645491 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334624692 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.238493948 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239728294 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.999098948 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309515485 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335640235 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766499819 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.308236253 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336666698 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313251679 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174523392 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561047668 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.320405266 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.861426389 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555157295 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316373597 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333434784 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.309614802 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306620278 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.29458018 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.21187177 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541551487 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318082516 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.529424706 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.233000172 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.615558843 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.318509764 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517849304 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.188411484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.307648642 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548823816 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.040409904 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.320908164 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986194719 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355078255 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315421634 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324700461 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.306145688 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348181239 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395453525 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514086029 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.341764617 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.317666891 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698644265 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342514543 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317584604 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.321602656 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401260713 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.451375714 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.479258291 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.088139685 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868648901 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039482594 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.894632808 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580284918 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.317476744 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31050902 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240252934 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454287436 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.832487186 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575729903 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431835685 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.312442873 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325761773 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302420984 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31198428 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519074782 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575748117 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.171490031 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310103424 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966906853 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.183484583 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310387296 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.513250254 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76397383 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834050864 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429830821 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307701802 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014958509 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595942799 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392338255 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302847312 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895193275 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.316647118 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.978509895 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.309255901 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303474927 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455093103 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552292215 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952300022 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.331461404 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.459263791 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.076902671 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218003418 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56605325 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.747645442 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516149025 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888648106 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998302773 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572998295 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374557993 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510600139 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.433500634 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451016173 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.301832684 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192176538 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305186004 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146634309 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.01373574 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.31390578 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87564465 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58384002 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.307956563 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.303820738 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333840135 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.313945756 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.526725409 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98266941 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529185724 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314988593 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.31052086 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.295462833 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871007035 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576429446 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248094001 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.308977152 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539207264 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.566420607 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330724378 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.757988652 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.016694111 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834679534 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.279144519 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327512998 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318905195 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.992995496 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876099584 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.496122613 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795106106 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964649308 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319140983 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587345617 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.311388259 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306147806 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606178956 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.310441681 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318006732 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523000773 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.887812192 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067044552 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.331070287 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.231987731 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.245364572 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.533206169 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352658743 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244356749 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315028852 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.705077186 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334514752 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436735663 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319312645 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.318610822 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316635883 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.070037274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663785669 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.315125297 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.300198228 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.295630746 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321030377 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408680111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854226295 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326717226 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.98244798 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.658868375 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564498101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.309461227 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.29720483 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.312164244 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309912025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026760733 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279507004 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320027107 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841136796 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.312171854 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.342590845 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314707755 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.52598936 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52146925 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323744756 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519498682 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342132391 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332232231 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.210451033 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.078305482 seconds)
  done (took 1637.728603835 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.323023842 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.334615853 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.31920992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.309702957 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.351265378 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.326086247 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.391335515 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425818397 seconds)
  done (took 52.006683567 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.313293776 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.468591189 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.344377599 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.316109515 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.324296505 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.312383209 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.757913515 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.34073036 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.321670601 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.321944253 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.32134761 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.317330027 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.942144966 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.321932311 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.31576374 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.311881534 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.321857568 seconds)
  done (took 64.89973092 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.280999062 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.61829564 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.868328934 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.339690276 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.340093387 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.316315652 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.75082876 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.325978004 seconds)
  done (took 58.068286183 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.329969331 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.33021079 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.329799125 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.328368696 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.330855459 seconds)
  done (took 7.876033565 seconds)
done (took 2032.415416617 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.317290952 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.320670734 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.316702465 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.318769127 seconds)
  done (took 6.501353987 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.295945694 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.024579111 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.295425287 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.318046375 seconds)
  done (took 18.161309325 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.322894637 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.336013597 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.976777671 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.909313616 seconds)
  done (took 5.115372238 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.065639018 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.077293968 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.061606778 seconds)
  done (took 7.433260317 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.316092243 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.318907901 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.322308818 seconds)
  done (took 20.185547077 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.593095572 seconds)
  done (took 2.821887501 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.462178653 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.511897514 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.63154514 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.652105766 seconds)
  done (took 7.48711837 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.703760796 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.698489481 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.499073952 seconds)
  done (took 6.130200828 seconds)
done (took 87.722733974 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.010493855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.319345719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.523214247 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.982612636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.546080317 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.522861756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.516827056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.949699396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.531910501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.487587022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.981990015 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.546331417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.68575554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.318127186 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.685102138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.31607685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.566960235 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.054305905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.669698896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.903328378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.520767237 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.621068175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.809928322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.68078854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.605010336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.476780527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.211784955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.563508083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.837696393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.23366755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.481541487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.070980778 seconds)
  done (took 188.462352382 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.316768979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.335439672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.316571884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.333234863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.316631992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.318868681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.334101758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.317102235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.317109107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.323508729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.33231354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.316458192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.317470112 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.31711314 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.315997512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.316527775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.336210196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.332792153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.316457102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.318767497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.336563406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.347622537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.318784813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.317985381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.326711776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.318622327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.317145918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.317525331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.318617541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.317794318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.327069146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.32515667 seconds)
  done (took 203.570455234 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.316987647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.348176557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.318675708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.318081544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.32638454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.31981884 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.318630013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.318554986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.333871147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.318338432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.336578642 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.318372314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.318761792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.318782902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.335857816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.333568027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.334699932 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.3355527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.335504625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.319745554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.335499313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.31956023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.32005291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.324639421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.333167234 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.319549123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.319595733 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.322877696 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.31957851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.337932117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.319684116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.320108143 seconds)
  done (took 203.650824766 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.515361976 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.326839117 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.327351879 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.258727719 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.327491613 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.327654002 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.322048768 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.523538836 seconds)
  done (took 14.16366814 seconds)
done (took 611.076017692 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.539249171 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.261769854 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.52576597 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.350502208 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.053386021 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.364921345 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.34821564 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.512127585 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.23140341 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.51647566 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.546365392 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.361402174 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686612738 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.346300439 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.596664022 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.44530575 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.19324221 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.312894821 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.658958994 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.846450113 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.598879643 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.803518116 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.529676644 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.229246406 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.700212882 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.797463372 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.040451017 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.188589382 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.363420553 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.660788767 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.874986986 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.296634791 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.40530485 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.403673574 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.461593415 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.440753915 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.256324444 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.401924434 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.545165048 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.576469052 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.830462823 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.058079265 seconds)
  done (took 90.397905969 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.311868923 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.312761347 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.311973228 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.312955485 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.313370422 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.313006711 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.31156163 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.312234289 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.313919753 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.311677237 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.311689404 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.313740147 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.312704015 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.314191048 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.312544579 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.312744538 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.313474382 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.315702655 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.312455104 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.312794358 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.313571842 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.312626596 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.313628869 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.312573679 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.313291493 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.314423848 seconds)
  done (took 35.375804584 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.333072892 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.578186918 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.746693933 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.345110408 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.331761752 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.337367949 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.408399707 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.332144589 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.336372168 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.335993871 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.482772725 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.334984427 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.368138557 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.757777208 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.335185529 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.33218387 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.332813904 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.332417185 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.58206638 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.343603011 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.428916464 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.334072457 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.408391936 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.342843671 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.356145048 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.334047041 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.338871447 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.915041679 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.352008454 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.483243205 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.084086525 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.411631588 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.851783229 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.765361361 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.089327552 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.340288638 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.334066425 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.487782586 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.337792951 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.334278339 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.409222286 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.334991158 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.743453329 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.999316022 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.35257793 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.334613079 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.931803733 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.504643908 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.569005691 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.344077662 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.767138411 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.338023006 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.336973438 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.336986639 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.567962488 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.343423449 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.336157603 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.930454745 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.359000202 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.409821626 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.337650115 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335928876 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.590796436 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.335448106 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.577295472 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.337168854 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.344611356 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.354317817 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.745569177 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.338387535 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.02902732 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.353557695 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.336928522 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.487203595 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.577696083 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.978267535 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.361737997 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.59403971 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882528231 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.429581043 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.34195103 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.906639776 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.432949219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.340310669 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.339259532 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.339193014 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.336938305 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.384210815 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.409925776 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.958363106 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.026727848 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.954239047 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.430846982 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.358447576 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.338775128 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.933578746 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.35878701 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.337700613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.743889288 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.021378077 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.354940434 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.346066512 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.025053947 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.356659667 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.413747823 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.344165701 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.753356919 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.340095942 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.386001493 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.339126097 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.345770326 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.361123621 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.415010197 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.345786107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.340150583 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.006602347 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.521763352 seconds)
  done (took 176.726112685 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.334457036 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.33344821 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.34320566 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.333702353 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.333111863 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.341054109 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.332249804 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.333009313 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.33858544 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.332506337 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.333617216 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.333755559 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.333948604 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.353288753 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.345805602 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.340459549 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.992435572 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.332847252 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.341955955 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.333364156 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.124317484 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.334251966 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.347892687 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.334140206 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.336790748 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.334016819 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.357394545 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.337671004 seconds)
  done (took 152.149838929 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.341415557 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.878389384 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.358158322 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.466519148 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.365701313 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.338392672 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.465948237 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.396043262 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.360935924 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.338715852 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.339312469 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.627825729 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.343022153 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.834153587 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.522867039 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.490078058 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.834104121 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.359051747 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.339842585 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.339471068 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.468565291 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.347619152 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.628374959 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.88026836 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.359784321 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.88042425 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.327054007 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.34331414 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.341483586 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.88271727 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.357312735 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.630562687 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.416327179 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.403150623 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.899473818 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.850836717 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.850534866 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.483979143 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.350427949 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.341605346 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.34135301 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.326126683 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.883779282 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.361284389 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.344291338 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.873060168 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.361569718 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.344576116 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.349241248 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.342070844 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.399345998 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.419878301 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.654686468 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.890644348 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.435647012 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.363290382 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.469071849 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.703788633 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.346821641 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.836265485 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.327099424 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.887927946 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.362455688 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.329065413 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.343189838 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.349259818 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.487711106 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.470377808 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.837227486 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.360135311 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.835402197 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.504382962 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.342987821 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.34319176 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.346104558 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.890660628 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.859244863 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.504149676 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.472920992 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.529742385 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.336704317 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.345022305 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.330545846 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.419347101 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.347842751 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.891012346 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.854390643 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.362003498 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.346600138 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.346887142 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.3461224 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.511924384 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.911251559 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.43646928 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.829305402 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.656519437 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.637345543 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.347448322 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.402082752 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.364667049 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.640909731 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.348818246 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.401379579 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.767953669 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.64486428 seconds)
  done (took 159.892808562 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.579131703 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.545361172 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.433165156 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.489595361 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.935796067 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.90047596 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.60134408 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.482613119 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.457194651 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.600277701 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.456589635 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.436356045 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.557924343 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.423562831 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.05685432 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.433136546 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.453845145 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.490969387 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.499283818 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.373387579 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.004711281 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.641846171 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.536889122 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.181537935 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.434484386 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.103193778 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.893152624 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.871451688 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.512388785 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.656867437 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.891183617 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.490274526 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.278279047 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.041390995 seconds)
  done (took 64.999229126 seconds)
done (took 680.776732795 seconds)
SAVING RESULT...
DONE!
