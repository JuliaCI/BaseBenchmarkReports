cset: moving following pidspec: 21986
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228020366 seconds)
loading group "string"... done (took 0.549004632 seconds)
loading group "linalg"... done (took 7.646173255 seconds)
loading group "parallel"... done (took 0.170512908 seconds)
loading group "find"... done (took 1.162623266 seconds)
loading group "tuple"... done (took 1.83313243 seconds)
loading group "dates"... done (took 1.249101121 seconds)
loading group "micro"... done (took 0.232329793 seconds)
loading group "io"... done (took 0.7649092 seconds)
loading group "scalar"... done (took 40.744547082 seconds)
loading group "sparse"... done (took 12.893421497 seconds)
loading group "broadcast"... done (took 1.152800907 seconds)
loading group "union"... done (took 13.460348372 seconds)
loading group "simd"... done (took 4.790403039 seconds)
loading group "random"... done (took 9.686212279 seconds)
loading group "problem"... done (took 2.15270819 seconds)
loading group "array"... done (took 22.644487811 seconds)
loading group "misc"... done (took 2.144789621 seconds)
loading group "sort"... done (took 3.465913127 seconds)
loading group "collection"... done (took 19.525824182 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.578714947 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141418862 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149437608 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14711249 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187938109 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156816263 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157784458 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096695949 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01559607 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175305573 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152564681 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522440674 seconds)
done (took 5.273334077 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.253800833 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09390677 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104185265 seconds)
  done (took 0.936519083 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078689795 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14425783 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094530301 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077446153 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095154296 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076714936 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094486033 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076899754 seconds)
  done (took 1.403083356 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08557387 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097107705 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08137754 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096992762 seconds)
  done (took 1.104333468 seconds)
done (took 4.526688703 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737702415 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273214758 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203675012 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463359448 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196460281 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21466078 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686450852 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335985757 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251325376 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100040647 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142520714 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38647383 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137476201 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.700742366 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090120277 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123259397 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.182057839 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460036365 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084222818 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110076524 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117183167 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142887864 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132838799 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09170827 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184173884 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0809201 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194591072 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10858916 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080251515 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286029323 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201089838 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.704986423 seconds)
  done (took 10.986005822 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109943588 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133303507 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097347921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137690082 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133859542 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100227885 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083546892 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096692577 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121362539 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175804462 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113337375 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136741453 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094951042 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080778891 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115607546 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245015686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119229534 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102648387 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101176695 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10358749 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120825268 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113367943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109729427 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091280643 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166729503 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223857821 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1119032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125967994 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096055668 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112016431 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142977186 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142219161 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094825318 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079628498 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172635583 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124625414 seconds)
  done (took 5.186667425 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.082994026 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19063707 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120724583 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170340579 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079671739 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142120462 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094942047 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114322782 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255831515 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.173546415 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.15569666 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175451552 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142763249 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099078439 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097663895 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081908807 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097615773 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.631891858 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156319672 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13417407 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096114939 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103871359 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099348565 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366312647 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085650565 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095783545 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08050855 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093976961 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064476094 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158549166 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099122022 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.139809687 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123248184 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081664281 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13611344 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21721889 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110476196 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134861406 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095547816 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078924691 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17591631 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10456065 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07829153 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121712939 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133301864 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1340003 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096638474 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081275059 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203988734 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097308838 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113078946 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.928246775 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18446126 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091894833 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096772433 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32403034 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098888824 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102367128 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076971798 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281358601 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190355653 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098863164 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0790958 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097061314 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079714216 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398780293 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08046702 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.856732438 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084581834 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106706047 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082418172 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097760624 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103928325 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087521646 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095015066 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100287721 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098206858 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080457405 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097732309 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077752921 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099989151 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106979901 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085314369 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098086562 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147242779 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09616768 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098437752 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128717062 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099630237 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077172371 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130525282 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09894232 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079623887 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132648368 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098128421 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090125814 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100891642 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144029814 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098106531 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07610721 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.163234156 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08027662 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124920221 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098939787 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114249358 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111731184 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098745279 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082913848 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095583818 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076004501 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165596854 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079925413 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097895287 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079729866 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110461809 seconds)
  done (took 22.659082595 seconds)
done (took 40.656109165 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317798046 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104285896 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104240477 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102918393 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100846503 seconds)
  done (took 1.5472563 seconds)
done (took 2.3383419 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289664827 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173527202 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096427403 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167621441 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094181842 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173603861 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159570013 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112019523 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200236183 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095385827 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163338675 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095188253 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075685095 seconds)
  done (took 2.715611489 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095133448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115907358 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085096614 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111702019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075320154 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112288872 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091535306 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117818745 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110265036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084188627 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093928953 seconds)
  done (took 1.883234501 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094291155 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113767161 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081572123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110904757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076709598 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110822059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091849379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116321485 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110443318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084961672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093395116 seconds)
  done (took 1.873995921 seconds)
done (took 7.254392214 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090404568 seconds)
  done (took 0.876128517 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.932498121 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.990436024 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11344778 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149036015 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299548354 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191934571 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.482104974 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125542203 seconds)
  done (took 11.275536676 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.145674246 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086475116 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100282347 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085030571 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106214291 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082807968 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103766788 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099128834 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084793926 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10355193 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084120836 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100209222 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099417632 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083518679 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100185897 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083193309 seconds)
  done (took 2.396042865 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118085765 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117545799 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108717677 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108845074 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085008606 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106218952 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106550306 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087401554 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103062949 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104050821 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08994216 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106881099 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104751407 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07929462 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10712885 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108922084 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084438663 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1071022 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106925199 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090000463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107871162 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095516433 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086448462 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107399845 seconds)
  done (took 3.326739228 seconds)
done (took 18.663696467 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158960761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107800514 seconds)
  done (took 1.059934011 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095760473 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11341251 seconds)
  done (took 1.004018111 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097064824 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097179047 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122248347 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110303306 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079923817 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097408454 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118957753 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078710146 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097585146 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079635957 seconds)
  done (took 1.777429445 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081991944 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109930366 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101463363 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094260118 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105808096 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094593842 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087149663 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100282817 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110109882 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076339111 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102873142 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113888341 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085175123 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117367108 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104647018 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081651178 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10399345 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099501442 seconds)
  done (took 2.571515174 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07950652 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097192474 seconds)
  done (took 0.977504105 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081094985 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094486945 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080293499 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09814804 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093547362 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077068115 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095372175 seconds)
  done (took 1.419911823 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493946809 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136720709 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262620598 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102104098 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120710274 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299046851 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099480287 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082862349 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104103938 seconds)
  done (took 2.541499864 seconds)
done (took 12.148439917 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093234957 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115950673 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110662715 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467399613 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106451732 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099615825 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147768463 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250015414 seconds)
done (took 2.196219487 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142956878 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326016355 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116432937 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067814578 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098805233 seconds)
  done (took 1.415860661 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080296069 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099798591 seconds)
  done (took 0.985412053 seconds)
done (took 3.354905336 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081262343 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096716166 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078781318 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097029444 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077609043 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094539611 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079795833 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096737609 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.079694816 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.096243749 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080058806 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094580807 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077268956 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097579595 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077160005 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095336408 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.130523184 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077982135 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096974361 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080317549 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098596259 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077453658 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096799113 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078129219 seconds)
  done (took 2.977605098 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099687904 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.1000752 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103543944 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086264188 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102852825 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08610452 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103095844 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097651557 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085203749 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100423236 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099758419 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084590698 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100218146 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082926976 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100855514 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100819442 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084968373 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097721645 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08208428 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102269317 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102766532 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08062573 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.1014681 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100763103 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084390511 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101682674 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081089025 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098813039 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101907075 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083724299 seconds)
  done (took 3.648160094 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085206927 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094028944 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078013523 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102219473 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07722198 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097362282 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077286134 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096887922 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078000745 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096060645 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078315592 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096111947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076656859 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09741484 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077414589 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100337479 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107240278 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077854933 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096010752 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078683938 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100682126 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077436398 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096022381 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077227626 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095582442 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07758322 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097322515 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076736241 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098163526 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077134574 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099916766 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080607257 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096533352 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083342934 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100370134 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075909851 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100143044 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076178377 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097072449 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094206207 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078350937 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094503901 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07839534 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.1021227 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078424745 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097120267 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078020957 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096423655 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07787166 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099515216 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076544156 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096683916 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078128925 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097474567 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080989761 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096317878 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095613746 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07832769 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096104195 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078336589 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094637964 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078315897 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097192186 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078989135 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111367545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084208156 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095749537 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078941046 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098027797 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079437407 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097957986 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108289544 seconds)
  done (took 7.21828448 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084089146 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106559935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079347723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098238447 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075004655 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098217093 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098046131 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079157567 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097882222 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083973629 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097320403 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079199568 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098482479 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10738438 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079429302 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097416839 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084878249 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094999931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077479404 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100742259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078299683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100277166 seconds)
  done (took 2.810760675 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209005597 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10650663 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142857762 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10721212 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083085407 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10669287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101686936 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086389075 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102899926 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08171795 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102766756 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10274279 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082510537 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101628816 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100004312 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085097238 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103548862 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08592467 seconds)
  done (took 2.709624645 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092354371 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099584763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10137864 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10019468 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09898169 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083135515 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104999065 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107890426 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083824485 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099276423 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089846594 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101684088 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100598631 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081222744 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101365197 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080859116 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102435265 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079905033 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109155052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104965488 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103782202 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090957647 seconds)
  done (took 2.938900375 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097018629 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101105502 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116839178 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08446966 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094926826 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078797194 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106465009 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080160727 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10739839 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099920085 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081028504 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098084408 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087445787 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099600312 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104331798 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0813861 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101490089 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081102365 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101992605 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076111121 seconds)
  done (took 2.703097974 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.211415848 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101373889 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099828479 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09269134 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101264359 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081328357 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111075944 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100985254 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081260137 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126903685 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101681841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081595769 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110607656 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106864985 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099670713 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091993784 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110057525 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110338784 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081035569 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100802708 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12555986 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081284461 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109747811 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100771894 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081804286 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100949646 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09947886 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087870756 seconds)
  done (took 3.715645078 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081234107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099021073 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078361706 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096250695 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079002974 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09606127 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078331443 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095761849 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080732286 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095621583 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080541902 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0985222 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082757922 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099034472 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08058144 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098993994 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080550918 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097186954 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078255611 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097787984 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080842618 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099379955 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079664453 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097571716 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077977412 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100095737 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077681685 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098286156 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079676797 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097809881 seconds)
  done (took 3.491958516 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090699772 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106972893 seconds)
  done (took 1.02382304 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078537444 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115445127 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078226606 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103545228 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084176963 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101528727 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108947208 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085316158 seconds)
  done (took 1.582603235 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095992131 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110574371 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08156845 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113035529 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109726967 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096966629 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169477653 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102684789 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086266819 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098828599 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112403971 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080111693 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105837196 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081339796 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106142332 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086035909 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098435673 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104132999 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085215338 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098678651 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082117471 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109955796 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082436121 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097081029 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101402551 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090616717 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112767405 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082172664 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104478276 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106787495 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08681893 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093781541 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080890493 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101548219 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078080597 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110560796 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116703805 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084687678 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109991451 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08184395 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110815839 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095751815 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085663777 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107225912 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109661795 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082532135 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100372433 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076591522 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097942503 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083398852 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095441791 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080558071 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09554226 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087247816 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105132723 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109874049 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079848033 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101349219 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083561017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104199002 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086824709 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102663319 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101505674 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081518406 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106973204 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085374478 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11126532 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075016372 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095162767 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099901303 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09221789 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124069785 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.086909959 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102010354 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101078192 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079195594 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104151785 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082275438 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106847419 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105380539 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082732007 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107882943 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08858547 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101443848 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082647004 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109801337 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098648052 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083218459 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098306785 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117565748 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080798877 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098313921 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0791772 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111699863 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084287853 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100436493 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077768382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108422414 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093482984 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083134015 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101219301 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081805511 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111952825 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105403614 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089075357 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11021254 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.086978416 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101257843 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102521912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078840854 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101144772 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083941528 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108160189 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075550054 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104970998 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081388322 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102689999 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108732845 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079817839 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100362374 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088347145 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107237415 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078853884 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097756978 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102283565 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081551519 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104918987 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089516072 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099508095 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075669789 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096355361 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103199816 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081957099 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103652875 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087097232 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105225673 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07476657 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099906797 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104103714 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091288378 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101455031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081840753 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107948289 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100745084 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082126674 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106425694 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084517183 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100209207 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087512465 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103046525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075905271 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105260244 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102899473 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080794276 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105068611 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084866243 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103576015 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08125336 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099688387 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105990743 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082735505 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099750714 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081615793 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09964235 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091151708 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10408592 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095311615 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07959891 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108719083 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07903087 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101670727 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07996515 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104020233 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.080509521 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100154633 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099645283 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083656295 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112575757 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085236696 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102742972 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105724739 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092466746 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102068791 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083120141 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10201175 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101466943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084056378 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111198141 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086747958 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107445006 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102811733 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079200522 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106000004 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088737904 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100874825 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079923423 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101232068 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083950721 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10748637 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104392047 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083105567 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099148903 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082094645 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105389096 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103089496 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082347732 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0996372 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087497838 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100710998 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088004464 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103400835 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112432104 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085267593 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097395875 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084293055 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100778585 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106509633 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078466773 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098288996 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081964465 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101926344 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080501896 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104360917 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07561629 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109513156 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089130996 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102217361 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099101189 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083399109 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109078105 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082692344 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105936624 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084353233 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107942508 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111258804 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082191455 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104029593 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091461247 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101764825 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074584862 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10781648 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098463578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081374881 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100407729 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080265258 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104529279 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090038417 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110437843 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094600894 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084690637 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099948724 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080975437 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096627876 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086479425 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104401894 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082261075 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108845963 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101390803 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082525411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106101536 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.080928306 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102890756 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102560308 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085469633 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101581798 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08545254 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100462389 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084144638 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103998595 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078662349 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103845912 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100189731 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082996996 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106220595 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082111701 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101979193 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084283508 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103245161 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082769672 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103120485 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099626211 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085828086 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101858129 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082254559 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104055476 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077284476 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109642616 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081442376 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109772301 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100548265 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078814353 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106508155 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084897701 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107826187 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081791696 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10304839 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102173868 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081939718 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104476423 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088365347 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100605222 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111426591 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090872624 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102003007 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085087113 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102473483 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083360394 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10191882 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081509359 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10320126 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100472285 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082898578 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105953333 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084998065 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102233903 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084294278 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103490952 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081200021 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103990548 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095187753 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082740181 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10064841 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082699113 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11260833 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083799143 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105190845 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099995859 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084768257 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100797322 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079933826 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11078237 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11016007 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083875802 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109561637 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081191825 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104399192 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111770479 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076847643 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099737044 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080693738 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09950874 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090577633 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102992153 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091456303 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102656437 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080483659 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099270002 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101755738 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081636768 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095991078 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080578224 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105460887 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084744554 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101949719 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082531254 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106165103 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082176744 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120402355 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100994881 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082540013 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103259783 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079184077 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101544415 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080564105 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105502386 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102282124 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081434713 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099279893 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082635554 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102027743 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083463126 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102470536 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083548906 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109819029 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080219135 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105219314 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105259819 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077179855 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104772165 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082039527 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101789088 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.0806178 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106536995 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104986796 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084592721 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111659348 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081078971 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10330884 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081058942 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102258104 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100964799 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082480824 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10213881 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081804062 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103439941 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090340007 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100943735 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103149411 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083031577 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101183882 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090249032 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103735515 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085040432 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109965984 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103900468 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084691064 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109499688 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085562643 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106362515 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101942457 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084981066 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108541523 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081715393 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108842179 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081348527 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103818099 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082477186 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101194231 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099967398 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083529431 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10022064 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089343223 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103561359 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081408577 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102268918 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079486446 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103433648 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105103924 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090620549 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104580189 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085681965 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098206675 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079016975 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104447929 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079110416 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104787979 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105128989 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089484533 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105048142 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08347383 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102043337 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090657682 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109395716 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106280409 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081052869 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105731899 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083574037 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10540979 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083448708 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104425671 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102738919 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087780331 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104062255 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083245633 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11040064 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085421897 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105359277 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083913802 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.1056706 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102227442 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079158025 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103465269 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08550123 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109363519 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085168027 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103651247 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112209975 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082857893 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102456757 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086942207 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103109034 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086136407 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099023244 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083057437 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105253483 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103741913 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079387565 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102813864 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081187179 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105618551 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082286921 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099675101 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112337948 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093113987 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106180311 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081712531 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102245291 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077663012 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099632541 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081887221 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106053026 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104242929 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094437905 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102049952 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08214978 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098846673 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083830771 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106807676 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085648294 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10067321 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097819224 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083541041 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107002734 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088693769 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10259942 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082438466 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10727414 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083796904 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.1015256 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105549275 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080038717 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106756103 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096292967 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104870684 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101809673 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09045082 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111431701 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084185857 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099278166 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08365558 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106836311 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102597203 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085897722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105309327 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098857537 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107459225 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10097157 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082976145 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105693979 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082959529 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112286905 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084214706 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104756092 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107022406 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086078125 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112460002 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085381722 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112444464 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106075192 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087059928 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102324268 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084079838 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101606623 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082486186 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104903077 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08323112 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108488113 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110798451 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08226014 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115072318 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111822556 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088861686 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099171646 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083417837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103278982 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079020873 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105363926 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081093328 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101966919 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081291207 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102747328 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08290719 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112035515 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104601657 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084735887 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103613808 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079712515 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105461097 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085881814 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105576614 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078766261 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104122728 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103807856 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088394304 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107889676 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084186651 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105547723 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084721222 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105115908 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078205874 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111309579 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100972944 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086957051 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103009587 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084498591 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10537214 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087232112 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110895231 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103991041 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086166238 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115690653 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08582772 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101515359 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079833408 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.1097844 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100604595 seconds)
  done (took 57.771916776 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147440818 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080410864 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099973314 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078548046 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113416102 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098662018 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079847281 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10046553 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080346453 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102398196 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0782788 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100438968 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108191585 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124449837 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09236111 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104893794 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077463597 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101426878 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098591728 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080815798 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110455213 seconds)
  done (took 2.933755495 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104761306 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118449131 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115983734 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119374853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089219289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116425374 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114739331 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115008629 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099546319 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111929547 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119488181 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114841821 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090465367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112290669 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111016532 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09269309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119539337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110410819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117039047 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094665857 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114105453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115273544 seconds)
  done (took 3.291993359 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085024704 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10290282 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085294556 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098887187 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082459773 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098948978 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086938987 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102472159 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08539067 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103567481 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081039537 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103765061 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10452061 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079044946 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102975234 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081459525 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150577873 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109231752 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082098145 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106119082 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077143144 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107291057 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099258148 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079701706 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102350122 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08814966 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105699792 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081477912 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104814047 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.0809416 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104707554 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080587185 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105576549 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103449282 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083149073 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101566982 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083864568 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103439376 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078907701 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10140359 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083558703 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100013174 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083825168 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106280212 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080720136 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102749201 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084513039 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104137161 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098565614 seconds)
  done (took 5.530287862 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104473017 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161237355 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085416337 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143666679 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121734105 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113311095 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08676206 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143111358 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103211932 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082046767 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123939935 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120461265 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104093156 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088494173 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111776902 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103433551 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0860521 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104502376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108393001 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083521606 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108634052 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089456072 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120362762 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11964502 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108669624 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081846815 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104103482 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108846449 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096264452 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110519356 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109894248 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089693163 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121352276 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110095069 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081562226 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108133241 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122044233 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106108601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087001565 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101850871 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086065112 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109934353 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110329548 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101210197 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105964361 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108683694 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083247257 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102133492 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117389065 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086436275 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11489857 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120218614 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108555773 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084915941 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109587312 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119796482 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084172121 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103599893 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08644743 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118492422 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102099726 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088907444 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119284037 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107259866 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112630779 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09936838 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109838303 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108435537 seconds)
  done (took 8.195637535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093505083 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112432632 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120790327 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121121645 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091447492 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112201577 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111937089 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090162899 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11260328 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116950705 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110947009 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134015992 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085791459 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115427415 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112009403 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09094417 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111729753 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112242333 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089317189 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113255696 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112104811 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121005336 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089790977 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121828812 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141864347 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106286273 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090859476 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112031992 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121626159 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111526278 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123587224 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090988922 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111452626 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120680163 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12422307 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090373425 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104410605 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110945704 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09060909 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112094359 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105421007 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100877447 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111559082 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106554176 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090715797 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112280417 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120665153 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124552897 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114888055 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096227223 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112444388 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121163327 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110545651 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091007643 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122050104 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147629085 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121582906 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120668921 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111894345 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09929202 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121983891 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129505648 seconds)
  done (took 7.746349894 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106251162 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115561033 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117452205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100098323 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083748943 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109603695 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08207977 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104330955 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112807394 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09453003 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117712343 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109662277 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090758468 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118035286 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109394663 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112577389 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087847251 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109454408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11506551 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109041361 seconds)
  done (took 2.996218685 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092796513 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124888911 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084754346 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113081021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108464991 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090604413 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108820632 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107241705 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085994783 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108615107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095401943 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117949981 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105923863 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090187162 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117105974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111612007 seconds)
  done (took 2.553810188 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094819151 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117967347 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121433607 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083597987 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105163207 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079526229 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107069255 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101073054 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080730428 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124931329 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082754394 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108964152 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106051951 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082756859 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101829146 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087492252 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102434851 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081037855 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106554788 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119647403 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094291931 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105566424 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106150738 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087113333 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106121019 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088994144 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108675107 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103365362 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082595112 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105876567 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083451262 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113521935 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101526009 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083988156 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103476786 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.0818956 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106421304 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083883643 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109512986 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104886654 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08320111 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105440916 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084222482 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10748644 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079670355 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106800369 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079821096 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11287875 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103612749 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083614494 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106971522 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085647342 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107884686 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117575745 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08771944 seconds)
  done (took 6.303703226 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098449691 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110011647 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080085848 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104336603 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087792862 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10931713 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10850266 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087669697 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107592151 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082319775 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108610148 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088354553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109275736 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109299757 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086978129 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109764468 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079242407 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107466557 seconds)
  done (took 2.67449141 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091029225 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105577635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091834516 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107022998 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083280828 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109578713 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079160744 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106067271 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103472837 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086158475 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105266026 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087255334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104409309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086520914 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106974715 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083904246 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108929264 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103690421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085904613 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101605024 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087868041 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105113087 seconds)
  done (took 3.028477376 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118729834 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125928038 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091029325 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231985187 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104393886 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13308231 seconds)
  done (took 1.704419862 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109482915 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121181135 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106342792 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106316667 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115429761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085325536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108590369 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108291955 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117567706 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100146331 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109115312 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119638578 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118283455 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095785733 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11488465 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114776683 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107418527 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08780858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106938339 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127924396 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086242528 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118538737 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107933124 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08633326 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108618914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118970665 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118017867 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122277511 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087714908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118461055 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114379953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086881514 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118828193 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122441272 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108637781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097823929 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109100853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128899842 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114134021 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096497708 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110165338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114978637 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097448025 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11546563 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118822373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107756677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092600169 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109660549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107469794 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135415902 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092738659 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118359108 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115379731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119513584 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096904309 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156234162 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102295616 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118126432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116452656 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12338968 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116433357 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093993355 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118921676 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123813172 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115115081 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118414284 seconds)
  done (took 8.212552137 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102445681 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127776582 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108717182 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12271194 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097182378 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108907737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109125171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087418643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110280415 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106932086 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15262558 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088477219 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119425944 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119249782 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086454396 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110224127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108220224 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117217506 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08623505 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136155288 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109495419 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117650319 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117207401 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096647874 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123607647 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115207174 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107688303 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088146207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109084981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107557869 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093575227 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109832895 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118295104 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085368478 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11927178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10898118 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086253432 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115203461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109321022 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114867997 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096464618 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128533161 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110003909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107858069 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102002469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109818975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108830107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086199841 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109454582 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10729084 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101127763 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123648376 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123712756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118027408 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107975955 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087379295 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110006514 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108765708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087621208 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116152025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118477076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085986894 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134472057 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109946993 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109482766 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118067715 seconds)
  done (took 8.094227012 seconds)
done (took 156.663000998 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.235393741 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.230160031 seconds)
  done (took 1.370595101 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097752717 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137291037 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095110779 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171026298 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106891801 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119638182 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138893633 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096527178 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108002421 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084927059 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107626349 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086538664 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172503116 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084829312 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10801585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10801732 seconds)
  done (took 2.734369283 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200243258 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256393048 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101058627 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107242351 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087394515 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111746251 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105899691 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091029399 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110477469 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084982572 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109503882 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085692309 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10671547 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085448305 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112125764 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087426021 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107266705 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08653297 seconds)
  done (took 2.947208643 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112564867 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150685375 seconds)
  done (took 1.179941496 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118603573 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179295891 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317025751 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15556173 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10580009 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127121208 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156797946 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130872077 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196759877 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123117638 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121724976 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096354754 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140849509 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116295678 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093752234 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119088863 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142327389 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09152852 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116272346 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115712234 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115366448 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107617409 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114611879 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09319777 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181315283 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120729658 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083961612 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107751071 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115667054 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094730484 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11485825 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125221004 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097594197 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179675199 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101749059 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177324226 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097254225 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112101491 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114203335 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092010725 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119722034 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118065557 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103778416 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118796203 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083448369 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119666611 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106062587 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085739797 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115078306 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096162213 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116079032 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113988523 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15498278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118984196 seconds)
  done (took 7.594523128 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795371319 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156229714 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088936914 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883584114 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135010682 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102211032 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778473525 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110551731 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253446289 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756655313 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133039556 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120365661 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202163509 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257695574 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952521301 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288891493 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.687119847 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10175164 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150407477 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151550638 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117827236 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134315674 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108698265 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426514273 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116151866 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112056192 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095616814 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119579519 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157748997 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125173055 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114100426 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174908572 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24609847 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202811791 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092460503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112037755 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111084583 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168903629 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263735277 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188314934 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17885219 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109080614 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108816341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100022987 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132090429 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107369049 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160959284 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171170678 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168219568 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114182903 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118794958 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096053757 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120933653 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162035598 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120996112 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318472587 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306790181 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087758836 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121409218 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126269571 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259473301 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099862177 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222368857 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138799808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208542633 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089034611 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803095267 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167066279 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111444903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094514218 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11964835 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115824728 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097767096 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166445037 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390348673 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12301041 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114106393 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087849943 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224283346 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123537135 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088889663 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16095553 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117929068 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120167477 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100900805 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122668231 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166029371 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250819926 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099353166 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120210201 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11586006 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101817821 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117431869 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212382771 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21722492 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160015508 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233097659 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098819719 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184821807 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16795162 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119047853 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171271699 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119153247 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100852944 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122636067 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214641531 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143473247 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123172448 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091905174 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118884512 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147443526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126475694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095328144 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191602534 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.453772021 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16695812 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108796054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12743718 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096112482 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180953184 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094332434 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25589451 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121159276 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167982574 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118967808 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085995361 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120644233 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161746961 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121833554 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120258442 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099927445 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118607609 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232255434 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215217661 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121219092 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217730181 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181918201 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118438498 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169301098 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122367126 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166486706 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12098835 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119818242 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094444241 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794787306 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123596092 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09730165 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116317226 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186332604 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110853541 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101884269 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12511911 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107934321 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765474184 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126623485 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12078769 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10149732 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117805108 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120036176 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094912347 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116080884 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160847034 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226245866 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119767294 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118649026 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102765459 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158837218 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117562593 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125194488 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124077924 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103498759 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122881284 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114993786 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101236458 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19018128 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161497975 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218519402 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565588933 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112775778 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124340858 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224372422 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089977598 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287167552 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119626738 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201235957 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184952513 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097791605 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308907803 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.1843313 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185852788 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104090757 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194691285 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087556098 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118342651 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163154392 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111503103 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094251792 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182833647 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103863677 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123070831 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957954422 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088649936 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245278603 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087201892 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169213729 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117548868 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119854174 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293966705 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089483471 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127785645 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163662537 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116004246 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123530521 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.713349643 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12528567 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09851683 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118549636 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220322575 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162672191 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120570988 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119050822 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096953105 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183965032 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20647981 seconds)
  done (took 43.78120194 seconds)
done (took 60.516894804 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278974164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216628285 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.271024268 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169727597 seconds)
  done (took 1.954035255 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171111214 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150416598 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119695043 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108249165 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151205886 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083569544 seconds)
  done (took 1.726232036 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360170283 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274528907 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241067504 seconds)
  done (took 1.820733209 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317676138 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248488605 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475884528 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325334297 seconds)
  done (took 2.40818816 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209042406 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133502349 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111154259 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103524683 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199505809 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246410866 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142926246 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201936733 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09771066 seconds)
  done (took 2.438709301 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197783769 seconds)
done (took 11.490783747 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.241680845 seconds)
    (2/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.186416351 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.2190937 seconds)
    (4/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.216476074 seconds)
    (5/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.262538815 seconds)
    (6/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.157627764 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101134849 seconds)
    (8/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115575423 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096777314 seconds)
    (10/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.224580416 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118867246 seconds)
    (12/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.233806891 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.192491117 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.139918083 seconds)
    (15/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.211751391 seconds)
    (16/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.221298086 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.145165983 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.084941653 seconds)
    (19/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117513418 seconds)
    (20/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096982351 seconds)
    (21/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.277141587 seconds)
    (22/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.205291112 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112739401 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185600789 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.216247385 seconds)
    (26/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127205206 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093755514 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195177286 seconds)
    (29/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11640083 seconds)
    (30/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182123849 seconds)
    (31/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119069867 seconds)
    (32/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.218877919 seconds)
    (33/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.22105304 seconds)
    (34/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095000736 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110412639 seconds)
    (36/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121590803 seconds)
    (37/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092460125 seconds)
    (38/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.116496519 seconds)
    (39/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093078895 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116017068 seconds)
    (41/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098281011 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134743798 seconds)
    (43/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136888043 seconds)
    (44/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.149211896 seconds)
    (45/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113629639 seconds)
    (46/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.122690997 seconds)
    (47/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148091013 seconds)
    (48/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135913301 seconds)
    (49/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.118996412 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.133449755 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.14946835 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.204069231 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095687563 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136065738 seconds)
    (55/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093855904 seconds)
    (56/286) benchmarking ("sort", BigInt, true)...
    done (took 0.21846918 seconds)
    (57/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172611263 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11824783 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090845225 seconds)
    (60/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121483811 seconds)
    (61/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200387526 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091654917 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067677791 seconds)
    (64/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.117923105 seconds)
    (65/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.113972092 seconds)
    (66/286) benchmarking ("sort", Int64, false)...
    done (took 0.087439444 seconds)
    (67/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107286104 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116302169 seconds)
    (69/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173051043 seconds)
    (70/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109293491 seconds)
    (71/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186873399 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.219180994 seconds)
    (73/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.190723023 seconds)
    (74/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.14140584 seconds)
    (75/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09318961 seconds)
    (76/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117298872 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066869865 seconds)
    (78/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14470198 seconds)
    (79/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095844551 seconds)
    (80/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149860644 seconds)
    (81/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154056822 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113202009 seconds)
    (83/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092456052 seconds)
    (84/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.168884178 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.193758847 seconds)
    (86/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.173501451 seconds)
    (87/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.121269327 seconds)
    (88/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097209388 seconds)
    (89/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.14699423 seconds)
    (90/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093463446 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.19583368 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110197572 seconds)
    (93/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.168998344 seconds)
    (94/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078818861 seconds)
    (95/286) benchmarking ("sort", Bool, false)...
    done (took 0.180408278 seconds)
    (96/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093853397 seconds)
    (97/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.153838003 seconds)
    (98/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117333076 seconds)
    (99/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099971028 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123529579 seconds)
    (101/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11252115 seconds)
    (102/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.153220357 seconds)
    (103/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115422945 seconds)
    (104/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094627727 seconds)
    (105/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.074546325 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117589685 seconds)
    (107/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.065684382 seconds)
    (108/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11846182 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161252419 seconds)
    (110/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122825436 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168218215 seconds)
    (112/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083882413 seconds)
    (113/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17679532 seconds)
    (114/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12055042 seconds)
    (115/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.13123719 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.213144175 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110704928 seconds)
    (118/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092888842 seconds)
    (119/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245228746 seconds)
    (120/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100862812 seconds)
    (121/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.117488859 seconds)
    (122/286) benchmarking ("sort", Float64, true)...
    done (took 0.222258721 seconds)
    (123/286) benchmarking ("sort", Float32, false)...
    done (took 0.149644952 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168043487 seconds)
    (125/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.1361106 seconds)
    (126/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.074765716 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091373974 seconds)
    (128/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093534287 seconds)
    (129/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118505847 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099720514 seconds)
    (131/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.155553633 seconds)
    (132/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068936158 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.19555696 seconds)
    (134/286) benchmarking ("sort", Int8, true)...
    done (took 0.214059757 seconds)
    (135/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.141912621 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088018633 seconds)
    (137/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.15759889 seconds)
    (138/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136749611 seconds)
    (139/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077649925 seconds)
    (140/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08544194 seconds)
    (141/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0931358 seconds)
    (142/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.070376502 seconds)
    (143/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123126266 seconds)
    (144/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087337243 seconds)
    (145/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120412958 seconds)
    (146/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09190545 seconds)
    (147/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121921864 seconds)
    (148/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.214776769 seconds)
    (149/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.06655369 seconds)
    (150/286) benchmarking ("sort", Float64, false)...
    done (took 0.172878816 seconds)
    (151/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173743804 seconds)
    (152/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089013942 seconds)
    (153/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.09066584 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093647752 seconds)
    (155/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066032877 seconds)
    (156/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112208778 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090980392 seconds)
    (158/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185685608 seconds)
    (159/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187831615 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109465175 seconds)
    (161/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067970789 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094827268 seconds)
    (163/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.092200912 seconds)
    (164/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068054139 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118224795 seconds)
    (166/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.144738352 seconds)
    (167/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173984035 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118796124 seconds)
    (169/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069090791 seconds)
    (170/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.094739388 seconds)
    (171/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091645688 seconds)
    (172/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092135247 seconds)
    (173/286) benchmarking ("sort", Bool, true)...
    done (took 0.212996351 seconds)
    (174/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109935456 seconds)
    (175/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065994435 seconds)
    (176/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.337082355 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102185146 seconds)
    (178/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.143908954 seconds)
    (179/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.185232774 seconds)
    (180/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08758643 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137340472 seconds)
    (182/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093160618 seconds)
    (183/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120754958 seconds)
    (184/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.140254154 seconds)
    (185/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091094911 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090462863 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110253709 seconds)
    (188/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066740532 seconds)
    (189/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100218218 seconds)
    (190/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097604727 seconds)
    (191/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.088616944 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159656798 seconds)
    (193/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119060251 seconds)
    (194/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09045752 seconds)
    (195/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091018927 seconds)
    (196/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085142241 seconds)
    (197/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108757687 seconds)
    (198/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067143842 seconds)
    (199/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119612223 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085369163 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114327909 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085648063 seconds)
    (203/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163550529 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084826863 seconds)
    (205/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112736773 seconds)
    (206/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066205026 seconds)
    (207/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089871355 seconds)
    (208/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084584646 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.084248488 seconds)
    (210/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.094837535 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066613711 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116724712 seconds)
    (213/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067089511 seconds)
    (214/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067790676 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091802723 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093256015 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090495094 seconds)
    (218/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067288649 seconds)
    (219/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066380812 seconds)
    (220/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.105850692 seconds)
    (221/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087011565 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135280531 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085081513 seconds)
    (224/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091724553 seconds)
    (225/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085401204 seconds)
    (226/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111179651 seconds)
    (227/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066886396 seconds)
    (228/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.07560393 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092735071 seconds)
    (230/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092643539 seconds)
    (231/286) benchmarking ("sort", Int8, false)...
    done (took 0.188725479 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138556589 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116367998 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086069227 seconds)
    (235/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.074634614 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110895063 seconds)
    (237/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134326957 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094789819 seconds)
    (239/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092139381 seconds)
    (240/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08727307 seconds)
    (241/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116870219 seconds)
    (242/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086770297 seconds)
    (243/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111190404 seconds)
    (244/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098780194 seconds)
    (245/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115729932 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179531156 seconds)
    (247/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067395508 seconds)
    (248/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066748793 seconds)
    (249/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090509585 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085619987 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109230191 seconds)
    (252/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078013927 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066754193 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110900385 seconds)
    (255/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.065936568 seconds)
    (256/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09242236 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.092911679 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110434768 seconds)
    (259/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.101944864 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110370174 seconds)
    (261/286) benchmarking ("sort", Float32, true)...
    done (took 0.221640632 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093394163 seconds)
    (263/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115382766 seconds)
    (264/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087748927 seconds)
    (265/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117294475 seconds)
    (266/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066805884 seconds)
    (267/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117025399 seconds)
    (268/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128337309 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089811699 seconds)
    (270/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065923939 seconds)
    (271/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092306333 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091473112 seconds)
    (273/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090627896 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086333569 seconds)
    (275/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066493052 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112061141 seconds)
    (277/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066241001 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11599302 seconds)
    (279/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067481003 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109625884 seconds)
    (281/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088344049 seconds)
    (282/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092723581 seconds)
    (283/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086124096 seconds)
    (284/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066796081 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138426846 seconds)
    (286/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066309266 seconds)
  done (took 36.114109235 seconds)
done (took 37.065819183 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100289543 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149273072 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094764974 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136905165 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124462984 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091571193 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119326088 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096231889 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125170051 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124945414 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097767954 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093893266 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09831916 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120773124 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094535666 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139213726 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123652956 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092755209 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119433023 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084259149 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119311513 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085007045 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112960406 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069246356 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123062052 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092696383 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117755437 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120337992 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08898125 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109864535 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090386257 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11772112 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08633669 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124595916 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092051645 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119564742 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095167198 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121591502 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087896368 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112074406 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117408671 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086536742 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11666568 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094145635 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115687069 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091224606 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118598932 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097999828 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139341643 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114534953 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09568927 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119941 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095084249 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118134777 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089189852 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119312632 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089448456 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140393984 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118926281 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09080315 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118172281 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094868292 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116714011 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094256763 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120642231 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120366438 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098081649 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116382173 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095980936 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117039549 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085814322 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119618391 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089973942 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.1113575 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095101618 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122193511 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084757621 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117913953 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092578999 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116709421 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109807934 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089299266 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11178613 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093269161 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112542885 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071098969 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089867446 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117616862 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.084603078 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121264716 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116984043 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094152851 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113085839 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098751511 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110961912 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091157238 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111955752 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086597768 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113800905 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089913522 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111207612 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089410347 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120766807 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087450059 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118091143 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096315814 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111244395 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116258974 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086407516 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109265752 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101193524 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120812987 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085662262 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116579944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085352208 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119295873 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085921667 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112074279 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085705019 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111547333 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091441578 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111721359 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088482782 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119408145 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123071258 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087706707 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113096078 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090853073 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110235859 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093098964 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11047519 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086648987 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112638166 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078282458 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112413316 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088610842 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117871339 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089988451 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119282031 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088793005 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120674474 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09022282 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117094803 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09120763 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110755695 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07372085 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116130508 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088930266 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113313527 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086154387 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112834627 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085741537 seconds)
done (took 16.954510183 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087691102 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183654517 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150675467 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141584992 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105748416 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112844942 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121451925 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117991945 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114948161 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141815113 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108988818 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132390155 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147923627 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085614269 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112227221 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090604979 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114120386 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100345797 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146342526 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132778422 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162416716 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085090044 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146889212 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135812344 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119294307 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114558661 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112505707 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090903389 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115290923 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10119805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13350659 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113011098 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088984222 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133512852 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103199137 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120725591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085426419 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120454731 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085249391 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113012726 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140896034 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131611784 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093239586 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117049563 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091235228 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114430369 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088866985 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121255713 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095959274 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117491145 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124794004 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155506708 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09063412 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122074061 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085215344 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12310077 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120674943 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090509863 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111862622 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090110363 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111280657 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090598671 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127220937 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14018539 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090860271 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121933671 seconds)
  done (took 8.636725117 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10454516 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140200028 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104229444 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13078618 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111800758 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087912126 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113216493 seconds)
  done (took 1.804943589 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089320719 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136771546 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110727411 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138452003 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133615011 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109141885 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12456173 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.086779839 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132918846 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113629331 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109139003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151724097 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089330607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121756287 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13814465 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087602312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137800086 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087213059 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11805269 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13562451 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091375655 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134618845 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089383809 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11455389 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101085407 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115310978 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162423093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092875361 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115499254 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089994115 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112166268 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16555267 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100417185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125795298 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112413026 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103784859 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128409216 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08566897 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129520866 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10938459 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128108056 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113410581 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090087025 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112016846 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092759345 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123586574 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089436704 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114254867 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091106576 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133696659 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088139207 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128288273 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087581096 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118644504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113989207 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095863953 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123027755 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089542373 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133933571 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089001505 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131065773 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129022235 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103228318 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130774546 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09069105 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128279696 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.100938348 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118448697 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088057487 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118515678 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129461257 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086525361 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115131177 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099250254 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115405498 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110650969 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13794718 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114801557 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098985773 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114803699 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08900266 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114566133 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110663399 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120608257 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087675448 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119650297 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090560906 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113029133 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0866484 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118917202 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110637252 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090543913 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116306128 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090216396 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116190457 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105067405 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115170969 seconds)
  done (took 11.862033608 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090433208 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113780788 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093223961 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113759343 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089746271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114846234 seconds)
  done (took 1.636627261 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114092082 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118285688 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10242574 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121912486 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155680993 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128260771 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104666345 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124684727 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106276636 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128235659 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129233829 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103433969 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13616355 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120511736 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103760369 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120541586 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128064269 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100329733 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127403333 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09478564 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136791858 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120975086 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095966799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132212747 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117842268 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095981934 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125654897 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101259291 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12780927 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122872375 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096017111 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118185702 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094234881 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123974066 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130641387 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094699714 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120932417 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118311654 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099755303 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118847419 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103009962 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122725036 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127032485 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093655038 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124113842 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119862626 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093562544 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124875011 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102335122 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119474336 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11884524 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09429466 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118516297 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092815904 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12252459 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122970387 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.092976564 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130449457 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119461489 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096880154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117829419 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092686721 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124170009 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11743154 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104496813 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119864467 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094396128 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122925703 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121464673 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095499243 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119913952 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092410083 seconds)
  done (took 9.247286416 seconds)
done (took 34.193517336 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.702237071 seconds)
  done (took 1.720882376 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.837380989 seconds)
  done (took 1.858490945 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.78909135 seconds)
  done (took 18.836886156 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503001499 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.592977798 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.000552503 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18006072 seconds)
  done (took 3.297219946 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.978253988 seconds)
  done (took 2.017037549 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284539424 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232213442 seconds)
  done (took 1.541874239 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.792881037 seconds)
  done (took 1.827630235 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.371123884 seconds)
  done (took 2.396493289 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329760429 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183625426 seconds)
  done (took 1.548588261 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54771452 seconds)
  done (took 1.582362274 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.031758139 seconds)
  done (took 8.072485154 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269116811 seconds)
  done (took 1.314160416 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303106831 seconds)
  done (took 1.340780059 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.653662235 seconds)
  done (took 4.693444839 seconds)
done (took 53.077935915 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099461539 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126735552 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10179055 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124143465 seconds)
  done (took 1.485061069 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100673357 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121421528 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09902536 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121483148 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125668204 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096158644 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122974345 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100276636 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121948787 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095356995 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122103164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119166985 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099218086 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122884685 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092994575 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124197319 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097256136 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123040282 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124229895 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095798876 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119894847 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097139253 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125528067 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092795719 seconds)
  done (took 3.70336965 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10065905 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11914618 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.0963342 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118136749 seconds)
  done (took 1.481222518 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100115805 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143433736 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138238514 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099832597 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142058093 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135151924 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091717769 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116843883 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094299707 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125741676 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089795944 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150305524 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137447002 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098097337 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128328139 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087227063 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11805511 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13657629 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098878069 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127100655 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091318785 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126304321 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089907748 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140224903 seconds)
  done (took 3.849118649 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169881444 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128659645 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138406788 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095051269 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1612822 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140862722 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087684554 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141580103 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087052175 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132073525 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117206641 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133668541 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128680973 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087218245 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.1141234 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086237192 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129609938 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12837047 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089889982 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127826009 seconds)
  done (took 3.474405164 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097585719 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116659582 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088261623 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115882772 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.097869711 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12057699 seconds)
  done (took 1.685514765 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091666633 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113378476 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089893731 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114141423 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094882531 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113876004 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088715691 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114060856 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089201755 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116897563 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089298702 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113546264 seconds)
  done (took 2.278063458 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499734141 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118932322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119785944 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088926457 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120859336 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08907586 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130395356 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091384506 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141104279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08796073 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116936836 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089487633 seconds)
  done (took 2.742485554 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233567995 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126637784 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284832063 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369139476 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157492977 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176307681 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280605694 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163842197 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225010739 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16576798 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20260607 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22405872 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151053443 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19064183 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138521617 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144279621 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20484492 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246331857 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153183389 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206998711 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226605319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167386589 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180493256 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150312488 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138529313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170529411 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093131223 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131085416 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23305501 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17537688 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214531553 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161377737 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145446883 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208683507 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252465732 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221185311 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284189018 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137002886 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148925076 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168732479 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266045157 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13901409 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201198357 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153552997 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131251175 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217495286 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167578583 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176160134 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15265488 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138575262 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195602607 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238060684 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190955641 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13833809 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303209436 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150911729 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.198785539 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193317927 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250279287 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200171703 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210876654 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094931098 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187662433 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221132093 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184505786 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173115417 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.205360383 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119200004 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225080586 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187289734 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164144764 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219824734 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185001907 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140405162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168306471 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170964447 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169938293 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25636314 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20902032 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09444528 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166906963 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148493656 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132716408 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192664503 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096997296 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238787829 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142030144 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133596158 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241282495 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159087517 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159578614 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199323471 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229191994 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148616836 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082744103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153206099 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156164749 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191129732 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139580354 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158897162 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161155673 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130678753 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183242919 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124429898 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183737846 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117420845 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172655976 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181165293 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126803126 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159352394 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150478058 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125000616 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200263655 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198647744 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141437278 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104359322 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236959837 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177211681 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151630727 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176224488 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227648039 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117004924 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149126328 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226553403 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215465045 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140334603 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227671147 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155633918 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108575703 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132693883 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182135525 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15447708 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16087275 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132967308 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181904957 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231556471 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098976854 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139570966 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191128743 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133622472 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131991062 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161555625 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147337089 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110795528 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151735923 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151950906 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207592914 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179020222 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152679017 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165376459 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152632856 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252090561 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140345505 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124541313 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149811903 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121212536 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193364023 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196083273 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131059509 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229086494 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170814076 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202991193 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170102156 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135815896 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177794481 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129359788 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091915986 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22092987 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166701183 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16008051 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194995948 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226211232 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181283491 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180890024 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198480273 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173897334 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163644137 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15651284 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112234989 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159970909 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169833175 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124828176 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144107099 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132951932 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120386344 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141583474 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133987617 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192834141 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197083397 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188921729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161314494 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149676098 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180287984 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128190958 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172599719 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177793772 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147285688 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197462635 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221645064 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186219823 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144074749 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201114613 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121453574 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095540088 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142112919 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168906817 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134428077 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135420487 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164176737 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181068862 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179937253 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174723657 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239485435 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172456297 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217366822 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095348412 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169615328 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184905896 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176537916 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193437811 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143751652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149961906 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17997947 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158838704 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253560469 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167640732 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174962176 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23506774 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122985012 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132294833 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15265794 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191639538 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152969607 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175570942 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146922132 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141201068 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162625299 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133839851 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160007853 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182429959 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162458632 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218011116 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149397619 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186582878 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126597949 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163995649 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158560911 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164766637 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082311804 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174191953 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232337376 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148458177 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169351742 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188158904 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132056838 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310087094 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243401099 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1969057 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137203351 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156066405 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159848732 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163485248 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172011103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179473719 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159200692 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188667586 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158986065 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136427452 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112529159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149431826 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15023953 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131441124 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148057379 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177304723 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138851631 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184699031 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163708351 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159431977 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17220365 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150259579 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143156593 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12125327 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244043626 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183472852 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239754372 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151576734 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179501383 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20511197 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127312796 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132361747 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10501612 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178077054 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1369299 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2201452 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188086184 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234691816 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182833875 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194074341 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139280124 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.090612339 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157228459 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171210146 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23585788 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154292981 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158981622 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230232771 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119108642 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133443338 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177527292 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294597323 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148120765 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223242593 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08084864 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280508816 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12833633 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104171071 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164013034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235861063 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135549554 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.164455008 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19618092 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171536235 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164346167 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147880997 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19087341 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216612439 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230232058 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179965567 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134504686 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156505966 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17696456 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19149865 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157553542 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141058887 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231433247 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196401653 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196911432 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142804038 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169164568 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169423147 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159044769 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214933819 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107509935 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235252341 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105609475 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223580307 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152864338 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144663519 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176526477 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188494142 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144454643 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187723281 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213259826 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106280687 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134633634 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169350308 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209332035 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156980961 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100446551 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179955089 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12677477 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192465573 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259442917 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136485253 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156544483 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149544976 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108013745 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156082916 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157287531 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142088322 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166289007 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204860619 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135873731 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191370221 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233221674 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1708324 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173697063 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145956015 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693556016 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13108574 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194551774 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15955265 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233616775 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121114339 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202020725 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130207099 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195782832 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196983931 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161335983 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231739986 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193747553 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208069037 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104069285 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157196897 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163764767 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144761662 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15202116 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168686026 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159232085 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154910545 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178035567 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199562988 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107168729 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141741469 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1984268 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160473773 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210677125 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179643801 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110879008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173289792 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218623036 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133327688 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179560786 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235777088 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114446947 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15353585 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134923942 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158071667 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26223859 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096846848 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234018143 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185517674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160359779 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16921305 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148000048 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221241166 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157194362 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187907334 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147735568 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160332706 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15644503 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109864071 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13180491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156875899 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167862246 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149956186 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159061758 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140192037 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222522641 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095385456 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145522328 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293272631 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221572831 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213769258 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137173733 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136652848 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162715957 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151004204 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177246265 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181326902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.1372446 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107378172 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13805908 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160459421 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112958212 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157233283 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19610163 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166635188 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237244652 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134989629 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249701947 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141665953 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156635857 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087253795 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13401995 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150891994 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146525979 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159405512 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193349116 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26866862 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148933369 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104313493 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150111608 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127843533 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135848869 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164931029 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164982373 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178397293 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146157375 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081167427 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157340889 seconds)
  done (took 83.325226565 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175638468 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134882024 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149435679 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204094933 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178646471 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270110623 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211507666 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254718263 seconds)
  done (took 2.719227444 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092896544 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148295391 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157789839 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133186197 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091348348 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118410274 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34680862 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132355894 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.1181017 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12052834 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174889092 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093465712 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.555583197 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090271111 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118477659 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109268257 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091638685 seconds)
  done (took 3.828550303 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476200978 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.741572472 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.515952958 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.0971123 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.282797819 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112602443 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.875532588 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202195614 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116979247 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495035119 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.781572237 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161867759 seconds)
  done (took 19.006084945 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114872462 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137049142 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122165754 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153124891 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.14097316 seconds)
  done (took 1.818443585 seconds)
done (took 132.431473255 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103914893 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405294237 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070867665 seconds)
  done (took 1.657407449 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10841674 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136960027 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107762284 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137596169 seconds)
  done (took 1.645607197 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09829822 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126644902 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109081075 seconds)
  done (took 1.483879112 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325126464 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.19079427 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.171581645 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106015993 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129358621 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103885316 seconds)
  done (took 1.496779478 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097199013 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127380476 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097604874 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130797057 seconds)
  done (took 1.610867206 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094974714 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070125486 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101205479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074792981 seconds)
  done (took 1.494023153 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114189605 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13260817 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102823428 seconds)
  done (took 1.508427077 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.12953096 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140265758 seconds)
  done (took 1.428939242 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105820917 seconds)
  done (took 1.260012085 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117421479 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169487665 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189413665 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165291044 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.237097849 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165839289 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141254646 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114007563 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131237085 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144218994 seconds)
  done (took 2.733903456 seconds)
done (took 18.258697986 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103028484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.517681719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41217055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116963385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722332778 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379104518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.10274812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146275597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164894626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092080863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139505965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670718654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.056590962 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.473328763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009746574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378028845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674258014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121897885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121607103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094125873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.08780799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091672428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121896007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090924381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702959566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424769505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094953446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376220131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092407112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126922265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38167778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123452257 seconds)
  done (took 17.360526454 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095625341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173222398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097554831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13828521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123802439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09401335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124477721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092532822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179219666 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12421872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109806691 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122458064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12509654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095282286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141535908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091252437 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125737264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091951811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122873147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120664519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11313321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120299752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09300002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121499227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093631551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13596845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093471795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121820009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11989459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098739471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127838366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093582023 seconds)
  done (took 4.88156539 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140272063 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181953839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128664226 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126188289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168517573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12423504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199019835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11730758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182970409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123508181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13883678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092577347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156928401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092621985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143001695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121008673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095782241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123235502 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092229288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124326059 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13941058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093052706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121749537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092929538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122876958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106280772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124581891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120882806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093862429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125832903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099249284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123292366 seconds)
  done (took 5.203617849 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097243301 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124983597 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108490685 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13861702 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094129232 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125789269 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.095582904 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124976808 seconds)
  done (took 2.073257082 seconds)
done (took 30.674334977 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111072324 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126631583 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106077832 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134466233 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101297608 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131863411 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090071827 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134579443 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131791968 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102376063 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136984177 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091964067 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122391069 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091219352 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13436655 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096186475 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132719334 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100788403 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134109306 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131696051 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094092178 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132261001 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102468474 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13288048 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103601972 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133670119 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135976074 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098852159 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121714058 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094760086 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124983386 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103272444 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123078113 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104596537 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.1265267 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09824256 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123777076 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093817408 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132915068 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132180585 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099948916 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132157435 seconds)
  done (took 6.044229011 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10782941 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139006128 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10524922 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080219955 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118263261 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079852541 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137845055 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078279307 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110454497 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108633164 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073264451 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107016616 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077690428 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101166741 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07734311 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075297328 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108352893 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075457423 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075773842 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106077597 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079587187 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072018455 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108909706 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077783072 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073475544 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110235246 seconds)
  done (took 3.629205276 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100485787 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135277831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112650213 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18322332 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160031293 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09819843 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132751456 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137627844 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108252789 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120401117 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095934826 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14936351 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109150802 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12920631 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090424632 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137753158 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135256151 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093619757 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127219543 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11303588 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139424596 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10273074 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143417633 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133024777 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093017142 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122287439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096276506 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134871313 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096541676 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131629672 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09497917 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125611702 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122754748 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104517133 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12531997 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093773338 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142014564 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100909771 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131038335 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091296978 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.125637076 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120763505 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113573927 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16824762 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090022769 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129961962 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.097435023 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133408353 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121203197 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110026817 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131098321 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091322771 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125043414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090985011 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121317477 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104875866 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12469377 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094050002 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132182585 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123449575 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106181085 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124833563 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107903775 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122013474 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099054521 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121278835 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091391583 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121037741 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142535482 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094090397 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16306501 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101372381 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123945743 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130411831 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100918374 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12778066 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0931383 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137493739 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101591408 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125617709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100636903 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12579437 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093433311 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140609523 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123574162 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.093886635 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122598594 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099521188 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124778123 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.092730146 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136512222 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091805676 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126640907 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138379783 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092446451 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122434292 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101916458 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126399923 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09118716 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136038364 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.096803052 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123541102 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131668569 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093661084 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124031797 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1035727 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126634086 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091733416 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127568969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098615854 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123705008 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092544283 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125964729 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092562771 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13359609 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128380928 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099137788 seconds)
  done (took 14.855473825 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228136848 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215395372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204907324 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.2934032 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13527786 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11335206 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210759774 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156238547 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124222497 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159859895 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175024724 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180849378 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170050271 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182680928 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170121194 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093228821 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142557528 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1321191 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244001487 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256642023 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144154863 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099515834 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160653314 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158806008 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136851073 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10108109 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140885121 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135461187 seconds)
  done (took 5.852851938 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106986594 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154255949 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096316987 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144519594 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147877601 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091498619 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127875346 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092924261 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135820449 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134761855 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091573144 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129167018 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098480704 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133376271 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121854686 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102538244 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131853875 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093894637 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126531298 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096656107 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130024373 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10061778 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127469989 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090083602 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132894467 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120485419 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086146647 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141966954 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091841813 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144741508 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120362904 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099437727 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13332676 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093901433 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123421481 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094415795 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12586784 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094685261 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125397595 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090494099 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122620224 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076945043 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121877052 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105404228 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129459236 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078749084 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130114657 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12697841 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09595378 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.11892723 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096710411 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124656762 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095944131 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129209622 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09773533 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123041912 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095949604 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11586323 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099121277 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124284333 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084335274 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119760871 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099038966 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117479635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100757427 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127515909 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092070129 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124967224 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096501293 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129665543 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093976364 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126062159 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090741851 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12601664 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095363521 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128127565 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094535475 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12265663 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091496038 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124619531 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074462707 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123759463 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073451977 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127154606 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092068137 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121914903 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095300695 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130216364 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135940958 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094640274 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132047163 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093783717 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121942928 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096039606 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113227907 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096098868 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139207912 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141003825 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093674931 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121588536 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106840047 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125426831 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092716976 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105404781 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100255356 seconds)
  done (took 12.958970171 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126483806 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153735166 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093914033 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143650264 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155850881 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155845873 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100813684 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130119617 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094973887 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142623936 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093815612 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13215636 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096407333 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137946896 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156813004 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103463244 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125505424 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107918172 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132185618 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169770241 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111047102 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143258185 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107308329 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124434455 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097493527 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140951752 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161571899 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.105863569 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137611168 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.1415563 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107899464 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161967503 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111855783 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130212701 seconds)
  done (took 5.537503075 seconds)
done (took 50.04140555 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.290342749 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.524287209 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.259724629 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.303661548 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.275631038 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.283756077 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.274268483 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.268304956 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.511841754 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.265233123 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.493984343 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.941289444 seconds)
done (took 59.883920787 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.375355442 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.395624822 seconds)
    (2/2) benchmarking "String"...
    done (took 1.528995192 seconds)
  done (took 4.113361208 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.618167265 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.251506141 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.52831278 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.260646719 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.263607231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.551999665 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.080061145 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.652358982 seconds)
  done (took 28.777536271 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.271421754 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.353931296 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.294303841 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.270576578 seconds)
  done (took 6.381387931 seconds)
done (took 49.455699451 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.259133817 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.263182156 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.28238116 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.242393849 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.383665233 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.291077737 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.69872608 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.316469915 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.285374213 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.246420304 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.285286685 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.281591353 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.292735055 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.734472535 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.263555266 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.2666998 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.298073768 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.812304861 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.690566672 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.278426543 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.264583588 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.299341639 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.278494025 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.268153566 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.276224693 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.264865897 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.270949263 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.280225793 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.060609694 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.269380305 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.293751871 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.879293578 seconds)
  done (took 193.367843353 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.26427495 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.36785433 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.453218087 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.321913412 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.927748687 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.466823036 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.402458692 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.988230514 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.285500155 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.293455489 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.55828826 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.265595151 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.633741259 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.295601904 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.295981069 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.372705006 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.572696312 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.611955804 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.318973368 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.441771897 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.28521986 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.468653357 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.381886398 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.493840495 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.28307006 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.346831025 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.284925468 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.324626167 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.456095136 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.501045103 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.302559376 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.295789919 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.919433713 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.128888842 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.292612772 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.291198956 seconds)
  done (took 153.387603024 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.33348024 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.266081929 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.265599747 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267109862 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.299795308 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.264947619 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.880333946 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.885626555 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.775063044 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.621899415 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.269251765 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.770095064 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.635518626 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.269185686 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363650462 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.27967592 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.267002223 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.281785633 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.31240472 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.270904461 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.266948144 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884487949 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.282853739 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.478244374 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.452357656 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.288195917 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301137502 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.267066428 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.660949822 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.268038107 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302158916 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.604955694 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.32346347 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26789657 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.707002813 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.279374125 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384907479 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.267944221 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30241922 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.267897498 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.551363978 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267679187 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.268638841 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.269996814 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.985373863 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.271016721 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884694888 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272223316 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.284615963 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.270827979 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269209576 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.794748658 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.03058936 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.291716981 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.269456505 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.271616294 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.269274007 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269031681 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.304561947 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.863527111 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.366302193 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.288981948 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.272595023 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30352439 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.269168546 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.367550611 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.292894409 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.893447189 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.330050336 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.483629189 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887848088 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.272720113 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370067469 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.392962545 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.269837349 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.270483931 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.269282106 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270602617 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.269655258 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.383460122 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.270973786 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.719580867 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.45252792 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.291822654 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.788266271 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.373106589 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271353405 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.711491549 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.274599148 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.271968318 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.135463351 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37427383 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.271374088 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.270711142 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270449996 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.72163222 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890163619 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.583755075 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.275907783 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.270693525 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.716431923 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.27429918 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.73553851 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.87988321 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.004395961 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.274443345 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384881097 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.451981468 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.291520029 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.271648568 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.762231921 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.274619319 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.329577651 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.27159445 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.671486085 seconds)
  done (took 376.872399435 seconds)
done (took 726.150793279 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.924302151 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.91484778 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.036879054 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.913937317 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.869329777 seconds)
  done (took 10.857642743 seconds)
done (took 12.055460404 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.479222701 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48317264 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342006117 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.48396548 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304903864 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50053643 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.460334432 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.294086601 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.379878733 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.363593654 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381846851 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.331268408 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.301174666 seconds)
  done (took 19.303009273 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.606841636 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.617775421 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.33235796 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.606026031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307178989 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.614957365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.475447345 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.498646227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.49339121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305534804 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283603287 seconds)
  done (took 17.338825804 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607921384 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.602524591 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.332175975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.598611104 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307273813 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.61782139 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.499305206 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.503764757 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.48595845 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.30181828 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.279420632 seconds)
  done (took 17.333075766 seconds)
done (took 55.173957643 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.276779686 seconds)
  done (took 2.46965704 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.312052602 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.476526464 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.295262202 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.279751585 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.277178594 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.275631206 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.279387598 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.276386541 seconds)
  done (took 11.665024345 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.275581196 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.274109458 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.270899237 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.273570443 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.274938697 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.270998853 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.275371068 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.271820705 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.275325506 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.273840596 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.274461147 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.270982705 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.270793828 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.273147164 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.272634715 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.272432188 seconds)
  done (took 21.563406382 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.274834071 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.271860025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.272501987 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.271565723 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.272548705 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.273666593 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.274195181 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.272873218 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.272600109 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.273785017 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.273646105 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.272401199 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.275139671 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.273987922 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.273292106 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.273374736 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.272083513 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.274043625 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.277823382 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.272794388 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.273643618 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.273641088 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.273551471 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.273853858 seconds)
  done (took 31.759707466 seconds)
done (took 68.650066827 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.520306448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.05511065 seconds)
  done (took 9.770470735 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.276940614 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.276501618 seconds)
  done (took 3.751330893 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.277841682 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.275204589 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.276232297 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.275806514 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.275567369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.275700689 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.275480913 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.275783319 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.278649639 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.275664834 seconds)
  done (took 13.957517268 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.276937513 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.276110683 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.273264041 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.275048588 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.278457852 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.274088174 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.275442922 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.276796635 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.28029062 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.274705702 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.276863176 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.274571966 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.276783725 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.275358639 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.274813179 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.274174753 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.273074959 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.274727568 seconds)
  done (took 24.156824432 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.276546547 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.27631932 seconds)
  done (took 3.7476353 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.275042955 seconds)
    (2/7) benchmarking "second"...
    done (took 1.273445456 seconds)
    (3/7) benchmarking "month"...
    done (took 1.274372926 seconds)
    (4/7) benchmarking "year"...
    done (took 1.273848537 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.273695639 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.274928181 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.274914116 seconds)
  done (took 10.11528501 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.278678852 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.448390832 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.528641966 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.861234561 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.278045607 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.281642834 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.145608228 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.280767806 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.283567576 seconds)
  done (took 14.583351926 seconds)
done (took 81.277247873 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.300419475 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.291179495 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.481431545 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.283665365 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.308555062 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.571387192 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.308714223 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.401956549 seconds)
done (took 38.142774972 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.278160867 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.257150436 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.093481112 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.264262948 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333033222 seconds)
  done (took 19.145895737 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.338969593 seconds)
    (2/2) benchmarking "read"...
    done (took 1.612747234 seconds)
  done (took 5.150121912 seconds)
done (took 31.770703789 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279819546 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.279117681 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.278205358 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.278850208 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.277166526 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.276490577 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.279601291 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.280306572 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.279847056 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.279181742 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279771385 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277630751 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277325148 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280705476 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.278705727 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277528234 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.280303844 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.277454582 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276709547 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.279807944 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280418346 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.278028675 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.277482278 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.278164308 seconds)
  done (took 31.88709052 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.280914974 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.278039692 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.280382837 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.281863928 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.278558903 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.282473099 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.280366315 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.278042591 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.281323816 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.28058263 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278064331 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.27806635 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.281092413 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.278385518 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28109174 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.279343182 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.281387931 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278395993 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28041411 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.277658024 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.281486151 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278855283 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.279270376 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28179924 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.27998899 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278056242 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.282361951 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.281310036 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281828943 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.279751892 seconds)
  done (took 39.601546492 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.288849422 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.290198866 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.282093646 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.280964202 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.280964284 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.282283355 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.283426265 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.281947021 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.282687883 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.281833457 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.282413067 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.282367403 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.283689584 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.282931445 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.282249362 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.281944741 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.283425763 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.282700358 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.283160597 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.281935738 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.283380312 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.283069797 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.282648623 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.283016729 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.284356802 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.281962184 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.284025407 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.283151069 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.283277058 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.283997266 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.283640393 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.284240669 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.284602816 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.283458533 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.285422618 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.284373427 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.288769391 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.291731559 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.283278271 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.285242278 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.283952158 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.282924931 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.283652289 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.283930656 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.283939658 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.285606331 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.283108861 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.286810443 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.283387412 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.283779617 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.284334395 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.284129587 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.283510957 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.283633769 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.284252194 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.286033592 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.283779416 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.282895019 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.282792059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.283685439 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.283663135 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.283416267 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.283403918 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.284864094 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.28359479 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.283294016 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.283102736 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.284285667 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.283041084 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.283798879 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.282792159 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.283630112 seconds)
  done (took 93.63536615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.284359761 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280631956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280407441 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.28152437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280646668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285762908 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282465086 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284497916 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280937848 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.283726984 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283542361 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282036154 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28243471 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286347369 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283778057 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281105676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284322134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281391539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.284942877 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284977333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284005722 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.284218892 seconds)
  done (took 29.430468122 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285116732 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285005456 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.281363208 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284816697 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281642129 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284365131 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284910244 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286083782 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285140847 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281232676 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282534477 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2846797 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282291348 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28187197 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283595183 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284413801 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286027876 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284730555 seconds)
  done (took 24.311320855 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.283635306 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.282344404 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.287722833 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.283526011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.283433115 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285655656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283689334 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.286646467 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.285179797 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.282838684 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.286387828 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286808359 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.286134599 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283339846 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286488873 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.284243318 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.286760119 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284767124 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286947756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284593021 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282998752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287210936 seconds)
  done (took 29.474735173 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287334128 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286954008 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284602762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283961215 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284042358 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287657551 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.286431264 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.283706731 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.287863882 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.286610738 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285121245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288399663 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.285876679 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285348584 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.285268952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285160979 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288292764 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28533474 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288029036 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28386003 seconds)
  done (took 26.923697374 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289340251 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288913888 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288779825 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288689969 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289503415 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289898041 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288534822 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289336784 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289549528 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289337205 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28815174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289073194 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289886094 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289727977 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288543626 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289649303 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290012231 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28809938 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289409793 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288802258 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29071265 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289639199 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289403458 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289297739 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288661696 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289533672 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289157893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289689953 seconds)
  done (took 37.304722353 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289964259 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289259542 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286100102 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.285926154 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.285407721 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.284981586 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.28555951 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.287877965 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288321898 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285005492 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.287391736 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.288988918 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.286527979 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.288048653 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28782439 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.289721605 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287292786 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.285361819 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284695391 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286098736 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.287489827 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288333924 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.28771916 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285945077 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28424769 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.287793944 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286087639 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285015364 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288202992 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284896604 seconds)
  done (took 39.812586576 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.307992915 seconds)
    (2/2) benchmarking "in"...
    done (took 1.30677474 seconds)
  done (took 3.819738574 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.286025083 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288834099 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.288697498 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.286017524 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.285641512 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.290233166 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.288885182 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285482979 seconds)
  done (took 11.505520019 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.288103657 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.288137797 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.28882432 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.289041498 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.288986988 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.289829784 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296196966 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.309375878 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.288834704 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.291211257 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.296423947 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.297223324 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.291269203 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289447238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.288832973 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289905348 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.289663101 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.290473754 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.290540163 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.290033911 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289960409 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291254967 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29131356 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.286846777 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.290508638 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.299918713 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.313098655 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.290312649 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290767812 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.2929531 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.29070257 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.287796065 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.291209582 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.291779669 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.294387087 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.291867185 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300013082 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309662922 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.296590274 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312684807 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29140659 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.287220869 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.291307331 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.292390218 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291858406 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.291968199 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.29175427 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.288240958 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.290906365 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.294831255 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.297341365 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290474649 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.289964774 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292874239 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.292339639 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.299331953 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.312497391 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.296638418 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.299747256 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.301704077 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.323227081 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.31578028 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292550612 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.292339789 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302109084 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.31511328 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299137926 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.31004267 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.289858757 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.290990002 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.298400025 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322860745 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.316534376 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.294947935 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292386158 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.290622401 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292021747 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29154169 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298970845 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.313537799 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.292236222 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293378175 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302428847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.313657424 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.289762645 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.292215325 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.293145318 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.292578917 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.2941667 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302056587 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.310339841 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.291871815 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.290312719 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.290837251 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.292242144 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.292502374 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.29143538 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.291815864 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.288948055 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.291134648 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291232687 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294798738 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.298519336 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291555093 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294460201 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.297686605 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.31062695 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290672101 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.296985591 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.291008036 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292668079 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.294740221 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.29687293 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.288719196 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293663387 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.29781945 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.291821908 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.292042565 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.292338917 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.294283295 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299899262 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.316138174 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.291039504 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.289957509 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.295272765 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.303503182 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.294056811 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.295015889 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.289852952 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.28820866 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.289879335 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.291814403 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.291575943 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.290736182 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292886481 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292545049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.287121742 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.291422894 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.291603204 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.29286527 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.292030694 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.291946374 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.293379861 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.292975989 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.291331479 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.292293475 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.296742534 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.30902583 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.292746289 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.291670838 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.29028467 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29173964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.292755038 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.293743303 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.29155758 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291959455 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.291071663 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.292804842 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29321401 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.291393247 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290662615 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.291979793 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294768426 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.291689504 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.294247424 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.291361105 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.290412678 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.291361559 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.291376627 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.289630437 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.291503363 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.290717358 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.29531588 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.299875384 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.291042224 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.292518606 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.293593722 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290905328 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292729755 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292302387 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.29404496 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.299384624 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.292052743 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.29684605 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.310887713 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29300802 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.291472461 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.291533381 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.290736688 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292047535 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.294821278 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.298849074 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.303117316 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.316618639 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.293260687 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.295346464 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.293774287 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.295592344 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.29440897 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.292169257 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.291489132 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292163699 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291799954 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293194683 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.29422012 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.293060872 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.291749544 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.292437547 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.292340356 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.29282816 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.292759714 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.293030008 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293447033 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.289704122 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292134857 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291921405 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.292033369 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.288115448 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.290394979 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.290475116 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.292966124 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.292652715 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.296897268 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.288821219 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292193177 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29249621 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.291766572 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.292776032 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.292800997 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2932771 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.291757566 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297926402 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.310872706 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.29372259 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298613295 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.311773889 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.291835571 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.294346176 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.291824844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.289866407 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.294657662 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.299396902 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.292640841 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.29426297 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.29337444 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292769142 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.292069375 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.298580815 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.309174588 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.291645093 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.293680661 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.293250079 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.289624627 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.294124007 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.292796626 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.292865401 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295496485 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29350204 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.293450341 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293354498 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.294105791 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.295503945 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.293821219 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.296152487 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.301303931 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.300191326 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.293583161 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.295815365 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.295398655 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.297507274 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.294653976 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.294395147 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.294212844 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305679729 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.31837572 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300607196 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.314998853 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.294239754 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29919503 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.313819209 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.298788616 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.294557101 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296032994 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.295411489 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.295554941 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.29293498 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294457511 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.295544742 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295861463 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.296575695 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.299522863 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.29464732 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.294299798 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.296157924 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.297159223 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.296081018 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.295986307 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.295750803 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.297075347 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.296726136 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.295731284 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.296018183 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302437357 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.315318379 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.296317046 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.295344696 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.295532186 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.295724957 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.296857122 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.296148229 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.299503354 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.304039843 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.299719444 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.303697467 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.299163902 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306100744 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.296618599 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.300208338 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.303518435 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.294761317 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.296514077 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.297078215 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.297072618 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304554549 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.318157226 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.298736108 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.30219369 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297251738 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.3001244 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.297656369 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.297971304 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298220308 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.298610778 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306354027 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.318040642 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.301692403 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299915308 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.295579752 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.297972672 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.300280583 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.297254643 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301446811 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.300181653 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.29976829 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.297327786 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.299222944 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.299719298 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.299480404 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.302401014 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.298254989 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.300081306 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.309054117 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.321295634 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304534895 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.299394118 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.307129855 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319866141 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.306895983 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.320993713 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.299660037 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.300579545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.300055701 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.300760039 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.299586752 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.301545666 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.30018982 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.301413117 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.305250917 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.301625146 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.302208432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.302249685 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.300936288 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.301027546 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30987254 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.322088333 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.302518193 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304315609 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.297621948 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.301520761 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.30626654 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.301526362 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.300786771 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.303198774 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310803867 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308362233 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.301523772 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.302253965 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302308835 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302652657 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.302015639 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.302317745 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.301015533 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.302231416 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.302643932 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.303294477 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304393848 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.302873064 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.3028224 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303307032 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.303264847 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.311454713 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.32141163 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.303348969 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302626761 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.30538518 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.302530301 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.302176331 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.303925206 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303720792 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.303247487 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.304171999 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309414351 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.307866402 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.305314079 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.302403773 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.303432946 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.303942044 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.304179513 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304331391 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.304381966 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30504603 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.305593917 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.304445141 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.306263442 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.303172717 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.3040849 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.304062376 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30465969 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306963476 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.310934095 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.304440128 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.301838723 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.304229017 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.305259394 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.303590404 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.305247034 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.311549532 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325356713 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.313861552 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.311769434 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.309348174 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.305955339 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308436279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.311894408 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.304496382 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.30637961 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.306000698 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.305384343 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.305783543 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.309149261 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305936071 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.311907428 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.325043669 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.304112499 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.314058438 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.326181185 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.306437009 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.308438141 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.309447011 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.305866142 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.304459745 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.306860047 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.306062605 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313681796 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.326788459 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307514493 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307320011 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.306270852 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.307683437 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311783334 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307215309 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.307491698 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.304218542 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.306709774 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307174478 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307575611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.30494517 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.307603057 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.307337114 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.309299446 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.313441829 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.30453125 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308391222 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.308256261 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.308090965 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308270144 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308751922 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.305087532 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.305417225 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.307532143 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309033071 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.307266486 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.309343771 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.308123007 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.308620352 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.309468237 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309620647 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.310770426 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.317489563 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.315243145 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.306502162 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.308925281 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.308846992 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.309937727 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.309795185 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.310346075 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.309120155 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.310602483 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.309146128 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310107869 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.309872742 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.31175801 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.324186518 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.327862656 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.308885401 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.309723709 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312832616 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.309649661 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.307407348 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.310000855 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.311447235 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.314018314 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.316051509 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.311363822 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316120906 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328471412 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.311105435 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.313824966 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.313521036 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.316424244 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.311000878 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311321896 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.311016062 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.314588112 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.324946462 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.311273306 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320375248 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337359414 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.329780765 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.311416628 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.312460055 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.310307888 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.31197268 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.314202735 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.312576081 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.311077721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311877162 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.311978958 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.312325827 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.315548109 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.312991389 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.313647026 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.312015718 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.309945905 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.312356936 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.309075462 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.314229025 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.312883957 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.313052992 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.314033662 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.314069395 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.313344818 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.324069041 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.337624512 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.312464425 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.313465567 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.311765562 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.31680833 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.31530313 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322862868 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.317727145 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.314169776 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.314865505 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.314297673 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314838135 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.312902443 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.314250964 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.3128687 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.313543505 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.311199394 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.324580044 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.337440706 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.318463312 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.313509826 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314477822 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.314791127 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315896706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.314829923 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315480192 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.315295656 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.317339428 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318848723 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.314960379 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.315442765 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.317653428 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.321453798 seconds)
  done (took 776.979814694 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.312780779 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312147729 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312290567 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31295613 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312289901 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312738493 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313489862 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313634615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.313919829 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312097851 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312994271 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313953993 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.312868524 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312729466 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313840247 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313585316 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313342062 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.312926983 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313364726 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313416054 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.314102364 seconds)
  done (took 28.80646382 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.3170049 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.314213848 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313318435 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316948126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314249657 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.316702469 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.315112761 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316157906 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316488838 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31387987 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.316480683 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317874743 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.314559111 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.314956271 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314970713 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31692198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.317557135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314225006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.318756684 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.31514815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318146366 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.314897095 seconds)
  done (took 30.180261526 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.318938658 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.318811699 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.317980968 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.315478466 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.317618313 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.316196989 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.319200156 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.318594348 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.317892203 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.318802752 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.318156682 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.318665265 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.323709361 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.323383873 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.320061174 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.318193937 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.464413921 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.320306868 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.321107352 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.320178502 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.317382054 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.323634463 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.335325581 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.315684122 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.318645776 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.32072728 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.320131334 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.317919249 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.320052101 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.320882266 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.324416611 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.32040719 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.319049715 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.320377543 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.319287025 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.320818333 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.323359001 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.320083 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.318029434 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.321322101 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.329154118 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.337722708 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.321645938 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.326370424 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.338245154 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.320735975 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.324071855 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.327351717 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.319772729 seconds)
  done (took 66.125046496 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.321529688 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.320614212 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.317933435 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.321724673 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.320626379 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.321574512 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.321635716 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.321225509 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.318668814 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.317914979 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.32186119 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.318593169 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.319566385 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.322028957 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.321659985 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.319110332 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.318923616 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.320289228 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.319691863 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.318689606 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.318225112 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.320462301 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.322597334 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.318457496 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.32097507 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.319528152 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.319515866 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.321300684 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.319100959 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.319361116 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.322496605 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.322471289 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.322909199 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.319574522 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.320270308 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.323111659 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.323086975 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.319837755 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.322418297 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.320576917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.324624982 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.322995361 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.323719006 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.324980309 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.321088818 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.321753267 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.31972516 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.320452037 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.3220002 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.324314382 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.324210214 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.322100311 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.323763808 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.321852867 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.325126942 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.324234027 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.322353768 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.322279176 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.324003736 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.320813898 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.32062775 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.324229088 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.321711513 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.32421687 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.325164011 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.321781192 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.322660992 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.32532311 seconds)
  done (took 91.102172346 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32542832 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.326016228 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326143519 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3255637 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32572428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.324728105 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.325193087 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.324556058 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.324685134 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325328149 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.326260502 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.325457962 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.325264506 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.325211117 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.325525606 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.324727653 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.325769356 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326524249 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.326001283 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325739782 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.3272135 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.325887996 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.326750037 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.327308214 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.3276152 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.326638099 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32714679 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.325875108 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325943051 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.326806095 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327206802 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.326296322 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.325702531 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.327201258 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.327852962 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.326915553 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.327848851 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328074384 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.328027949 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.32716099 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.326557747 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328573891 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328067486 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.328156187 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.32796856 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.328624075 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.327622307 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.328698031 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.328038285 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.328707266 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.326990374 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328955148 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329005289 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.327970567 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.328080019 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.32776574 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327287849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329689387 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.329601214 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.328660584 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.328349156 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.328763354 seconds)
  done (took 83.512680259 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330534 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.328266267 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.326617826 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.326315432 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.328913563 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.326292377 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329223874 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.328981151 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.328317358 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.328208503 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329557963 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326985123 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326197102 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329195569 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.32673588 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327577311 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326593377 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.326254759 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329212559 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326130258 seconds)
  done (took 27.799209117 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.327027305 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.33019987 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.326739853 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327176014 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.329546556 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.327944993 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.329458623 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329634734 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329724476 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329465817 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330165415 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.330710916 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326628237 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.329357555 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33113707 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328356126 seconds)
  done (took 22.507881108 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.328414815 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.330443548 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.331036003 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.330753146 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.327855021 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.328455545 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.332098529 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.326952014 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.329218307 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.330230012 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.332054045 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.33095327 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.330634072 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.331784137 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.33005617 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.333636515 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.330815191 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.330214376 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.332410406 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.331941883 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.330147846 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.330494097 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.331768436 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.331730711 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.329856737 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.330419496 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.330320766 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.330141545 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.328802634 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.332776888 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.330725672 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.329905488 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.329174481 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.329543163 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.333247848 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.330813947 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.332748082 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.333279851 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.332226828 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.332977473 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.334011605 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.330916543 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.333194347 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.333452068 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.328949055 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.332122345 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.330361041 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.330752913 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.331349729 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.330078036 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.332413023 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.333646493 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.333838958 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.33414154 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.332815849 seconds)
  done (took 74.459810646 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334453291 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334710828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.330551153 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.334762374 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.334569819 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.33240641 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.334001312 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.333704768 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332345264 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.333780915 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.333245371 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.335027351 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331353303 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.336273254 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.333051998 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333619065 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.331636138 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.332067995 seconds)
  done (took 25.250056114 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.333994647 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.332863559 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.33548951 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.332923961 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.333158593 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.335895451 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.333738326 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.335259475 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335058555 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.334313482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333792549 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.335251713 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335826486 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.335820837 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.333374987 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333182149 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.336855599 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336567353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.334297967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33321064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.336729949 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335718768 seconds)
  done (took 30.613290601 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.336678168 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.335673645 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.335909943 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.351654676 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.353572992 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.357632554 seconds)
  done (took 9.321258279 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342876647 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33761824 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334099309 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338492289 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337697855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334749623 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334492052 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334868129 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336595907 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335050792 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334825279 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336814387 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3367779 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335114809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336561679 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338078081 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333928875 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335082032 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336715979 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337986958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335728468 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337204722 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334997642 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335565978 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335716059 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335206979 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33809948 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336422043 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336280927 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338910589 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338745455 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335464573 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337568744 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335578646 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33953506 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338532784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336688339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338682618 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338142786 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336095501 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.33862495 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338759654 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340067756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336340059 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338670479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336071196 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336719626 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336670457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336336056 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340204572 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339324727 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3370494 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339352212 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338697102 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339270467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340902413 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336361987 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338123691 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340811627 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338509138 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336805041 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340430371 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336774122 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337893286 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339358437 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33831672 seconds)
  done (took 89.537413986 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339311943 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.338617348 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338875772 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33895126 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338464146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338656006 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337470734 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338788227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338449643 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338386526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340374862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339097543 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33829135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339699005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338858508 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33818679 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338821334 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339203074 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339350412 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343281848 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338378087 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338354064 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338777822 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339270033 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339599438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342080644 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339845108 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339717159 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339736679 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339416052 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339635323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340045522 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340842572 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.340028371 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340031059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340440303 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340039188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33970138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340740937 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342702885 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340057979 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343904592 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341229725 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341028131 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342414314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341890736 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34201592 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339937471 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34065385 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341993513 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341282887 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34346501 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342086353 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342235488 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340765431 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341603433 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341289803 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340552485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341359198 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344489933 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342291962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34196685 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344508216 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342428482 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340873838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341579742 seconds)
  done (took 89.725004084 seconds)
done (took 1814.824635696 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.377379211 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.391889791 seconds)
  done (took 14.027570292 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.504655005 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.462985372 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.344030437 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.382763577 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.344603639 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.366699278 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.356046794 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.344210512 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.344471408 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.344644827 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.344467691 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.532084301 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.391339677 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.344821902 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.34537869 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.440005412 seconds)
  done (took 43.454618766 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.371294407 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.351619391 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.458247415 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.371974696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.369717483 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.531309538 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.405727074 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.351368011 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.513552313 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.391350165 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.864945634 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.375729227 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.349080662 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.429514464 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.372764947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.529210395 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.595022373 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.87636681 seconds)
  done (took 30.768942803 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.777444027 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.354066773 seconds)
  done (took 9.393952109 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.369116071 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.350041634 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.350178264 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.347944153 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.340921106 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.348008612 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.348183454 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.353209782 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.817128349 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.476405967 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.357709645 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.356579076 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.368259835 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.351287708 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.348975606 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.385789747 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.501187067 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.347914839 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.346346904 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.354399685 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.349156155 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.469148163 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.39490638 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.353923659 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.469461104 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.820607668 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.357566005 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.35704874 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.481605294 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.354238129 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.348966997 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.350319765 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.35133437 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.950846979 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.825129586 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.363698688 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.389008259 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.360858053 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.347498629 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.540028308 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.352996697 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.355794125 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.342939172 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.808117408 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.481883504 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.464584698 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.550697959 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.373233016 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.351341247 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.410850089 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.351447969 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.351779401 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.380534052 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.098188424 seconds)
  done (took 111.993702409 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.376317693 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.738273394 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514872866 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.36817187 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.020508194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.992127018 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.361156035 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619839329 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.391213538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344455735 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.639082501 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843510014 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.363172534 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.384736615 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.844666113 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.376696207 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.345759545 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.157787796 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.366506238 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.351264749 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831056513 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.363041917 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.360086581 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.464919595 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.384665566 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788482506 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.661011506 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.78911124 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.369877435 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.346757661 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804525189 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.364119999 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.368926621 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.346429105 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.601021938 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689882152 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678839297 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.362088922 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371340808 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.347474968 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.373272123 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782784796 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.690987811 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.362226795 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.368693363 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805600897 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.361947452 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.356911097 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.346608573 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554420802 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.069030861 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.347064043 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.642442815 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.349810284 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.635281651 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.418170105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.351776927 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814623102 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.363519735 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.457976449 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374788829 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.348845903 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.34686511 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347999021 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.358355624 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682297014 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74014165 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.354975218 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679330272 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.815949648 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.367221822 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87477418 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.219950328 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.359516242 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.402055202 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.347725927 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.939244248 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827767729 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.378258205 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.348241626 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66715694 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.368350501 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.618552482 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.363590558 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.349597616 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861029812 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.358996973 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.395733926 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.348469988 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.372396642 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.115307929 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.350423924 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.630148251 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.424964241 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.348466324 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.34901817 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.356210349 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.349384227 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.352347094 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.350663219 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863710437 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.375721604 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.322587785 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.368926688 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35331468 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.354869169 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.352202045 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.351555901 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574051374 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.810656796 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.37242657 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350348894 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.349722614 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.37803748 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.479543828 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.355320121 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.643869151 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.369620913 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.351537246 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.355843629 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.023435829 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.413404653 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.355350972 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.34926229 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.236894678 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.550375724 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.360619595 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.360827402 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.344384051 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.35537214 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.547377664 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.356627592 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.415369256 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.340037973 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025189176 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.389523221 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.344419975 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.678097426 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33404543 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.122226801 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.344039892 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322996927 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608769743 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.588936439 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.597447405 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.322133367 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.342749936 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.999493257 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347722884 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467673335 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340805203 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.303145735 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524988061 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.638368569 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.322555105 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.945919694 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.323419177 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543881103 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.325771856 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630717576 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808837985 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.339314351 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317495 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.018175719 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015175503 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.079906475 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.320538264 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.581318547 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.28639279 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.777453615 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.313362788 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320367363 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.874529902 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313037963 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308093976 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.308052447 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.307683728 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372600084 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479732028 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.023991571 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313932672 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750553282 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366441323 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309265032 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337968935 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.310853523 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.654910695 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375520171 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.309384833 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.347587604 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.309362238 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312092221 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.775644599 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.220577739 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.315732324 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460399307 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935283774 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.332836369 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309424011 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.925172681 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.530962998 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845897833 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.382901438 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609199734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.332955312 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.346049755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.033879978 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.333180583 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816522278 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332351522 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.310536174 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896539231 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.333038606 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.384199004 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.310250066 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309942834 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833362423 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.330964267 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.310181336 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.519920168 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.332948798 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564493821 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.3169703 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.34814616 seconds)
  done (took 1111.147503895 seconds)
done (took 1322.045301548 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.312461167 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316483947 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.305207766 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318374115 seconds)
  done (took 26.486772055 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320994204 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.318374944 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.31918615 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.316837422 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.319844582 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.318318307 seconds)
  done (took 9.146908279 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.388649081 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316033655 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.317745263 seconds)
  done (took 19.257732275 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.514873411 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.603999071 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.665724438 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.506359857 seconds)
  done (took 10.521949029 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.319693125 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318103514 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.320737423 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31958066 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.321541939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.323998114 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.320609225 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.319403606 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.322541257 seconds)
  done (took 13.117262123 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.321184982 seconds)
done (took 81.085901116 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.558569278 seconds)
    (2/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.289541211 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.415087679 seconds)
    (4/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.061514754 seconds)
    (5/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.292538271 seconds)
    (6/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.435157522 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.582220462 seconds)
    (8/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.393004186 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.354390531 seconds)
    (10/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894920372 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.34612528 seconds)
    (12/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.65803515 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.948473073 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.219797222 seconds)
    (15/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.874333829 seconds)
    (16/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.306782954 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.328154391 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.893080734 seconds)
    (19/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.334070658 seconds)
    (20/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.337946021 seconds)
    (21/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.294058767 seconds)
    (22/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.638319724 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.726603473 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.823443934 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.319745725 seconds)
    (26/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.677558311 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.444398402 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.668182567 seconds)
    (29/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.345946489 seconds)
    (30/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.733114678 seconds)
    (31/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.348468462 seconds)
    (32/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.15438225 seconds)
    (33/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.139130459 seconds)
    (34/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.44249995 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.718230067 seconds)
    (36/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.331989593 seconds)
    (37/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42927701 seconds)
    (38/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.296563617 seconds)
    (39/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.405324655 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.42645177 seconds)
    (41/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.456079268 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.595912334 seconds)
    (43/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.398800349 seconds)
    (44/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.297082818 seconds)
    (45/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.380729195 seconds)
    (46/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.438361152 seconds)
    (47/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.295311436 seconds)
    (48/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.357888588 seconds)
    (49/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.92962483 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.37056727 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.155059568 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.702910072 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.467904664 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.33373779 seconds)
    (55/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.340838563 seconds)
    (56/286) benchmarking ("sort", BigInt, true)...
    done (took 6.321445134 seconds)
    (57/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.519895005 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345976343 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378918142 seconds)
    (60/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.422820937 seconds)
    (61/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.296765005 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336688804 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.325549183 seconds)
    (64/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.073282922 seconds)
    (65/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.409181098 seconds)
    (66/286) benchmarking ("sort", Int64, false)...
    done (took 5.49977576 seconds)
    (67/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.447926979 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.962508715 seconds)
    (69/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.519566966 seconds)
    (70/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.323098913 seconds)
    (71/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.525192535 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.919393632 seconds)
    (73/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.30700784 seconds)
    (74/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.196687813 seconds)
    (75/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367187066 seconds)
    (76/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.403337887 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.30691289 seconds)
    (78/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.119217158 seconds)
    (79/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.333599381 seconds)
    (80/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.667139438 seconds)
    (81/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.343583373 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.241985088 seconds)
    (83/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.164691369 seconds)
    (84/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.138142494 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.314062075 seconds)
    (86/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.306075887 seconds)
    (87/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.367899828 seconds)
    (88/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.344113474 seconds)
    (89/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.685321009 seconds)
    (90/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.555597343 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.33546166 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.329078527 seconds)
    (93/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.29804293 seconds)
    (94/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.433993489 seconds)
    (95/286) benchmarking ("sort", Bool, false)...
    done (took 1.852433277 seconds)
    (96/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.357139994 seconds)
    (97/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.692843251 seconds)
    (98/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.600921918 seconds)
    (99/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.020264046 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.523262532 seconds)
    (101/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.353481382 seconds)
    (102/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.498285371 seconds)
    (103/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.0754245 seconds)
    (104/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.581330254 seconds)
    (105/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.724750529 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.361865094 seconds)
    (107/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.498980267 seconds)
    (108/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.438811061 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.339981308 seconds)
    (110/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.311503933 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.319728301 seconds)
    (112/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.896551045 seconds)
    (113/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.287663874 seconds)
    (114/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.341621178 seconds)
    (115/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.470989419 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.092534668 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.09450867 seconds)
    (118/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347860199 seconds)
    (119/286) benchmarking ("sort", BigInt, false)...
    done (took 6.318830465 seconds)
    (120/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.444465513 seconds)
    (121/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.344060461 seconds)
    (122/286) benchmarking ("sort", Float64, true)...
    done (took 6.318539163 seconds)
    (123/286) benchmarking ("sort", Float32, false)...
    done (took 5.32614172 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.306314987 seconds)
    (125/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.768735765 seconds)
    (126/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.673516932 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.114904882 seconds)
    (128/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.367662262 seconds)
    (129/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.342332391 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.510791912 seconds)
    (131/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.580264842 seconds)
    (132/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.307783293 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.368926495 seconds)
    (134/286) benchmarking ("sort", Int8, true)...
    done (took 6.343626829 seconds)
    (135/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.341277096 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.41231739 seconds)
    (137/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.577825657 seconds)
    (138/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.759503914 seconds)
    (139/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.610780479 seconds)
    (140/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.339802082 seconds)
    (141/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.534803285 seconds)
    (142/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.306038913 seconds)
    (143/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.048143479 seconds)
    (144/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.450338666 seconds)
    (145/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.360143321 seconds)
    (146/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.152929713 seconds)
    (147/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.33604689 seconds)
    (148/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.327001846 seconds)
    (149/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.532116224 seconds)
    (150/286) benchmarking ("sort", Float64, false)...
    done (took 5.632337147 seconds)
    (151/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.085339199 seconds)
    (152/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.489376424 seconds)
    (153/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.302017196 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.571540063 seconds)
    (155/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.318219004 seconds)
    (156/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.352537602 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.074567809 seconds)
    (158/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.305173812 seconds)
    (159/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.43513995 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.978773163 seconds)
    (161/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.926349634 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.730928232 seconds)
    (163/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.518412541 seconds)
    (164/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.305630215 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.367520859 seconds)
    (166/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.091201635 seconds)
    (167/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.284270932 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.38582085 seconds)
    (169/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.632095053 seconds)
    (170/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.42363349 seconds)
    (171/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.137876595 seconds)
    (172/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.355957149 seconds)
    (173/286) benchmarking ("sort", Bool, true)...
    done (took 5.437171138 seconds)
    (174/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.396367147 seconds)
    (175/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.142364183 seconds)
    (176/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.740246387 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.699044013 seconds)
    (178/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.928743369 seconds)
    (179/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.307914349 seconds)
    (180/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.330446182 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.664105579 seconds)
    (182/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.54141111 seconds)
    (183/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.979613756 seconds)
    (184/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.064397689 seconds)
    (185/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.31383533 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.816611918 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.772322747 seconds)
    (188/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.882074204 seconds)
    (189/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.081417259 seconds)
    (190/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.340405609 seconds)
    (191/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.698673452 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.421225751 seconds)
    (193/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.332920404 seconds)
    (194/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347014028 seconds)
    (195/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.33490783 seconds)
    (196/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.546492309 seconds)
    (197/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.387748487 seconds)
    (198/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.896816082 seconds)
    (199/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.3497435 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.065451215 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.331660414 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.233982315 seconds)
    (203/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.325081393 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.177542678 seconds)
    (205/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.383681698 seconds)
    (206/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.315691233 seconds)
    (207/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.510314877 seconds)
    (208/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.380044422 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.680733331 seconds)
    (210/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.321080813 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.311706289 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.340360034 seconds)
    (213/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.923696567 seconds)
    (214/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.316902608 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.309232167 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.351700261 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.30747125 seconds)
    (218/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.312945038 seconds)
    (219/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.312828591 seconds)
    (220/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.900236491 seconds)
    (221/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.449710785 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.648631216 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.725679611 seconds)
    (224/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.380437772 seconds)
    (225/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.539880758 seconds)
    (226/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.429056694 seconds)
    (227/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.30587268 seconds)
    (228/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.597313939 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.314206455 seconds)
    (230/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411827399 seconds)
    (231/286) benchmarking ("sort", Int8, false)...
    done (took 4.414453252 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.790795972 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.359049796 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.184096824 seconds)
    (235/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.758313135 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.174432953 seconds)
    (237/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.332806151 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.747067385 seconds)
    (239/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.309780239 seconds)
    (240/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.346599428 seconds)
    (241/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.358318175 seconds)
    (242/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.325077388 seconds)
    (243/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.40693119 seconds)
    (244/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.681858973 seconds)
    (245/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458293633 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.03885305 seconds)
    (247/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.331752609 seconds)
    (248/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.770273196 seconds)
    (249/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.441009114 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.942683834 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.970267772 seconds)
    (252/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.313990012 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.319785875 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.330031544 seconds)
    (255/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.701754945 seconds)
    (256/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.340979113 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.429115591 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.411495481 seconds)
    (259/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.253859381 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.452349228 seconds)
    (261/286) benchmarking ("sort", Float32, true)...
    done (took 6.32670416 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.199116841 seconds)
    (263/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.414050667 seconds)
    (264/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.400272384 seconds)
    (265/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414256591 seconds)
    (266/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.308189316 seconds)
    (267/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.360392645 seconds)
    (268/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.684449276 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.399559585 seconds)
    (270/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.311051584 seconds)
    (271/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.856523439 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.372127132 seconds)
    (273/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.310232598 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.703045997 seconds)
    (275/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.325643428 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.251059969 seconds)
    (277/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.316231459 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.357388698 seconds)
    (279/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.936277633 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.111930804 seconds)
    (281/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.347986938 seconds)
    (282/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.330439028 seconds)
    (283/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.434859307 seconds)
    (284/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.310296593 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.360048544 seconds)
    (286/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.318467732 seconds)
  done (took 934.988432428 seconds)
done (took 936.222679315 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.36467391 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359454 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.341511156 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360901622 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.452698634 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.369385925 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.352157515 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.343872373 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388868837 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.390152322 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.34180629 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.36791539 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.342590719 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341352467 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.341057156 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355816258 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.368151057 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.347048868 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360296988 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.349375132 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.3560862 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.340529606 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.389081504 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.366739452 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.346143124 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.34490871 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.343797635 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.362239256 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.454766597 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.341945577 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.343478449 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.353021908 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.355250397 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.343123679 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.338370957 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.361307885 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.353869353 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.350438213 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.346117298 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.37406697 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.754913833 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.357076743 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345982861 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.344992698 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.34357288 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.34814379 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343364146 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.349406093 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356791231 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358997882 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.74679603 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.375055636 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.34649615 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.346608651 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353651258 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34271796 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.346648335 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362868138 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.363323084 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362219424 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.34633088 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.349738505 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.345829206 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.360881569 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.352332458 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.785520866 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355622168 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.349203818 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.757811807 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367198674 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.784715395 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369293054 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.346224598 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.360909772 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.378242547 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.359631685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.340774099 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346034051 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.352130848 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.342075263 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.353302527 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359199454 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349572198 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.345584297 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360889553 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.372780327 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.356053548 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.346066666 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.354693163 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.365320084 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.355209528 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356602099 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350687402 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.342465103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355902651 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.350964704 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.348235463 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347659851 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.351661438 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35589973 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.75381045 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379995215 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.341380876 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.34325107 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.344210939 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.361052805 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.755279637 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.362759373 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.367196625 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.39435211 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.349290435 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.34836054 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.351281206 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363991908 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.356461813 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352759789 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.34180229 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.348130755 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.750952256 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.37928668 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349391216 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.34713298 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367055813 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.350020579 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.344812019 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.365080455 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350046072 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362879509 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468988573 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.360476023 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.379082372 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.346689395 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.352419186 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.372520626 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365742327 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.378055846 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350195078 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368415772 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.364269737 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345963894 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.359799936 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.362181951 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.348470445 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.355464147 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345823221 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.373639736 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364234364 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365080116 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.370209034 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.469098152 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.348228436 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.351629692 seconds)
done (took 226.989724255 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.408461983 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.337367652 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.439257993 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.348717033 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.445382545 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444852204 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344963217 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344295515 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.343365762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.725701811 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.344366466 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34550457 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.3405936 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344789422 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.426589009 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34749822 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345526003 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.693459173 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.34787061 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417694969 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.339180725 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.34504835 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346740534 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.772552291 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.349052632 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.348349331 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419690291 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348431966 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.691902693 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.347023039 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.342203012 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691519708 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.437794297 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364793566 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.359249464 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355792364 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.448073624 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.366819149 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.428913738 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.43010653 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.442018331 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.387465354 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.345982491 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.342070065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349869076 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.349795286 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346725254 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376458979 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.345973736 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34578333 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.694099065 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358580168 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.349051947 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347744479 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.345960906 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.380382799 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343297059 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352979596 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.439975494 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.34938618 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.410751421 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.73434712 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.729216075 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.350235243 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.34273591 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347425447 seconds)
  done (took 149.437246836 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.41944369 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422262474 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458994178 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.372365563 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.399293774 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.465008381 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371706251 seconds)
  done (took 11.170870477 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356401308 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351723354 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401389154 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.399186871 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352070855 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.499231797 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352087679 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.362435345 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.35720038 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.405607543 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352446178 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350834292 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.349773561 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.343355897 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399139016 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.362749335 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464092926 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350992553 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351840233 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502180492 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349200326 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359668943 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.403170802 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362621666 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352578873 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358706734 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915498314 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353048062 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349723846 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352578972 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349887149 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.388132676 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351451903 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.352361367 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349652409 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468574519 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353762139 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348417959 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351310067 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.350176199 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353928619 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.352302278 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.350355527 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349003153 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352441944 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.375575749 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.354776703 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.356001813 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351674991 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354018012 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.402407157 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352962141 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351679848 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.349156337 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.411131764 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361058705 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.355945594 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.351628269 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353962253 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350124091 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505500175 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401410348 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.355546492 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.403772433 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35505964 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356619007 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354396799 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.352402208 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41693146 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.356031964 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402932101 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352188548 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.509359064 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37772093 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355257786 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357022927 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.359038637 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356770289 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.354504805 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361287261 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.351914938 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.356662696 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.361717794 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353291639 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35186002 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.455530235 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470590418 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354300439 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368064763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360137586 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352828104 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.407178982 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354682022 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.351939421 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408244885 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.468990564 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.410088911 seconds)
  done (took 155.12068018 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361228379 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.36279796 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357612847 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.372816314 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355851836 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.353245013 seconds)
  done (took 9.428957633 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.357107357 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354900517 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.357552508 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358471558 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.35654791 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.354555745 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35943619 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358302806 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.360358758 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357332911 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.356959061 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.356837354 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359025205 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.359266924 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356473961 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35749744 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359399109 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352755685 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357794008 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357624957 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.464099084 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.358403955 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358080004 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359474488 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.359982933 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.359165226 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366611661 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358403794 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357744682 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.365149487 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378873701 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.357454506 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.361094702 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.364332423 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.361963516 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.360585045 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36302608 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.3605635 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355106121 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.358579292 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.358477214 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359143421 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.361053784 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.360253714 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.361384323 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36529653 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.363037786 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367579725 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358846261 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361006566 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.360567364 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.360281784 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.35903316 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361933396 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361534951 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380073562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363365855 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360809788 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360158526 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361114364 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361732312 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360295439 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36121573 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364638444 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.358607592 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362085721 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360618063 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364739885 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361045212 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.36021039 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361535182 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358522766 seconds)
  done (took 100.326633426 seconds)
done (took 426.740387941 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.688852078 seconds)
  done (took 7.959107728 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.601314926 seconds)
  done (took 7.874289023 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.778496802 seconds)
  done (took 22.057040467 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.446556524 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.37358649 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.366110624 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.368815576 seconds)
  done (took 26.826388602 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.802703929 seconds)
  done (took 8.07261941 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.363364767 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.354491426 seconds)
  done (took 13.988633795 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.51263403 seconds)
  done (took 7.781007489 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.597127732 seconds)
  done (took 7.877217668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.36443546 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.374245536 seconds)
  done (took 14.267977502 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.335574172 seconds)
  done (took 7.60832158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.466192356 seconds)
  done (took 8.735982075 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.366397537 seconds)
  done (took 7.6403986 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.420312212 seconds)
  done (took 7.689618644 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.309233492 seconds)
  done (took 9.582116649 seconds)
done (took 159.231459374 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.356204059 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.354724743 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.354718174 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.355070337 seconds)
  done (took 26.692814293 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395106331 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394096741 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.396029587 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406191936 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398444265 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.396520285 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387021522 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389511035 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407357622 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.400012034 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.39606173 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398107969 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395042831 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388828902 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397887358 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397455816 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407925954 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.398535085 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.387957622 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399047197 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365550272 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40707601 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401249072 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.363671701 seconds)
  done (took 34.748315204 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.885020131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434750673 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.517402346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.41554264 seconds)
  done (took 7.525515658 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.416163197 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.41776954 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428817325 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.466522874 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491273908 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.427683538 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393504833 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385896687 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.372348198 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.418351095 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494093404 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.433627782 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.501836001 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365131384 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.552273769 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363355279 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365110915 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.41518556 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.467656809 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484355487 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.36282379 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.41614222 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.419389207 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.431163292 seconds)
  done (took 35.564947975 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.366003012 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.383205222 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.363740895 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.364232409 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.373262506 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.363141666 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363781726 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.362086531 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.363316718 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370569701 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362706321 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.3768077 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.364714837 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.364868435 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370019257 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365161849 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.370333521 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.364751307 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.365126736 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371396038 seconds)
  done (took 28.626281972 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.359299777 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.212791481 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710334595 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614358408 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.356068162 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.368281762 seconds)
  done (took 27.896142575 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.434517455 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.592920548 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364627507 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.720244274 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.820690679 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390968714 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365845304 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.606093113 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.918720521 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920022829 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.432720482 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.435144256 seconds)
  done (took 20.278715441 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.360863649 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.368215048 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.379657133 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383203695 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420094607 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393972853 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.373784815 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.359030385 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.427565793 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.447943248 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392382191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.41958611 seconds)
  done (took 38.00765565 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450332631 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406353541 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.251056782 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418998042 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085609332 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573762456 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368957935 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.837390022 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.373362689 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637565222 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362048277 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475245095 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617037392 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366423873 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369842265 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.359779098 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612069253 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857154305 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37253482 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.462501393 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395671591 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366814539 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.486664994 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.401912239 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573570966 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.50691646 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624709171 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140810113 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656788992 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382323149 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375842078 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362696001 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638788678 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023599831 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483910597 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376090265 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366860258 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.910618601 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.343187958 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.399008043 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382403577 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373522583 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375424481 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36587959 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300145276 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364284341 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847518911 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.378289587 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.077800499 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364555492 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376547532 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459419269 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.369389488 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.935605349 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446197491 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.397890481 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.364546375 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456003149 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955512094 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.88495481 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386764043 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.31015214 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363519858 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.475918268 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018438468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.490340236 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.370826122 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370654188 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300497407 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.43840713 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390296753 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512231718 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.388869641 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018641455 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089887901 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405577796 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306831373 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924615843 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381314443 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.309966476 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593130202 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144533401 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302479246 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.313404227 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302488395 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079645476 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38284875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.750153074 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390554728 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.859613674 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382755727 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385680061 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392098978 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588871698 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.247345959 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370649334 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.382403967 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501004121 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389269231 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.837234175 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307346666 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.373573765 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623834624 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.580218036 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369499076 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.35417369 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614353728 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387095338 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.389645574 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376719875 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.3869519 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.947967177 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406043772 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892079437 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392950522 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145326105 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11646712 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379979106 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.494737163 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370184286 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621719706 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.142035234 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.536401098 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436255707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369601065 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370579607 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.47471194 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395536825 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.530580902 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.367155694 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380062217 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.387059776 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.371000207 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313361793 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.370289739 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378202971 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.154088785 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.592461938 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370456785 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651300331 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304339704 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517305131 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380056116 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.593443478 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.574529285 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.391346854 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62802723 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377918674 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382804173 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388861376 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389533238 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469307583 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391924849 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.377505254 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633229794 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.37414081 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374298456 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.497593544 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155717827 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374618169 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37320905 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36938346 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964526869 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374094539 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377003056 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261434357 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.38465363 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440498443 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375723595 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.384010128 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.174649763 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402886465 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.383461101 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.373405184 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601962626 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37915396 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.406386579 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457260341 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.584565059 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960784359 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410614396 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.30711463 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083306758 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.06517363 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372989557 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.559794125 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371720406 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383642974 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384727422 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374223578 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960927903 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398753683 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.405907052 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.386985657 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384792693 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.38075041 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373923743 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.157634614 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.935540479 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394813577 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.390797021 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517466689 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387536588 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307124654 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890449381 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37424245 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375792937 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.151252734 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411768089 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.410249587 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871456583 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632228725 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38016473 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408646927 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.517544886 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.414129668 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.371426712 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37438885 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409414956 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.396499994 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388582758 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.387435129 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.420404056 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.744179339 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946675086 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11532509 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942300006 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330048018 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.397276576 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.266041406 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851008105 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310605494 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.0320076 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562854058 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874988782 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324879907 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596395669 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.587270208 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166522542 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386755624 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602103228 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301244744 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.386559978 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411786642 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586037828 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410220664 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391334278 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313188992 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.657362913 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649627144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381837809 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461890816 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855540959 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380613416 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.161235334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.438940683 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.70064902 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570907701 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.012868195 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.763421669 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377881962 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388153411 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871974521 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383503178 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902481393 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009721268 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405173506 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.600404779 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320244912 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389026805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389462207 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.374492543 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.673018813 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.393478479 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.640326111 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388098603 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30966848 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382909982 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921707502 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257089265 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382605256 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377182646 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134767881 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395629365 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681606333 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.39911404 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.155628915 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4041925 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312476369 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31379066 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.07051373 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379957628 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355403628 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888339829 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.399686547 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386390692 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40740924 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23167532 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635695674 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.393461165 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967939974 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630524121 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397215244 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407629332 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.479692222 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378977139 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.38538626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.261581643 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615245428 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404513785 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608875831 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.286518667 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.294734514 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.455549255 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618998465 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.263036838 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381181482 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644620695 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.116611239 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.386910288 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13427587 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430119289 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37983101 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399887061 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38827546 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408375449 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471854038 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389254298 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.391058204 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.390930839 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555506978 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388232593 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409271674 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.396952768 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476001026 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.942005329 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.161721409 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.161311326 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976800933 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169728846 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990291575 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418330858 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384017993 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390728463 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316640929 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532076886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.907279709 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656149972 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512362605 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.388313836 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431734795 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388078232 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401261127 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600940693 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657552988 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354259594 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384357192 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.176189421 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.542238739 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393349218 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.592685324 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894023596 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965914681 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509302289 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392587606 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.862078599 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665067577 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.4742661 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385220511 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974580688 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.39007782 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.734002253 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.416580014 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394839978 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537354926 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393914213 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049112933 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419053482 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.538955651 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.157830024 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.452088771 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647850439 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.86433544 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401748363 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978593896 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117531287 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662316065 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454331327 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393395188 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.496310859 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534365878 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.38315338 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288828715 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385964128 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233072045 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.098377479 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396656173 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976294766 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674211069 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.38424428 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.387369443 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418565535 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394663948 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611244055 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102061857 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615622117 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397649797 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390663101 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.956382084 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980447787 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424111499 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321137338 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.391190766 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642519391 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647047636 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410309419 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.840828264 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.097193942 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950860446 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366636737 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409890125 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389599299 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102416292 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990176387 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.193241133 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908052642 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.054066663 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38682785 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686719152 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.393551355 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394137697 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670610912 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.392381637 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38883237 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409223826 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.983685392 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184673906 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.397284559 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.584005141 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.33239697 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.615591685 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451437004 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34939324 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398494313 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.571943475 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393433039 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517099883 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400486554 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.390900002 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409547801 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.130216895 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674508794 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.395234647 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.383882819 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.375709596 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409256028 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48904084 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671481669 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396786029 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.065219379 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741816913 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642687874 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389775328 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.378391315 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.394877663 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390928098 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108662336 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399207232 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390380959 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975846723 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.400879481 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409750935 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395332446 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.60476329 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599257295 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396758853 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412264894 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390890972 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413978797 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.297126996 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.158685873 seconds)
  done (took 1664.846638596 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.412000968 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.409070712 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.418375548 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.438563395 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.427235382 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.476306315 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.457448071 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.491168007 seconds)
  done (took 52.832405893 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.395953033 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.553333261 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.422403895 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.394177204 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.4095882 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.389105927 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.878531559 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.421399549 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.407954567 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.40063867 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.39560447 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.410476551 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.066049525 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.409238949 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.394872734 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.387304823 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.409078357 seconds)
  done (took 66.45934216 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.402171816 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.025104869 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.498580473 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.400023649 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.507259719 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.424624861 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.319319604 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.440138907 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.39256091 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.405285781 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.066830184 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.396223472 seconds)
  done (took 85.582759241 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.408811334 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409055907 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.4126629 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.412748209 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.41261581 seconds)
  done (took 8.360679867 seconds)
done (took 2098.694529085 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.400397093 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.09888584 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026552174 seconds)
  done (took 5.430139912 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.545517271 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.593120002 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.713517551 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.718678616 seconds)
  done (took 7.873524097 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.67941359 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.773756581 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.591095144 seconds)
  done (took 6.347002659 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.677278284 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.417753903 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.419450218 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.396229722 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.402405439 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.40123401 seconds)
  done (took 20.500772755 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402659411 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.403855458 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.401890699 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406010648 seconds)
  done (took 6.92020457 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.379351695 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.101350497 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.381089302 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40267363 seconds)
  done (took 18.567300199 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.145453456 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.161207302 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.14649905 seconds)
  done (took 7.754897636 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.427531455 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.429384468 seconds)
  done (took 4.159347555 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692112461 seconds)
  done (took 2.996573754 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.413993314 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.452983208 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.477641282 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.38095695 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.677751011 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.771255348 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.031395009 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.618828405 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359981569 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.60619373 seconds)
  done (took 31.094246659 seconds)
done (took 128.859552869 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.218587456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.768198467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.601283028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.185890157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.630589063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.598032489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.822378135 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.155979554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.752385883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.696151651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.233074994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.627477799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.555888382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.763307023 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.552141962 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.644430232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.630627171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.363302007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.930684365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.076616228 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.819712515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.829307952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.059244991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.901227145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.636357257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.553401614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.41261614 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.39709389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.085451749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.489099895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.558842625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.249555157 seconds)
  done (took 194.101967527 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.404508233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.396128059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.397408181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.405235277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.413054701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.421843652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.398467658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416143509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.395161217 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.421243434 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.399249305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.423468676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.397814401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.41123837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411944153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.400159858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.405862604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405689265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.399220826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414364194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.414897101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.400686598 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.412882976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.395841623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.413197194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400629498 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.404097573 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412510901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400542487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.40890513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410787331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407519532 seconds)
  done (took 206.330626435 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.397601437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.401140383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401844979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.405828366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41385155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410277707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.399070717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.421453714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.40043446 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410124699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400921066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.398015335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.400830705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.399220496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.41479101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399931262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.427490987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421617472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.405368633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.421230205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.401316667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420853167 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.401251646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.404290677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.419975401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40093444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.415542503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40760874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.415358375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410788893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408752494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.421262351 seconds)
  done (took 206.388417206 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.608509344 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410627046 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40786048 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.367942485 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.409986693 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411601644 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409047969 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.612795351 seconds)
  done (took 14.950440827 seconds)
done (took 623.075599594 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.720509369 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.420920722 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.610072415 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.435882286 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.223636754 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.450899428 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.429407065 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.602165552 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.36608331 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.613580716 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.71492188 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448526326 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.854316245 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.43197525 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.690444343 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.537099893 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.343855489 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.476718737 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.755458653 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.987998141 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.689962713 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.902289327 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.62955266 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.349746295 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.844853063 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880860638 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.145327227 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.337695968 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.450653498 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.755790296 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.081635062 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.402774882 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495809946 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.495353864 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.554306349 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.533720362 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.380333581 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.492683066 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.629670944 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.662864446 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.984592551 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.173399255 seconds)
  done (took 95.294805813 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.396785548 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.396585561 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.395290595 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.398180148 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.395837844 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.394709236 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.39616717 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.391692109 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.394850791 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.396867029 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.393598886 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.393990062 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.395055514 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.39378618 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.396478257 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.397466008 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.395446391 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.403161393 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.394177387 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.393539187 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.394628388 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.396327278 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.395867773 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.394736656 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.396544157 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.393309885 seconds)
  done (took 37.596739557 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414141279 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.66549605 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.833087235 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.424643596 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.412032895 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.417509337 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.492556832 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.421593001 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.416467441 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420024051 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.5707351 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.425020692 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447015476 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.861259969 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.42301921 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.416076851 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.421653945 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.415731659 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.673294604 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.428721506 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.511608499 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.422340059 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.492011154 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433793793 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432161594 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414759732 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415023499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.97084985 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.440415353 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.570973488 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.223961683 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.496990383 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.934873857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.86276973 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.219812662 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.42431993 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41624527 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.576080275 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.423578487 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.415752204 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.499323954 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.423606195 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.839225639 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.062195498 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.440632137 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41640895 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.990821811 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.594916477 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.664690342 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433221736 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.862823778 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.42385755 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.416994063 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.419608428 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.659274468 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.43084805 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.416626161 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.998809461 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.447334994 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.490468084 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.425992867 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.417697638 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.683890993 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.427811458 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.669785987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.425148293 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.426912731 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.435084672 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.840291276 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.427900544 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.078774707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.460138214 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.417615248 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.573556848 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.677050714 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.029465263 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444113248 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.68836604 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950675646 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.518635894 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.42893853 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.963547517 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.518423046 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.430196281 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.422893705 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.419780873 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.42223685 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.469465699 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.497603052 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.010512093 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.09068443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.025815183 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.525719639 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441761696 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.422062548 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.002035386 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.447140952 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.420495931 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.832531842 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085805368 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.44590997 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.428088256 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.083543967 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.447718793 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.496356288 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437615301 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.848005476 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43042887 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.466145382 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.418155297 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.427941035 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.445244398 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.497674868 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.434317701 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.42352505 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.051104049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.607442686 seconds)
  done (took 186.629980082 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.415625239 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.416086433 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.414390026 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.415072242 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.413110567 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.421627582 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.416081347 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.415174487 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.420675099 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.417646999 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.414822375 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.418771065 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.417896788 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.424585172 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.427850364 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.423824129 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.073471171 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.418621114 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.418680571 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.414232331 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.21168005 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.421900951 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.417639524 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.417358632 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.419573887 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.41943108 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.431203048 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.414168614 seconds)
  done (took 154.495973259 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.421727429 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.994702838 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.446909266 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.554780336 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.451259647 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.421841392 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.553101792 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488133003 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.447659472 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.424045865 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.423543069 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.72994288 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.433870722 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.938918103 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.620180882 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.578903243 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.949315249 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.447314471 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.419467225 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.424108941 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.556283225 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.429236908 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.72987718 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.00303099 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.447554178 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.998007441 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416364047 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.425934107 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.421414807 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.995536701 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.446574452 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.732909065 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.507957949 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.48903224 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.021159417 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.967254684 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.968651306 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.582123078 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432363707 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.426582369 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.425233219 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.405908783 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.001005685 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446966524 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.425353805 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.988525633 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.450576663 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.426490602 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.434557157 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.423806677 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.485736689 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.506378483 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.756156957 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.014007689 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.524254231 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.447324488 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.55550721 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.827199355 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.434821266 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.947877121 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.416840447 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.003203997 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.448555133 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.41130621 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.42730353 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.432836046 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.574928334 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.564509942 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.954880629 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.4478854 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.946159124 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.598149465 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.4318567 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.426144231 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.425556934 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.000547176 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.969174558 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.600346107 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.564184762 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.624918472 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.419987495 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.425285913 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.418470289 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.503532251 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.435401327 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.006124548 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.967765836 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.448461724 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.429087775 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.431288299 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.427438024 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.604221346 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.024574524 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.527932417 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.947935803 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.761388006 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.742059697 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435043922 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.491873824 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.449191833 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.737198997 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.440364335 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.484703278 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.894904202 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.744590311 seconds)
  done (took 169.89051223 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.670181985 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.621305103 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.521995007 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.566740214 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.034259795 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.007572797 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.667591207 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.573800972 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.543129723 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.692756652 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.603511561 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528575017 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.596999128 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.517514627 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.178028557 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.521830588 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.548486653 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.588558588 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.544255461 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.467858593 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.084679768 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.721381827 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.608193788 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.286778158 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.525617892 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.247059978 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.994043553 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.960291506 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.608574969 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.741060097 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.973287499 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.561852076 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.385868314 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.117747716 seconds)
  done (took 68.137926249 seconds)
done (took 713.354098173 seconds)
SAVING RESULT...
DONE!
