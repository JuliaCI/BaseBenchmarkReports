cset: moving following pidspec: 28869
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.243288263 seconds)
loading group "string"... done (took 0.547842879 seconds)
loading group "linalg"... done (took 7.754971388 seconds)
loading group "parallel"... done (took 0.16785818 seconds)
loading group "find"... done (took 1.255054906 seconds)
loading group "tuple"... done (took 1.930009885 seconds)
loading group "dates"... done (took 1.299293538 seconds)
loading group "micro"... done (took 0.243336381 seconds)
loading group "io"... done (took 0.698310677 seconds)
loading group "scalar"... done (took 40.330226603 seconds)
loading group "sparse"... done (took 12.397353986 seconds)
loading group "broadcast"... done (took 1.121107837 seconds)
loading group "union"... done (took 13.25156769 seconds)
loading group "simd"... done (took 4.747196359 seconds)
loading group "random"... done (took 9.637382007 seconds)
loading group "problem"... done (took 2.09966507 seconds)
loading group "array"... done (took 22.374090257 seconds)
loading group "misc"... done (took 2.076240193 seconds)
loading group "sort"... done (took 3.434030196 seconds)
loading group "collection"... done (took 19.355088144 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574399656 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140070961 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150558912 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145164545 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187402305 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.149857744 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154274132 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.105517416 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.925706402 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173988425 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151902688 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514769683 seconds)
done (took 5.093940603 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218959342 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094652018 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105048735 seconds)
  done (took 0.862612812 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.079425875 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143840665 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093003676 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078257498 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093907601 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077708006 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092678146 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077879834 seconds)
  done (took 1.32562468 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085675049 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.095811481 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082516987 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095543454 seconds)
  done (took 1.026348008 seconds)
done (took 4.18906673 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732585842 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270681358 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206092234 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464083309 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192780639 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212242781 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676015259 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351396779 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253249505 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097979555 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143761421 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382052333 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134917492 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685577953 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088930713 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123995168 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178126686 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447087797 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083036142 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10920328 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114711148 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140511299 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.125224808 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090367686 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184119574 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08030858 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.185524009 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104902786 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079029308 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.283695694 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199537447 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685783708 seconds)
  done (took 10.811172001 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111996061 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135722661 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097085793 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138607832 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133552582 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098545501 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084772229 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094194792 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121234097 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175668511 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130369984 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122469885 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094679294 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082145769 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118545253 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244117288 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121438645 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104246198 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098956198 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102671552 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120633116 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112322883 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108138954 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092480193 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165400923 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216136839 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111781381 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123243071 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093919316 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111624046 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142131315 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142019642 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093854909 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079687983 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172316356 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123055368 seconds)
  done (took 5.101723125 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.059578043 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191397498 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121119852 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17094969 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07930433 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141329793 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094014656 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113065725 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255624916 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.111373805 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175781709 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142155048 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098533477 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099344287 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081641302 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096594904 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.633637424 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156144111 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134156585 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116615175 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101979372 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081760024 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363103137 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098705028 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078105738 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097649058 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068998374 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160700172 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097709316 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.130544116 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119849812 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080307141 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134151091 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206178122 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107143909 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133321407 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095155123 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077266678 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174469585 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102676127 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078003862 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120104476 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134254822 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133080351 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094898697 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079386376 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20362936 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09409016 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113462699 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.910179266 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180768528 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123830545 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095821466 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32599634 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116067915 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079545439 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094287322 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259962482 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197777379 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096000186 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079220437 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095123996 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07665114 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09714855 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382668323 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079035696 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.814292623 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082533634 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106414702 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08128668 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098568568 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102435024 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084592771 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114452013 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079810267 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09834803 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081976776 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094443831 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08118327 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093380306 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106549939 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083879937 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094831838 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149989694 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.118918471 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077357354 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117070489 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130027407 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082941701 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093078534 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132530442 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077170162 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098757892 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096905727 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118277425 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098349556 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106898949 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081383696 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139215909 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094511729 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134321849 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.091128219 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123579226 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096252061 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114747065 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109700702 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100870626 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084416876 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093864816 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077171882 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162889768 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07991722 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09504749 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082615478 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108294587 seconds)
  done (took 22.353315806 seconds)
done (took 39.989313326 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319202658 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100548929 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101431348 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101345682 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099835281 seconds)
  done (took 1.47080633 seconds)
done (took 2.193955241 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28317093 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16888954 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092242135 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163494392 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091802481 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168349424 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156179518 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10960427 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213795759 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.075436903 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16023176 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092019378 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075653165 seconds)
  done (took 2.594119479 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094058965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113511986 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081032075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112204595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0803826 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110366184 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092890011 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116465848 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109719443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083624932 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097233292 seconds)
  done (took 1.808415849 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093233443 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116540083 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081643813 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108817218 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080494575 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108945269 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108294832 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102696205 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109067395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084075405 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096570923 seconds)
  done (took 1.805247434 seconds)
done (took 6.913298063 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092303299 seconds)
  done (took 0.803536801 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.908919758 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.608076442 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.115185752 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150959645 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.318418629 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.17598353 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479226736 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127164645 seconds)
  done (took 10.799924464 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.113082658 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098409487 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098020586 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096834918 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101105804 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081855707 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100348075 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099155461 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085509567 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099353463 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084675162 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098386064 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097145613 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081635036 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099278354 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081951965 seconds)
  done (took 2.29500779 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117560656 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115853882 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103889393 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105273472 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085668601 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102452332 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104208299 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087542816 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098618465 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100878968 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09017196 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102734771 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101188731 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078707093 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102850599 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10528098 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084805743 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102762009 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104987185 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088912811 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103775417 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092869428 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086367406 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103551083 seconds)
  done (took 3.191481772 seconds)
done (took 17.803502508 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154451333 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105175479 seconds)
  done (took 0.978690859 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09663736 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112766845 seconds)
  done (took 0.934669231 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096493222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093438528 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.117548182 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106841432 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079386254 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094367875 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116188673 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079293338 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094016526 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078648565 seconds)
  done (took 1.685022049 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081321033 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106081917 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.098344803 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095137448 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10276947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092473047 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085985262 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0962593 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106760916 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076030018 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.099760874 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110567724 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083860758 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113590401 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102505349 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08192436 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099867594 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096085761 seconds)
  done (took 2.459132494 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079315069 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095908795 seconds)
  done (took 0.90078753 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079341819 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092050845 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079577596 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094652176 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092711399 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075767957 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091981608 seconds)
  done (took 1.330510375 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.49516914 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134305746 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255870457 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099119048 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.117425237 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296475271 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095346752 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.099942919 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.083545833 seconds)
  done (took 2.441887821 seconds)
done (took 11.452603279 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091684744 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11298464 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113852433 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.455705595 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10563749 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095393293 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.156433107 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246467702 seconds)
done (took 2.110417213 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148407249 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323416326 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115666517 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066493955 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094480194 seconds)
  done (took 1.338573051 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078479787 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098265299 seconds)
  done (took 0.911664846 seconds)
done (took 3.136252634 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07907731 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09463552 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.075901263 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095443537 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.076383289 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092633403 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078864001 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094675187 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.079157736 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.094597343 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07898974 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092285629 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076312144 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128212689 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096065617 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075920405 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093919875 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077187406 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096064641 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07644771 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093627848 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076442851 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09218423 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076515452 seconds)
  done (took 2.861019322 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096713541 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095541395 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.09983586 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084717568 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099792311 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085295192 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099984394 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095407719 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08441474 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09773863 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098452205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083632591 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09686847 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08271767 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096512573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099426275 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085147168 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096968523 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081693746 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098252916 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099549042 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079991279 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098410073 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101077704 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0828316 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097906397 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0812627 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0943054 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099525054 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083512618 seconds)
  done (took 3.516586132 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084111868 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093073766 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07641121 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099834296 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077044887 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095097789 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077061406 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093766866 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077449459 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092077313 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079169623 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092846104 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077488589 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093614363 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077602005 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096521819 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105141773 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076800817 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092530708 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078105619 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096132643 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076388226 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09290302 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076128061 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09193045 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076265261 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09374303 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076246835 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093167965 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076668533 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095938221 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080177205 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092686319 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08423975 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096059198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076850275 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096270571 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076956539 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092453683 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092591684 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076934729 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093015324 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076072279 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100283632 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076648651 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094566224 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076674227 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094139858 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077232335 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095850992 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076113657 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09247385 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079092359 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093574334 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081777805 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092006951 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093591637 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076653361 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093768552 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077065265 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092145596 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077243813 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09521009 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077693182 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.108580809 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.082919657 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092422736 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079215425 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093114727 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079352598 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094417077 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10639644 seconds)
  done (took 7.00793339 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081785488 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103329887 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079241644 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094710764 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075727963 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093972818 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096195147 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077188591 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094818354 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082865444 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093002255 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078574603 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094730977 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106037996 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077072525 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094780225 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08380206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091296233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077325058 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096766382 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07839503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096507504 seconds)
  done (took 2.68988913 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204536369 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102422202 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138456331 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105191481 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081689894 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103589767 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099744703 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085235052 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100104841 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081289041 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098349927 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100253103 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082029131 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096963332 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09819909 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08406766 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099515336 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083257396 seconds)
  done (took 2.591413297 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09227814 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096239962 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101295948 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096800113 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095883426 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082346657 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102126753 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105014707 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082181294 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096183417 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089480427 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097747491 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098232425 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080196818 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098765153 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080028168 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09805302 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08033985 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10469359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102156211 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101991829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088099875 seconds)
  done (took 2.818650124 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095398841 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09795484 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115571515 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.19202891 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092770744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079049503 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102523812 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08030775 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104416593 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097699308 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080339086 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095340971 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087207834 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095565631 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101553599 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080414156 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098151989 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080701172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098129761 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076414822 seconds)
  done (took 2.701846326 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105143218 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098066155 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098493753 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090682852 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097778424 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080736986 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106903308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097859377 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081479587 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123488695 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097319086 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08126626 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106705197 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103196795 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097403402 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090458805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106969136 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106472762 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081913915 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097977172 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122886218 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081652175 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105150479 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096774295 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08144365 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096677058 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098091799 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087283547 seconds)
  done (took 3.472064595 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079973137 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096018665 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077518378 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094138822 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077351896 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093538711 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077674003 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094063308 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079486521 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094150157 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079532829 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096811497 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08201417 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096578842 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07972146 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096201958 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079570393 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093543903 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078094633 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094024607 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079956071 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095977866 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08024648 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093112656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077530045 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095640303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077241974 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093075795 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079858318 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093134824 seconds)
  done (took 3.35975555 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089987207 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103677163 seconds)
  done (took 0.946423508 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077796123 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112232684 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077414216 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101264369 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085098243 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097671579 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104574064 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08500308 seconds)
  done (took 1.494465061 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09738789 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111289133 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081905197 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108566252 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109357505 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099727136 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165075127 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098374047 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103292354 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078536881 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112973451 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079020702 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103769914 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080404673 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10226056 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087129218 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094112441 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102288585 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083192703 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095352199 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081353469 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1066536 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098491426 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.077718105 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098724298 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090213367 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109121319 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098908481 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083948917 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.104567987 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086023202 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091534325 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08087382 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097794839 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079792547 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108359688 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113884474 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083671001 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106395475 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098827756 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091324371 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092603623 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.084777424 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102244047 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107457253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081046249 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098092151 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076149897 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095314508 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082994537 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092529851 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081396776 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091224133 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103682637 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083668462 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108556438 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079224363 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09775188 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083876305 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09992602 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.102982853 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.082051035 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098996812 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079605905 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103970755 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085511447 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10668941 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091976336 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.074549737 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095129766 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089902058 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120805604 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103786459 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081553453 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098749994 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078662352 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100136827 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085717276 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103202542 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104159172 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080803329 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104151336 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087714864 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097589164 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.099030381 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089352635 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095936775 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082306718 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094554662 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113895375 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079523413 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095295181 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077939693 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108564962 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084778074 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096745081 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095143251 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087949218 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09149181 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081921348 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098067985 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081591812 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108913621 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102896187 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087163365 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105944168 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107598258 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08061035 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099799068 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07724163 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100327535 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083132341 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104256731 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075356884 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100618526 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081485817 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098408823 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106965848 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078846363 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09780501 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088411375 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10321265 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095714678 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076717269 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100199222 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0807996 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101292919 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089653172 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096334659 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09221847 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075944523 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10088032 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08137818 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.100976685 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086455941 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099937385 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091944584 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079299602 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10316225 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090381039 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097502228 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081510569 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103713198 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099864693 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080465328 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104745311 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083574462 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096072793 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086742585 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098576543 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09332732 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085618237 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10057775 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080007674 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101242357 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084813953 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100967558 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099229735 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078955883 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104039779 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082633083 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097595516 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080488245 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096216725 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108222819 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082987262 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09378608 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077527754 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105014164 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079014812 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097376632 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.079851211 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.100274741 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098511572 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078737316 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097421615 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082594466 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109159891 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102745915 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08263277 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103621312 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09307624 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097652917 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100287903 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080828257 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099300146 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.080815576 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107417391 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086137827 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103520578 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100307453 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077432303 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104017579 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089102684 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097016085 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079904591 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096669156 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101997913 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087035318 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102068492 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082806731 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095663801 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082246696 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101497743 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10155209 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08122025 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096502107 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08587464 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096719575 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105432733 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081919037 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109425022 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084636001 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092715009 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101707984 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078666721 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104349172 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077011408 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096571118 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08023988 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098660615 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079808434 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100750457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07558203 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105333265 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106200851 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081354103 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097290952 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08159237 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105541439 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082801363 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102360558 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.101786751 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087112394 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108755823 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080244504 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.101297241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108961855 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081402413 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092067463 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086254526 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097493687 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080228238 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096811439 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079610202 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101121197 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107089998 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087428306 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092441308 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083592243 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096929533 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079847288 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094326446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.102636961 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083930094 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099379678 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087707355 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099660589 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082920782 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101888302 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081152376 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100439261 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100050982 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084958927 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099070287 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084619495 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098064364 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085290929 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100207772 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096644006 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083291826 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099720126 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082021076 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105283204 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080645143 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099807589 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084008544 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100058531 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099387741 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083121819 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097876345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084726125 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099269895 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081497879 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102280534 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07779604 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105801123 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099539058 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0902725 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099206015 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078122579 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104480032 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084746687 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104032046 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101307192 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083576993 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101142467 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081444801 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101827168 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089187355 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097654797 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11000972 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089638171 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100622313 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08541507 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098959844 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100630591 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080992343 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100811743 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083291101 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099326184 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081676666 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104687528 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084897684 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099659557 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083976045 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100247429 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100523521 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083069222 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093885739 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081379246 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099492656 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082321783 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109641458 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100801937 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08485112 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097835471 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082988904 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099187833 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078927462 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108504367 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10974442 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083368243 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106925952 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08125319 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101111823 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11078089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076136298 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099992201 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079715137 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09772645 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089639571 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100303847 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109570687 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082238129 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099403002 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078849213 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101500367 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080444844 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094833624 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080530914 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104092942 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083955396 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098438534 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100936454 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08528807 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101726957 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09189515 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108615681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08341996 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100736539 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096907758 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081302256 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099158621 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085596918 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101770247 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08026723 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097482834 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081583398 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101001373 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083413979 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099703922 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083277278 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10684941 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099015799 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084788594 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104199225 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076640897 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102541802 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081485616 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100430324 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099450076 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086632005 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103666858 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083209221 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108958389 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100089139 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082638893 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100681525 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079797778 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100050785 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083036291 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101044832 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081952326 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101855722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10905949 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080863517 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104099654 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082060439 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100983418 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089942888 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101697835 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103926376 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090361899 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103509318 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083542093 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108438308 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103932516 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086216114 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102387776 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083544316 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106675689 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081090577 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107207688 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083050334 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10183698 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102082121 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080351819 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10040191 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081672952 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100452238 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087946888 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10139049 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100643049 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081409858 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099308002 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082923462 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104629848 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091069199 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10351554 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086079834 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096505164 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097705677 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083856455 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098691058 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083349211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104825248 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088269574 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103480019 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083402861 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09987925 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110043604 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088576088 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104853469 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079834867 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104399269 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084484363 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104223179 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102780302 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082414201 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103971083 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086917403 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103156498 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081567002 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107817893 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.103862074 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084281982 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102251734 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083466754 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102141987 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078512585 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102809398 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085216357 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106201203 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103670547 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08312418 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112929297 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082311485 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101149169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085956432 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100025611 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106532194 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07823567 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103484958 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083104971 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103160229 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077836291 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100868685 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080875855 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104757483 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100228606 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078505297 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112509017 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091623307 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104299824 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081387288 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100564523 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097310875 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078346905 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10053861 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084507316 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103906623 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093680165 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10110077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082013424 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09833884 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101408084 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085474257 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105100798 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079417985 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097281434 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082660251 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105159392 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088048999 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100599108 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101750458 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086674127 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103305933 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080237152 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105824889 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07960237 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106121467 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114669027 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084453793 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102077287 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089024586 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110306876 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101867732 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078011005 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103555167 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086569846 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102685609 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084308302 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103172079 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118483194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086220203 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101550353 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082016717 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10437095 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082377668 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.1103014 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103074122 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083990034 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107277346 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085216112 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110686557 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104950645 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090727751 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104962616 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086096827 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101260141 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083461908 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099772859 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081376403 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103722635 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103531114 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087967251 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110066265 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082390181 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112668798 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11125018 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08800224 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098889416 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082371053 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101970052 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07924278 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102938518 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100316347 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081399653 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099563938 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082344534 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103245456 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089127709 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103968256 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084733673 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102391573 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079273518 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103692336 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104215011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083345 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099010748 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083120407 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103864043 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087472047 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106330045 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083367685 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104030886 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103778664 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083892672 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097549025 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089714874 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101208794 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085949913 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102345966 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08422504 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103514042 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106019551 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089475465 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103827885 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086039036 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113814418 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104583725 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080919652 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100331826 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088785382 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10136915 seconds)
  done (took 56.835058254 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145653096 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079677016 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098087856 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077580899 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111873716 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09842645 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078543428 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098535339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079878948 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101110962 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07846026 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09727018 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108175925 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122621634 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092118764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102995511 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07774678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098857166 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098290301 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079449366 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107097206 seconds)
  done (took 2.837063672 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104455099 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115782675 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113777167 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117549175 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088906791 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114178537 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113131128 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114334988 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097199918 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109791203 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117044899 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114637461 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090025082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10919342 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109999572 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093289193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11717382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108301274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116256358 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094379993 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11183478 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113721495 seconds)
  done (took 3.188815602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.082573443 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101759578 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083797228 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097579198 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.081782481 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097523701 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087615904 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099978483 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086560014 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100471051 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081194196 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100771525 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10366142 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078437871 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102077839 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080627486 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150397717 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106505562 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082708234 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103686544 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078299348 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104026996 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097896725 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078681682 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101674507 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086189222 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103272256 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08041829 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102780622 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082066142 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101468701 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079862719 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10394683 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102518956 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081787803 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100574336 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082352128 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102179594 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078878186 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100082229 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083560979 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098217921 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08279538 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103363699 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080936349 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100353551 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084867342 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101544493 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096999683 seconds)
  done (took 5.396770499 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103485493 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159271477 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084689927 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141610406 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119954916 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112569844 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.085983838 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140325129 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101633293 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082390853 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12171116 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118344204 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102931751 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088210765 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110009593 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10287887 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084586501 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101740987 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107759161 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083484168 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107417184 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090031415 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118265517 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116251448 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107344252 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082560703 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10294442 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107411813 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096746691 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108070495 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108729822 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089438436 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119413931 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107538209 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10270771 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.085285507 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120610629 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103137421 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086653721 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100817652 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085915782 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107948343 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11037549 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101409918 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103345836 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107473893 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083511396 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09953161 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116443449 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085407059 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11226874 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1186887 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107672336 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083797172 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107743673 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119783979 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.082860458 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101448613 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087619459 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116477225 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100656525 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087469697 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115933856 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105083062 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112222399 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09722703 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107165203 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108331432 seconds)
  done (took 8.037487678 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092719279 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110546578 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119422436 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118934487 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08914273 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110260313 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109749004 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090334094 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109030602 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115371621 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110647266 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136186343 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084015204 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115308155 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110642182 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090098793 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110295117 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109483141 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090698582 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109795726 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110289799 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119554182 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090510918 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118247739 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140196625 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10537577 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089947233 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109316169 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119595181 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110070788 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122139343 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09117237 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110633484 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120479922 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12219688 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090645868 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102423297 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109801477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090606709 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110654385 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105246454 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09865843 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109383976 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105267551 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091443279 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109418327 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11875241 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122510774 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113673133 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095482599 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10935749 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119751061 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109170117 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090432717 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118383924 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145616883 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119499389 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119527137 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110909901 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099514951 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12018529 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12617069 seconds)
  done (took 7.592114016 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106484452 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112744821 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116208129 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099213286 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081962311 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107469635 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081315977 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101382429 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11232345 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092827432 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115471616 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1091092 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090389136 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115637679 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108316131 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110928882 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087752259 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107632039 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113699951 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107613134 seconds)
  done (took 2.899124865 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09232702 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122794985 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084333137 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111017929 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106961077 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089914471 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105297483 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106623052 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083937982 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107024933 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095645708 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114137541 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104639012 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091487779 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113836334 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110087462 seconds)
  done (took 2.459476215 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094172231 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115799569 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12228304 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08317087 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103039935 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080570389 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104361209 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100014225 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07967808 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122487589 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084424983 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107611867 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104345053 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081925492 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101010439 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086901725 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099598776 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081737549 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104730559 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120764267 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094687724 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102846348 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105343779 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085487215 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104668913 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088771439 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104363014 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101564556 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082101179 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104034414 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084221127 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111922901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100925668 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08268589 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102016408 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081680438 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104069931 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084709146 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106775685 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10451096 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083047756 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103577211 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084190803 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105465623 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07984972 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104871775 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099770594 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091035403 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101573117 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084055522 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10461517 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106088258 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08490297 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115619421 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087797482 seconds)
  done (took 6.176352464 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09790919 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108535536 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080080896 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101771985 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086358148 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105966131 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107660437 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085726416 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105566891 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082991695 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106168086 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088711441 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105645851 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108122045 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085928974 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108145166 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078857797 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105808851 seconds)
  done (took 2.579675658 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08930335 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103987295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091757366 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104873744 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08378018 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106612995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080277234 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102565324 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102443936 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084595526 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103706427 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086731755 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103388522 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086673718 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104938538 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083876316 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10555285 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102232962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083824928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101178739 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086964195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103789649 seconds)
  done (took 2.931250136 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121152199 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12454815 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091604272 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231892174 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102484608 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13075509 seconds)
  done (took 1.631214272 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107795286 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120561363 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105399194 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105879059 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114635705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086384056 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105578717 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106911901 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115169148 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100175048 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105774206 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116210714 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116358998 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095299361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113029817 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113201123 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106767109 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086463302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10565224 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127451696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086477243 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115776873 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106867684 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085924152 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10672173 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116736203 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115808233 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120470168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086457236 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115900698 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112507313 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086697789 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115836152 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120871809 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108107715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096027286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106615029 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128266268 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112665413 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096217996 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108427648 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114758863 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097238252 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112399942 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116620996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106767043 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091898001 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106429112 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10787444 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13343002 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092345673 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115491292 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112600817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117086485 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096195883 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152639819 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100540518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115993761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114005361 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122046837 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116371824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093882955 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115306254 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122573867 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113799847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117000265 seconds)
  done (took 8.041664571 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101854067 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124308863 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107794092 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120646108 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095714089 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106723518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106205611 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087401655 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106966158 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10597596 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151599304 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087010212 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116463038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116633087 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086916788 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106993263 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107612926 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116417209 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085390281 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133784094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106650377 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115584794 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116710524 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095442781 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121724246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11307098 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106788576 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086534556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107395764 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106932615 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092898895 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107056324 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115503841 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085954594 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116289136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107750325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086658919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113493811 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107212844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114102572 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095259336 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127566023 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108282707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106950033 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101221038 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106188069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106515873 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085346159 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107520698 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105982473 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101805178 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121452718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121205584 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116644944 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108120644 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08676107 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106026082 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107245121 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086668132 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113631213 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11625159 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086449141 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154511265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087256633 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106925469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116167258 seconds)
  done (took 7.920406774 seconds)
done (took 152.718286247 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216329627 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.225999976 seconds)
  done (took 1.275956827 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106700494 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145820661 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.118568207 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155086863 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106110062 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126112655 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145448089 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099137685 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106082305 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084853479 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105608748 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114985875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.156607624 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105742793 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084280459 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11447413 seconds)
  done (took 2.715673052 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198236623 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25481522 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101429638 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103895639 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.109241425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087513309 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104643273 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08983347 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108570756 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084235287 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108556656 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085399691 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104678421 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085006833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109261252 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087033896 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10460598 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.106590295 seconds)
  done (took 2.874598478 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111305857 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145358523 seconds)
  done (took 1.09820627 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11650006 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179482351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312576368 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153500447 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105475455 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125295284 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154283392 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130199145 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19331041 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12148207 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120733255 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096243594 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138647174 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114380336 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092660238 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117342674 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140106552 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092301709 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113436905 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115785656 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11491694 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105342582 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113897152 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090906508 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178561833 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118411087 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083819556 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105056671 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114731916 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093517235 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112887421 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123327089 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096175672 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173744266 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100758887 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173456585 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096187149 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110705555 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114070438 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089650991 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117612678 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116428925 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103710845 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11705429 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084908795 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116683701 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105435373 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084728155 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114626239 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096995087 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112975798 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113113318 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153732123 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117118232 seconds)
  done (took 7.440262381 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782271997 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154914397 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089612329 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.873659366 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133717654 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102208275 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.771489063 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110863341 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251489505 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.753179565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131819784 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119677986 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204406784 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256996263 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963831154 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291647755 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.692886561 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100750065 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149924536 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151304445 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117140481 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134714583 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108414152 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427663845 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116164662 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111663429 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095532193 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117061551 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159076093 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12440278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114065735 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173909526 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246728107 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202004348 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114767295 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089042645 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110607345 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16709233 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261547898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191217626 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178361367 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106735021 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110678839 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098164783 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130311896 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106750209 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159466197 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172251676 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167286731 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112949747 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118103934 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097350859 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118762605 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163105286 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119105551 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31718499 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307933408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089337332 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119909477 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125046225 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259045348 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100628381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221966468 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138108553 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209658756 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088913004 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779920621 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166726612 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109917598 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093850852 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117839033 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115053458 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097651276 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165366505 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389302071 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122127907 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113785164 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088975808 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223623912 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12431383 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088847863 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159039961 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115147577 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119730431 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100896626 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120673569 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165898216 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253046009 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10079291 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11796047 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114660687 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123273562 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093780451 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209495189 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217088451 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182107964 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208398259 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098887168 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182208059 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168210713 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118341028 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171441233 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118110534 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100796457 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120501309 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215261367 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144450236 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122241317 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093746556 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116962119 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147026882 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125697201 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096198992 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191372485 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456092818 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187449746 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086991626 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12673897 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09573015 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181731141 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095010673 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256759243 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121011939 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168952359 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119803645 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086674201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119478393 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161174627 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119560272 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119556341 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099053559 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117456896 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233464576 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214664536 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120031489 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217845336 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181248258 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116850856 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169807804 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119933011 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164484359 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118986257 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118704084 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09500299 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784426448 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123232835 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097266402 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114282577 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185387442 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110375211 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100897143 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122825907 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108463655 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7503976 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125998997 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119795283 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101326072 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116637005 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118990225 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09625969 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11469854 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159720489 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225307593 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117615346 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119364699 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101499423 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181281522 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093278675 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123077309 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122823784 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102714693 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121437782 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113745812 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102135479 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187252209 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161046319 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217673525 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.56696435 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110214019 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123921677 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224815733 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088771418 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286094117 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118908414 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222125314 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160540365 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120330202 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283465645 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184097614 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186635702 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103641615 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19242208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086611488 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117211805 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162273956 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111361465 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094566525 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182603462 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101980023 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121971668 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956224997 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089836947 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244793948 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086894875 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190460325 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094373229 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119287853 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291995637 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08893391 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127142726 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162777787 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114952986 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124013345 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704435712 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124856615 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1218448 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09469363 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219101333 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162405912 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11839507 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11855182 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09581313 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182039858 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207007576 seconds)
  done (took 43.51709383 seconds)
done (took 59.758476618 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269757413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211789097 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257220362 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166553343 seconds)
  done (took 1.853838138 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170209211 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.145990628 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.143471429 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08426214 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150982413 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10557648 seconds)
  done (took 1.671564243 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.350836958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265281119 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235529969 seconds)
  done (took 1.724049582 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.313618103 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.243889555 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.468111533 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320316563 seconds)
  done (took 2.317345486 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208040621 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129697907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111058929 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106267833 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19883889 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.238948662 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139150338 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197062122 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098377604 seconds)
  done (took 2.348098684 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194338615 seconds)
done (took 10.984694612 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.234211809 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.155782209 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.166944756 seconds)
    (4/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.249400005 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.129356295 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103520706 seconds)
    (7/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.215813388 seconds)
    (8/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.242101093 seconds)
    (9/286) benchmarking ("sort", Float32, true)...
    done (took 0.227683275 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097950813 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116228555 seconds)
    (12/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.191739513 seconds)
    (13/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101838215 seconds)
    (14/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.158163191 seconds)
    (15/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.175960916 seconds)
    (16/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.216884407 seconds)
    (17/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.24299879 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.181401919 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.216895859 seconds)
    (20/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.118531784 seconds)
    (21/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0975247 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.1193849 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.103496609 seconds)
    (24/286) benchmarking ("sort", Int8, false)...
    done (took 0.219853098 seconds)
    (25/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17504258 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.218715177 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116046782 seconds)
    (28/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.212225819 seconds)
    (29/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.093515539 seconds)
    (30/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.189552628 seconds)
    (31/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.144726125 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.109777726 seconds)
    (33/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.142540666 seconds)
    (34/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.217711989 seconds)
    (35/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065827486 seconds)
    (36/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.114406795 seconds)
    (37/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.166261778 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.110478809 seconds)
    (39/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154737172 seconds)
    (40/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.147214929 seconds)
    (41/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.169668135 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09374437 seconds)
    (43/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174097076 seconds)
    (44/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076620418 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115305989 seconds)
    (46/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.211475517 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.109107724 seconds)
    (48/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.184014259 seconds)
    (49/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121168916 seconds)
    (50/286) benchmarking ("sort", BigInt, false)...
    done (took 0.233625758 seconds)
    (51/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.197378296 seconds)
    (52/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113476894 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091568128 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110555752 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112560862 seconds)
    (56/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.215623148 seconds)
    (57/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.14095075 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138247554 seconds)
    (59/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.117717604 seconds)
    (60/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122569148 seconds)
    (61/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.086171507 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135052858 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.171441938 seconds)
    (64/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093307295 seconds)
    (65/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.220862888 seconds)
    (66/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114030041 seconds)
    (67/286) benchmarking ("sort", BigInt, true)...
    done (took 0.218643698 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.116611129 seconds)
    (69/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.192958151 seconds)
    (70/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.098607617 seconds)
    (71/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.094599666 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.167467827 seconds)
    (73/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182686679 seconds)
    (74/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066196458 seconds)
    (75/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120521092 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109827694 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.086232836 seconds)
    (78/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110393332 seconds)
    (79/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.161750403 seconds)
    (80/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191425187 seconds)
    (81/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.089237423 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092868253 seconds)
    (83/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.075822424 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115539867 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120622011 seconds)
    (86/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.065973428 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117576072 seconds)
    (88/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092699247 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11710998 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084503703 seconds)
    (91/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140823912 seconds)
    (92/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.085923821 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108104798 seconds)
    (94/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066009843 seconds)
    (95/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064752716 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091628959 seconds)
    (97/286) benchmarking ("sort", Float64, true)...
    done (took 0.22795677 seconds)
    (98/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093010006 seconds)
    (99/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194588071 seconds)
    (100/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100452694 seconds)
    (101/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114502857 seconds)
    (102/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11600344 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.15743597 seconds)
    (104/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118158996 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132497709 seconds)
    (106/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.146055965 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.20001886 seconds)
    (108/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.090024668 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084572211 seconds)
    (110/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142074756 seconds)
    (111/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093217372 seconds)
    (112/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.147188847 seconds)
    (113/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.182227431 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085201343 seconds)
    (115/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132237904 seconds)
    (116/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179953531 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07421445 seconds)
    (118/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066002249 seconds)
    (119/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113249975 seconds)
    (120/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065382645 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115308864 seconds)
    (122/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135520832 seconds)
    (123/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.087401291 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 0.178946438 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09440439 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108038386 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133043591 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113066539 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10815071 seconds)
    (130/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134203358 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09070669 seconds)
    (132/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110208197 seconds)
    (133/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.181701017 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093390294 seconds)
    (135/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.122412977 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.140020598 seconds)
    (137/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.089159141 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093232565 seconds)
    (139/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.099108726 seconds)
    (140/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086143843 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.18416401 seconds)
    (142/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.108272344 seconds)
    (143/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186033174 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084546653 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116537806 seconds)
    (146/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082801216 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173015793 seconds)
    (148/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066717816 seconds)
    (149/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137073202 seconds)
    (150/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091570941 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160178278 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11701371 seconds)
    (153/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066257275 seconds)
    (154/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065459017 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115210795 seconds)
    (156/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.34884597 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136415544 seconds)
    (158/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.115942307 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.14748072 seconds)
    (160/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.088612238 seconds)
    (161/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.143105254 seconds)
    (162/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.088902178 seconds)
    (163/286) benchmarking ("sort", Float64, false)...
    done (took 0.146325372 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111831212 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089148278 seconds)
    (166/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144845419 seconds)
    (167/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065645773 seconds)
    (168/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107301614 seconds)
    (169/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086466692 seconds)
    (170/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.105916113 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090568549 seconds)
    (172/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109105008 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.084187282 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.116303542 seconds)
    (175/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093752388 seconds)
    (176/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118195356 seconds)
    (177/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.1078116 seconds)
    (178/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104789132 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110631189 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.084481797 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122192803 seconds)
    (182/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.201036166 seconds)
    (183/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.089741441 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123115598 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.219115264 seconds)
    (186/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067501897 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107686164 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066004938 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123712264 seconds)
    (190/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067572969 seconds)
    (191/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066401756 seconds)
    (192/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089490043 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065318743 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117323873 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092807788 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.088424603 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084919122 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122422099 seconds)
    (199/286) benchmarking ("sort", Int8, true)...
    done (took 0.216885077 seconds)
    (200/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0662206 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091520339 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117942628 seconds)
    (203/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.075842007 seconds)
    (204/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110833903 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091188154 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.106924107 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086659798 seconds)
    (208/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134525705 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122673218 seconds)
    (210/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085689581 seconds)
    (211/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116544595 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065530595 seconds)
    (213/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108041963 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067228616 seconds)
    (215/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111835988 seconds)
    (216/286) benchmarking ("sort", Float32, false)...
    done (took 0.148001457 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189109598 seconds)
    (218/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.169500152 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180984996 seconds)
    (220/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065781596 seconds)
    (221/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066966746 seconds)
    (222/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118984993 seconds)
    (223/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089067045 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108919702 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065733596 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109197741 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164690704 seconds)
    (228/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088980701 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108952669 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.086825361 seconds)
    (231/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067848605 seconds)
    (232/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128548512 seconds)
    (233/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066837145 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113850525 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096405802 seconds)
    (236/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116692389 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.141059839 seconds)
    (238/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084942412 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118343814 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085317008 seconds)
    (241/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118199046 seconds)
    (242/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091312198 seconds)
    (243/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.088815362 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.084596917 seconds)
    (245/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090812591 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.109152721 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108522497 seconds)
    (248/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076885503 seconds)
    (249/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066165463 seconds)
    (250/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.113696299 seconds)
    (251/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133412165 seconds)
    (252/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092571201 seconds)
    (253/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090453815 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.084199615 seconds)
    (255/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10938738 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111556731 seconds)
    (257/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112437079 seconds)
    (258/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075379166 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108090345 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093792604 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10800234 seconds)
    (262/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.075524688 seconds)
    (263/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134621353 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08450141 seconds)
    (265/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090976294 seconds)
    (266/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098250239 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08901746 seconds)
    (268/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066098841 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094491693 seconds)
    (270/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.097457014 seconds)
    (271/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067469566 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132656819 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066053308 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.114611597 seconds)
    (275/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091999387 seconds)
    (276/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090264405 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085293764 seconds)
    (278/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06643328 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109183353 seconds)
    (280/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088203673 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.113850959 seconds)
    (282/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067533234 seconds)
    (283/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108308624 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066288694 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090526289 seconds)
    (286/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066474002 seconds)
  done (took 35.691687129 seconds)
done (took 36.572047806 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09931164 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149002636 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094867238 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136751975 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122417725 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089862992 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116642041 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096841964 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121999712 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125128138 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096529815 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092494508 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098396907 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119125032 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096070689 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140283752 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123464604 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093702038 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117215553 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085541028 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117566355 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085630564 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110046215 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069100532 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120272937 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092714992 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114886961 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118048189 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085250229 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108908386 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.088206982 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115695915 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085301185 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121976627 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092398526 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116232716 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095692527 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118003699 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110177598 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084988392 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11635888 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085655406 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115997053 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092655743 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113872442 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.089984967 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11696073 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097979835 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140045301 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114001459 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093272598 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118470944 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095774355 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116452055 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08862408 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118391769 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090639222 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141031226 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117727427 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090880991 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117753675 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093888822 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11574908 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093902005 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117489816 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120065838 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09688572 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114564078 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096009065 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114476615 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085965394 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117469668 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08906844 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108553276 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09606051 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12039057 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085159411 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.114518346 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116575392 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09031946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109265499 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087961628 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111557396 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.090706225 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111726497 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068612054 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112772941 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092146072 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108637563 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094490001 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115374753 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092456931 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111058176 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097627426 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10913436 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091463911 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110052456 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.085899584 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111889425 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089205357 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109030324 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088836262 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11720341 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087886575 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.114024966 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121496361 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085969324 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116410896 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.084736897 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109584125 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099711415 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119928779 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085388278 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114699859 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085136801 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116717487 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085141027 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10863057 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086457027 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109624575 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092413668 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109258766 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088867052 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116472358 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12324602 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085282403 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112915142 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088314346 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.108977887 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091341426 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110063214 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086060653 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111595447 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076727975 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112741127 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086365875 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117497852 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088171416 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117984289 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.086692533 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118217996 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090430814 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116383702 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091918265 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109207716 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073561665 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115445868 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088572437 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111842972 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.085874588 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111017897 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085849783 seconds)
done (took 16.716859067 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086492463 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182302054 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151795763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143466394 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105269121 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.109610538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12020297 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116893126 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110972156 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140868103 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10915465 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130935299 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149390781 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085392881 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110733116 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09001599 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110856226 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101205689 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146429225 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131487689 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159804941 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085849587 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144551933 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133017323 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119721492 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11219263 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11105058 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.089814118 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113476519 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101927452 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130170361 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113299302 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.086569982 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131067746 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10285092 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118031766 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087225282 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116818045 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086992373 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110632574 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138112487 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132097891 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091808433 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116592682 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090106755 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11263788 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.087199365 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119509249 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097267749 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113198591 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125501091 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154424184 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089487144 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119785955 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085331578 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120181345 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119412046 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.088379077 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110975283 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089151026 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11002009 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.089618343 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125320275 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13955463 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090680273 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120300487 seconds)
  done (took 8.491829996 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102774512 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137392206 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104157701 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128124786 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110738499 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.086628878 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111222937 seconds)
  done (took 1.723304405 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08705203 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135878664 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113341248 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138308441 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.136036479 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110697077 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123292953 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087896013 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129964817 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112690329 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110911885 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152393345 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088380992 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119144695 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138739199 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086958229 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138148294 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087491143 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113921386 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138077883 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091329855 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134268515 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089330877 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111937266 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104777787 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112710746 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163273758 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091807993 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113015626 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091087813 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109811902 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163519164 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.129161743 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.09916169 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111552522 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105223333 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129050607 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085687147 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130910954 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134620305 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.104552342 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112093997 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.088201692 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11123513 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.091990216 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125044844 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08964652 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112941089 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091094166 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134421101 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113181175 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.104464639 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11233625 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.091227585 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113393951 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092914565 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122506072 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.088367588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133975205 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088997135 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132087839 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131988619 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104287408 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131880191 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115067654 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103722158 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129636375 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.089916176 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113795367 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091482836 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131574453 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08636079 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11362767 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.12626886 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.089890663 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.13932614 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113487404 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114907991 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09759198 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113146083 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088540332 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11314698 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.139854439 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094434049 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113194627 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092448579 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116685822 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086754536 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111195007 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091602242 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110773164 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089799684 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115486657 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088918719 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114825618 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133404169 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.089188875 seconds)
  done (took 11.780515097 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088579823 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113183755 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090351317 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112501121 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089091175 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114236536 seconds)
  done (took 1.565183914 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112650128 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115996209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102659824 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118641674 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154783646 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105806624 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131274122 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122797497 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106800082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125788171 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131659276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106989329 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136578319 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119315637 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106150013 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118394852 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.1309206 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098933468 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125831466 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095766171 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135496404 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119431405 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095048728 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133879205 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117499403 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09427407 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125761811 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101691718 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125980978 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122268287 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093957419 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116328831 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094796659 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122329517 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131087307 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094613348 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119822135 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118642426 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099261846 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116721644 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130487895 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095814856 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125148698 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.092633422 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122995605 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119894041 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09297978 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124045891 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130438877 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.092610227 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118214984 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094228392 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11712796 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093477321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119504396 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121133591 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.092901728 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131604952 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120204897 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094408548 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116909543 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.091371657 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121813333 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116389211 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103544827 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117193639 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120270243 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095321036 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120292829 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09480117 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117389663 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092442213 seconds)
  done (took 9.139002997 seconds)
done (took 33.633101784 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687470185 seconds)
  done (took 1.639316895 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.811297248 seconds)
  done (took 1.764737766 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.057709817 seconds)
  done (took 18.037301047 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486350995 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.574964356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.005199873 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178706671 seconds)
  done (took 3.196781087 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942049925 seconds)
  done (took 1.916690654 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280304902 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229166616 seconds)
  done (took 1.470862494 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765443077 seconds)
  done (took 1.737456065 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.335040364 seconds)
  done (took 2.29720372 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322989708 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183392773 seconds)
  done (took 1.472757837 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544663861 seconds)
  done (took 1.511191415 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.77852012 seconds)
  done (took 7.749712962 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26675208 seconds)
  done (took 1.245690107 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297822981 seconds)
  done (took 1.268282857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.513220428 seconds)
  done (took 4.486093975 seconds)
done (took 50.75583953 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09755073 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125526825 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100376459 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123383889 seconds)
  done (took 1.413506011 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099188246 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120173348 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100183147 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119262949 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124815065 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095233349 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122600395 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.098881344 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119174215 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096609484 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118437546 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118525729 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097179179 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121684379 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09261887 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122757049 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098819397 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119814688 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123017531 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.094602055 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117743313 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096791475 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123511669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093486312 seconds)
  done (took 3.60706759 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097461285 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118171371 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.094770917 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116816793 seconds)
  done (took 1.406000381 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098797842 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1420456 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137368038 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.098431253 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140650242 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135258487 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091113863 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115841239 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09249838 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12416401 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.088999325 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149094877 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136814752 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098230459 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125998065 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087588345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115619041 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135281573 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098134068 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124872628 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092722553 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123920853 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.08973287 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13763052 seconds)
  done (took 3.755119453 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169374753 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125394789 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138041658 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.093954009 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15846044 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13988798 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087100123 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139501955 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086788339 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129917917 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117323963 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.131208523 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12730939 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086471862 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112448907 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086962495 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127658564 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127059026 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089860584 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126877425 seconds)
  done (took 3.381135765 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096568078 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116128885 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086685692 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115236261 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098282161 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119546891 seconds)
  done (took 1.611526588 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089387907 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113318483 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088069519 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112524601 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.092418014 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113794316 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087188818 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113587657 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087837796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116318866 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087308827 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111977578 seconds)
  done (took 2.192892327 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.491559481 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117784717 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.1174872 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.086475299 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119757789 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.086977532 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127778989 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090588404 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138127039 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087726274 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113510341 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089843705 seconds)
  done (took 2.646355403 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229567336 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123117145 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281934191 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366617609 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153795939 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174705635 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277941834 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15852639 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.221026694 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16425436 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201468902 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219361713 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150682081 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18658133 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135944099 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143357732 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200632264 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242886024 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152051915 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206899195 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223133405 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165974828 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178612655 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149011887 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138390247 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168770854 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094920289 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1276451 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230361293 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173632454 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211606181 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159485848 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144209391 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206582601 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248755155 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217900588 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280336637 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133271545 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149031271 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16451643 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260047102 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136308722 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20015693 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152078343 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12837769 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213378132 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163037841 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173047816 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150735887 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136653996 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192511096 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235351371 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187344541 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135071263 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298630253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146758147 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.196554291 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190626175 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246045331 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1955981 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207753404 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092485906 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184448717 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21399066 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182108044 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170386313 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.203921036 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144625241 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196779623 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185754836 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161218062 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215816374 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183156539 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1380518 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16668831 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168524013 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168222591 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2533923 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206524875 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.093760849 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164937583 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147535511 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130416728 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192333658 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09714072 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235510644 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142414604 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161715846 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21062709 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15700929 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157827409 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199040797 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225699291 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146724316 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083429547 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152926112 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153629834 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215475499 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111676108 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157596668 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160016072 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128866528 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181398208 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123657956 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18220962 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115579513 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171429971 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18177541 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125137785 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159587665 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149552287 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123839259 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200120064 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19581118 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141411186 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131830315 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205643809 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175305277 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149536086 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175626652 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223090228 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115681236 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148019224 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225086672 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240672867 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110805128 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226309449 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153249385 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106013686 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131156011 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180663204 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153470356 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159798546 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133402347 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180814278 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230324815 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097345164 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138434069 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190218584 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129975145 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130787876 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161253295 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146903313 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13742252 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123010081 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151961083 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206852935 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176920762 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152466512 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162753069 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150444885 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251113868 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139845424 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.121767534 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145809353 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119162871 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190080246 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221661349 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102827729 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229016659 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169667463 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201542538 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193561845 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106080414 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175797078 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128980852 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091635138 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217711719 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166214479 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160132162 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194353917 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224400024 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176202728 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181622446 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196103198 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171528669 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162971768 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155004169 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1110157 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158952059 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195974899 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095695808 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142909815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132779672 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146828928 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115005138 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131356199 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220094127 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168559567 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187586842 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157733645 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148633201 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179694065 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127248845 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171279095 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175512223 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14636124 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196692676 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217130869 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184083208 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141404954 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197885804 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118803045 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123330534 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113373075 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194947685 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106496551 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134604696 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163438949 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179700856 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177374589 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200791972 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208419852 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196228793 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188870455 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093766674 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166980205 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183998505 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200713566 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163217276 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137783493 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148802106 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177768544 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156244309 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25211695 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16732696 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174469254 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23197142 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148343418 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103210041 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15036865 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190944507 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151852738 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201129277 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119305199 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139625375 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161063756 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131996166 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158497696 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18175113 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160439528 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213767143 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148690932 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18227459 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126638345 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160990005 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158317387 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163330025 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080961277 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172057321 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229391295 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146552831 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166174629 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188850508 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129384736 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307457032 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237454068 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191334472 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135722255 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154538332 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158887179 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163312565 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169043348 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176485613 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156525687 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184639579 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157027851 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135425354 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139405469 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119515339 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148188152 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129827947 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145897713 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175543566 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137404662 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183396584 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161507396 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158155443 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170210037 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147415221 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143368154 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147933465 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213525711 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181580753 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235634381 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149546794 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177413082 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230094427 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097486859 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130281381 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131039824 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175627597 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106986535 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218438405 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.185584029 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226850619 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179869291 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192402664 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138844412 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119617595 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154761738 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171729407 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204546733 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149854375 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158725042 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228606503 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117751554 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129830159 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175865236 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31203378 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118413572 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221898071 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079289149 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280205378 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123897884 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130469017 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13518411 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231064611 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134603695 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187089256 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169597368 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169077952 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163484017 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148464693 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188891411 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240838409 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199063541 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176621582 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1316922 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153456301 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174968369 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215464312 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155736927 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111791203 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228752324 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193406735 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193808411 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138821552 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166217392 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166642172 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155265656 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213285925 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105672015 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232204795 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133535151 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190659507 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151928255 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143714884 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173481406 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.211957891 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112824194 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213091284 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180752155 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133669673 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104148085 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193212979 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179962344 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155079227 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098971442 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204654376 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09674115 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218173503 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226628576 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133333777 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152712649 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146291055 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133425365 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152733503 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15605836 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111969113 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162567921 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201409838 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132824464 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215836692 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201563051 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16645086 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172049269 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143714454 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690594784 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129249467 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192314072 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158099106 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232569858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148529793 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171351121 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157199877 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165875778 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194816883 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158975289 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228231019 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216489954 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175930958 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129988323 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156678975 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160671909 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.140922965 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12254487 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167845135 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155844437 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152674651 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.202549671 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16981206 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105581912 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137661597 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224468075 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131344563 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20782919 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177386767 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137575244 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171416588 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183721581 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132124943 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176712655 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235958761 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139755542 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123759969 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132277409 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154270774 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259751433 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096311506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229954166 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18245329 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157414102 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167499419 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145229442 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219931439 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15541193 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184439077 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145443312 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159266493 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156461808 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135793122 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100979355 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154502842 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164939918 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148304586 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156651345 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163890971 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193803627 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122047153 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115295474 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312412386 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192070423 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241753525 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106665779 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134335549 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160413248 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150372934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174233468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177679342 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133553308 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13586472 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134508249 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.12837269 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135604097 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12802258 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22149613 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163218404 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203309967 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135130561 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276461485 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111076312 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153695528 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114659178 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10338496 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147976746 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144730973 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157711858 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216835461 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233500405 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146474928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131935501 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14856037 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096542014 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134677951 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163768432 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163372824 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176229778 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144026845 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079935016 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15390374 seconds)
  done (took 82.226597848 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161303655 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130775427 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145188122 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199792181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174933972 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267302289 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207610865 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252277358 seconds)
  done (took 2.613168155 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.091896747 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14395497 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155901785 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13217913 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090568872 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117901616 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342998238 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131644183 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115739741 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119467506 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171300703 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092289009 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.547271535 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089158031 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118247141 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105060327 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.089901461 seconds)
  done (took 3.7231104 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.474307358 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.720489058 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.509738475 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.095270941 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.15247083 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11164464 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.716930207 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195567928 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113259048 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485247433 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.779312172 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157754382 seconds)
  done (took 18.589063425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.113548264 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13534017 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124792097 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153321512 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140343011 seconds)
  done (took 1.749966974 seconds)
done (took 129.881397906 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103095547 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399176964 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070921418 seconds)
  done (took 1.581838774 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108000479 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.139458559 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110505874 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137392833 seconds)
  done (took 1.583252981 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09723012 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12594666 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109254977 seconds)
  done (took 1.415333112 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320166378 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.18943862 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.1674342 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.104365911 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127830982 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101435057 seconds)
  done (took 1.417886068 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096205612 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12644125 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095952366 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128096348 seconds)
  done (took 1.531687461 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095598648 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0705142 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099792986 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073350654 seconds)
  done (took 1.420336818 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112220492 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130594861 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103000121 seconds)
  done (took 1.431420388 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128280751 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137442985 seconds)
  done (took 1.351890008 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104834719 seconds)
  done (took 1.186541132 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.1159193 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.166880971 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190112907 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165375132 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234642041 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.169228953 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139792542 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.140872187 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.100583335 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142541735 seconds)
  done (took 2.652651425 seconds)
done (took 17.430797955 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10183789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420924948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410965714 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11471459 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722434762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378866746 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029532553 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144772193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166701591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092063173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138756394 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671975546 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.058639113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376327146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.01590964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376075564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674638119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119765335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122172957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.091728659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013670301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089952098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120000411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090950269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700711823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425839324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092779683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37545617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090693753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12491104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381873108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120949924 seconds)
  done (took 16.932018504 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094202184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171777604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097665362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135659654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121892739 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.092341924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123374188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092894229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180283588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12130556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110365923 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120722843 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124456697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092854208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14079466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091168981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123529792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091764727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12006837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121499345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110921283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11873815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09258065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120650406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09307416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133701785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121163429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092246423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119685068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097326972 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127137093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09365018 seconds)
  done (took 4.776534028 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139086812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180698866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127334235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126054595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167212645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123212326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197238424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117174883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183115526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120918085 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137736021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091510715 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155160983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121190297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.112785571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120330183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095682023 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120424821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09105482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121470044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138631337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091230722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121228691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091129545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121261465 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106421896 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122645594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11938235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092130816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125587669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098972819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121714023 seconds)
  done (took 5.094965636 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09671927 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124940267 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10821444 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136861563 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09423568 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124330868 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096242475 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122854501 seconds)
  done (took 1.996754854 seconds)
done (took 29.881465599 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110044136 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126099871 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106501199 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13321835 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101963454 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134309762 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090208121 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132048605 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13276747 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101014926 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136644682 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.090798044 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121722402 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090942461 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134218813 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09787052 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133641875 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100926021 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134719227 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134411403 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093398799 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132915314 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101557175 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13444584 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10661093 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135623913 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136881907 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098100869 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121700311 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09329056 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126463299 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105106398 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122391542 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.1065299 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125461922 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095819091 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121749838 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093022902 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133617646 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132530008 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.09824313 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132555444 seconds)
  done (took 5.976518331 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108479792 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141604142 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106639243 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081044578 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115345125 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080197188 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139038796 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078678127 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109231504 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109686683 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073536131 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105260071 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07783478 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101600658 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076253845 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074371006 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107444706 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074134937 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07526458 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105517536 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078607787 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072200755 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10664445 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077033619 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075048384 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107915051 seconds)
  done (took 3.555758873 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098521366 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133350146 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111083905 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180979818 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158869722 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098209273 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130449898 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138550841 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106488861 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119533538 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.094444394 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147225625 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109363696 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127040922 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091106794 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135754892 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134429139 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093054542 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127595017 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110825094 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136944892 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101429349 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140478056 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13136157 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089788838 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121906418 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095596042 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133627646 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096524335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130065177 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095684564 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12356914 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121814966 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103023698 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124219838 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093637393 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141363206 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102822579 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.1291792 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091729127 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12361281 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121112199 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112020162 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166178328 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090131252 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127676109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12756733 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102612796 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120761742 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109339256 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130092317 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090314381 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123727808 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09011506 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120279652 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105657243 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122478067 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093693929 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129309015 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123732477 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.103031081 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123571771 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107776292 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120097915 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098521773 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119932917 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091859854 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11826101 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142201476 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092103823 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162991443 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092602856 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121718374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100885539 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127671564 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127288437 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.091486233 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136609163 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101651488 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124106803 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100663345 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124389515 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094506283 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138903554 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123065533 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.093853014 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12097395 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.097948052 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122686126 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09317905 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13544464 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091358536 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123781045 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109321696 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119660141 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093258831 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128645167 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125492333 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.090585905 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133653132 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097101888 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121414076 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102562411 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119755035 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123974652 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102375838 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125404181 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090726865 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125583777 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.097669903 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121237024 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093840899 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123955822 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092989964 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130853055 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099579275 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12476837 seconds)
  done (took 14.649127582 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22819397 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214374181 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.232387637 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26069721 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13369951 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116490455 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211462838 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.1557185 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122984989 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15721312 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171408902 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188797762 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170587305 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.17828383 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169676644 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09103359 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14156804 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165178702 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215662783 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255552534 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141534089 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130757069 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159345309 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157203996 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.104588639 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131956472 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.107795498 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132378058 seconds)
  done (took 5.761832697 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106974005 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152878877 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098275311 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142674114 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146242502 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091612731 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126153506 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093489064 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133079294 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134077051 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091798686 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127139327 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099061154 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130745428 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121810655 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101245842 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131643962 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09352241 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125369217 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09626907 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127346978 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101156896 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124949666 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.0907572 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130518018 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12050453 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08453711 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13930013 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092279294 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141344469 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119444331 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098610632 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131723841 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092517157 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122179643 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093324368 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123263601 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094591183 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123154109 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090633957 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120930965 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07665649 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12141989 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106538871 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.125916767 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078994187 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127484312 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127200446 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.092824937 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119883515 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.094779191 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124285232 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094476687 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129337809 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096849838 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123075173 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094998195 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114799281 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098828049 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123512271 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0834384 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120647646 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097319078 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116840354 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099980728 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126441133 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090846297 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123415923 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096291223 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127159734 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093882205 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124287473 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090074708 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12377752 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094994007 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126183136 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096116284 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120171084 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092418481 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.121672568 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075338755 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121567616 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073525202 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12510286 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091425281 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121166262 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094032492 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128358601 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135728876 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094081373 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131228295 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093287344 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121041804 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095974943 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112296209 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095469585 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137266299 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139868002 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093075718 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121126733 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105511817 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124638458 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091297786 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105334498 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099198822 seconds)
  done (took 12.795744925 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125960387 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151415219 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094242303 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14078544 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154094356 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155545626 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099021992 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130059831 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094389107 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142381998 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092792754 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130954598 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096938304 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136377826 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155785733 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102855309 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123646075 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107033954 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130118286 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168693123 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110294583 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14029835 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107758443 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122021749 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098209039 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138189116 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159285982 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10682094 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134582552 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141152374 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106211649 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15936194 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141507327 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.096542303 seconds)
  done (took 5.425261311 seconds)
done (took 49.254782508 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.232849909 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.413369771 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188979668 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.114803481 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220277428 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.194439263 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.20042013 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188337613 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.213022676 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191088835 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440751948 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.994486733 seconds)
done (took 58.712444936 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.30501377 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.296593471 seconds)
    (2/2) benchmarking "String"...
    done (took 1.431364092 seconds)
  done (took 3.847878644 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.489701721 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.140828978 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451690683 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190936588 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.20648279 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.482685549 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.883616525 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.551144614 seconds)
  done (took 28.026826568 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.198707319 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.276372438 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.215285436 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.197967638 seconds)
  done (took 6.008373768 seconds)
done (took 47.79686793 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.20998345 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.230374735 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.194125277 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171701292 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304018221 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213677872 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.469992609 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.194216868 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207786034 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.174766994 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211978246 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.197309353 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199711248 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.510691502 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.190739371 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.208888551 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.217088984 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.693441576 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.601975009 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.195775872 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.209859962 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.265460421 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.209310464 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192775287 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.265007155 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.199259839 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191037539 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.220025694 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.808022682 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.196066213 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.211959527 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.658347966 seconds)
  done (took 190.345077375 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.192969859 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.219815525 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.348681418 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.259708116 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.694934965 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.392494127 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32662205 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.777242016 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213651641 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198822648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.447327809 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197486609 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.520407878 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.231381798 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22270786 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.281238794 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.393981053 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.537830645 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.245671436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.361058205 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.20697855 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.396604514 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.357623753 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.422292717 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.222174812 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.319118238 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.212616574 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.212254559 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382635413 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.331830201 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.196291251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.231342367 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836578896 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051038105 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.196522079 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.235642033 seconds)
  done (took 149.997225675 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.23934368 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194292047 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193910022 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194971818 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22748 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194743251 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771076441 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791882441 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.699361061 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.433090053 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.63970991 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467697943 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194658269 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28960031 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207417487 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195418545 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209626545 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238642533 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198783229 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194786641 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771084231 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207359378 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.421340701 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373506881 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212614812 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228659113 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587352615 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195636551 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228274645 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529634718 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246394643 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195205788 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.592558784 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.559261464 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313710736 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196752516 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230475825 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195763017 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477043477 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196731799 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196865704 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199562373 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891758763 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20026629 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.774781704 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196047525 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.14798441 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196795473 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196673909 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.615732746 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.910397421 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21669477 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195437897 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19863582 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197151292 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19757777 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230155497 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.542128511 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292645209 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.214385182 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199200435 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22873153 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.1968805 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197745524 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.384468452 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197520914 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.785945581 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.25221148 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.307047835 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774585476 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198034322 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296070216 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319380487 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197457112 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198640811 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198039109 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198070848 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309252649 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.19778552 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.196967498 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.631017351 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.376261708 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21757258 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.645049987 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202307954 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296342478 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199044929 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.641761863 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202313178 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198608732 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964652218 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198726921 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296790915 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198743272 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199814879 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198656402 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.635170035 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798256073 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477656681 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203201902 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.489890809 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203575509 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.647656572 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768032766 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.86413252 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20020178 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311920032 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37818676 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217858462 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200060655 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.644367275 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205012238 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259314912 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200328527 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598407347 seconds)
  done (took 366.242853308 seconds)
done (took 708.941653958 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.878381696 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.872414466 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.98304176 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.862297109 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.832041994 seconds)
  done (took 10.557565465 seconds)
done (took 11.683997804 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.392733724 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391683475 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261786499 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393060072 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229485963 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41072109 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.372265428 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220844041 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302964067 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284946878 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303339211 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255229526 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22927942 seconds)
  done (took 18.177901876 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52243244 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523455273 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26483018 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528011522 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245261795 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533415924 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405531662 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418873731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418849049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234671287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215665963 seconds)
  done (took 16.441682859 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534102213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.529414386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268322432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568507002 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244666082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533254909 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407315828 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422227073 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420093902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23646965 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216237508 seconds)
  done (took 16.511446483 seconds)
done (took 52.259224147 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211782546 seconds)
  done (took 2.34404446 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244594035 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411467893 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227329133 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214310696 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212049473 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211517555 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215922031 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212118525 seconds)
  done (took 11.081179693 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207844027 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207329577 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207136885 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210595496 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210988514 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.207987561 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211148242 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211115995 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210569604 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210881672 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211442159 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20823288 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207810274 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209273634 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210350364 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208473412 seconds)
  done (took 20.483709151 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210000293 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208958839 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208709079 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209453227 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208003762 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209140006 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210306467 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.207658696 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208660804 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208898926 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209895994 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210317244 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21004136 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209786115 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209479242 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210255564 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209719544 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210604518 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214749152 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210291722 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209413265 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211138176 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211520006 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21046053 seconds)
  done (took 30.171771875 seconds)
done (took 65.210219874 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.345517917 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.823510388 seconds)
  done (took 9.304319219 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.212888515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213332799 seconds)
  done (took 3.562031984 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212789709 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212846302 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213504453 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212047267 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212484026 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213199179 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213339967 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213593254 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213485743 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214234241 seconds)
  done (took 13.265651918 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214181549 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213464155 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210886204 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212911521 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.212942895 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.210090405 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214035785 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213176439 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213475195 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212080645 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215139388 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212392457 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213128452 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21149121 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214053187 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212354566 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210667862 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210717059 seconds)
  done (took 22.962802533 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214535292 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21384941 seconds)
  done (took 3.564555288 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.212271293 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21251048 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21279064 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212394003 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.211025355 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212936424 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212406642 seconds)
  done (took 9.623000512 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215509707 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387633943 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.469608007 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.824929221 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21628648 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219130347 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.081320657 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.219905157 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221012167 seconds)
  done (took 13.991650102 seconds)
done (took 77.406464407 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.228999846 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.227815174 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.390927463 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219692626 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.226558955 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.510078403 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.258849818 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339217242 seconds)
done (took 37.537298789 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.22394816 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.190674091 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.963298209 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.193177359 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.244302538 seconds)
  done (took 18.72883371 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.285774673 seconds)
    (2/2) benchmarking "read"...
    done (took 1.551010419 seconds)
  done (took 4.97471705 seconds)
done (took 31.063436777 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217077636 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216367028 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.214603508 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217726532 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.214159348 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214791344 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.217133696 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217948371 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.217598243 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.216784799 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218476439 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215775298 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214309359 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21795799 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216607376 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213673948 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215936771 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215199064 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217363082 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214847571 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217541642 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215927768 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214739485 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215071686 seconds)
  done (took 30.327335017 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219219367 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216909755 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218778948 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218114292 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216713108 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220138218 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219273812 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216209642 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218871092 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218627412 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21619088 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216336156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.218023311 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215474179 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219473528 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217025855 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.219082003 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217083391 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219399319 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.2166769 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219079969 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217010072 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216520313 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21779581 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217491156 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21608589 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218994197 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218218936 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220068333 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21654269 seconds)
  done (took 37.675367458 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224865024 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228206461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220698931 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219972572 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220422791 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219820946 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.220655263 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220338361 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.220230282 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.221679695 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220123201 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.221553204 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220728561 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.220696782 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.22154069 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221438079 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.220761086 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220501793 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220704702 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.22209128 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.220307083 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221130808 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220236251 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.221540796 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.221813461 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221160263 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221812572 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.2217665 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221631732 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22247852 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223814614 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221994805 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223176639 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221902895 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.220252887 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22221401 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228316387 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229948868 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222566807 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221442482 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222871117 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221833211 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221739724 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.221330946 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222229854 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222524902 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222827565 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223038057 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.222695525 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222505631 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223725476 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223024404 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223785097 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222981848 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223743246 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224196961 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22294008 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223760853 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223856459 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223798007 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.222604242 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223050167 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224294123 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225098435 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223320557 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223554955 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224058441 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224045687 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223321893 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2240476 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224141905 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224729139 seconds)
  done (took 89.165954105 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224368185 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222727271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222541443 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22219936 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222923617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.225623347 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222820573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225352322 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222291969 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225143952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225769322 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223277318 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222759511 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225909422 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225448341 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223560107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225295787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223290047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22565039 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225816051 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22546605 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22267905 seconds)
  done (took 28.076472876 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226704744 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226735457 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223490536 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226606528 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223912557 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225782753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225510605 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228465844 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226913984 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22385024 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224313178 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226305727 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223613384 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223735676 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223870411 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225623701 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226658135 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225346102 seconds)
  done (took 23.204786023 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224190516 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22494843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226664955 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223567188 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224851237 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227233771 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224950015 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227005814 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226487834 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225103241 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.227788443 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227223461 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22808479 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224535879 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228140478 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224673213 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228377853 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224631934 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228488973 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225511133 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224132193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227631941 seconds)
  done (took 28.122160194 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228030281 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.227935872 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225094397 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225578038 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.225528656 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228071271 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22874916 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225254751 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230241585 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228695468 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226059783 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228615412 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228099443 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227073522 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.226713657 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227056751 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229508211 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227666826 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228545017 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225928951 seconds)
  done (took 25.697376833 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229465208 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231013513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23015497 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231726714 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230468817 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231011635 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230751917 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229850661 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230865865 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231954549 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232338632 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231154222 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230659921 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.232619965 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232190341 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232222426 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232214411 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231941141 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232155867 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2318769 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231910871 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231927152 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232471747 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231128607 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233144429 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23213151 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231786897 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232620018 seconds)
  done (took 35.635278509 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231323652 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230730439 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229807481 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229890865 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.229951932 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229474401 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229458391 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23022719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231936647 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229611387 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231957035 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.231804273 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231844044 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23264788 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23254042 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.232767378 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232969521 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231309041 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230887288 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23105647 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232401431 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233565359 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234008336 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230644142 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231259386 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23283571 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230844066 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231937016 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234539968 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231541907 seconds)
  done (took 38.097942095 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251409682 seconds)
    (2/2) benchmarking "in"...
    done (took 1.253150385 seconds)
  done (took 3.658271404 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232464602 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233461886 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23239623 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230745076 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231420723 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234170505 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233953695 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232124029 seconds)
  done (took 11.014639767 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233843615 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234322101 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234944863 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234490676 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233468383 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233954191 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240927024 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254595573 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234974697 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236393403 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.24176805 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24321156 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23647006 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235277211 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234918759 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237664282 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23547452 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.234731664 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235830046 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235659391 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234977058 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237734355 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238143411 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233524073 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236479178 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246236219 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259258729 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236695449 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236461235 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240557634 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236705787 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234149119 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236712047 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237065211 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.236997598 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238706939 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245313488 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256109563 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242722172 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256957952 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236982261 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234718742 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237287563 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.237639164 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238485977 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238283598 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.236698076 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.241690137 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235915979 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241335491 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.241741714 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237313965 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235487815 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242135988 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239136707 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245383123 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258520923 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241964055 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246519104 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.248800881 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270712507 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.263718135 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240315334 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237972091 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248666053 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262149204 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246913646 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.255336492 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235774417 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239538985 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245240488 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271175326 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.264417666 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.2386955 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241118026 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238946933 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239134915 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239530363 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247249003 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261389705 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239536111 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240366682 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250607846 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261894825 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239168839 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.240998322 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24075173 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240126793 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241471959 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250478407 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.260706327 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240578884 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240015642 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241142669 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242949025 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.240928355 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240681695 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240600239 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238140302 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241116099 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241682573 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24548474 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249487991 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241423837 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241536429 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247513125 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.261507059 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240660571 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248051925 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242063176 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243088233 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.245192021 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247967021 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239763427 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245480524 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249003055 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242358075 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243532677 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243676039 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242359681 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252610415 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.26745651 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243144107 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242993516 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247879247 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254045724 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244122099 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245190522 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243255892 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.241197889 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240227261 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24482785 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.242410737 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244156639 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243002014 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242893691 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240613164 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244281426 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244276801 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.244621453 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.244528066 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243431282 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243730324 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244267668 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245357618 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244236589 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249120567 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264297012 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245580633 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245492774 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241298984 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243404536 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244337969 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243939957 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244497575 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245855989 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244722687 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244746458 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245289762 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.244880724 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245230732 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244905863 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24892393 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.244378172 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247811962 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245005481 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242545972 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.244936919 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244976619 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244300276 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245149288 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.244569148 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248947986 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252841867 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24611783 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245451895 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.248781477 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246341193 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245768746 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247119656 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.249871107 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254003618 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246377652 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254427358 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.26656065 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246404828 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247876808 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.246494781 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.247124906 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248312295 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251414984 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.254460835 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26061625 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272029191 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249347428 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25089364 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248122963 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251643093 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250405435 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248511099 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247663801 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248989379 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247317136 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248164992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248233873 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246745019 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247300746 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248267934 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247911344 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24902371 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247730017 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247933814 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24759978 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245808033 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247882732 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24896618 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247863065 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24603816 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248157141 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247845341 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248133561 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249377154 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254959964 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.2456631 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251001307 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249969519 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249687965 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248230634 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.247956581 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249703766 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249493066 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25648347 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268503775 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248753495 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254726538 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.270146429 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.248717503 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251403963 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249081911 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24780546 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253545568 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257871437 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250618863 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250818082 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250184003 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250213813 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249225171 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.256856422 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266981864 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250415093 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250870814 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25084487 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248869265 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.251012031 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251452046 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251081564 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252838255 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251359903 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251260558 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25144741 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250915065 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.252586314 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25111668 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255376193 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.25909614 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256504885 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251460862 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253369507 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254306159 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255748308 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251941776 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253039406 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251833023 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264147357 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277711707 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257501247 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.271944587 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252396028 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257518654 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.274439163 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.256077606 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252379182 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25397661 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252224894 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251762123 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250080175 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253086483 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.253736986 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253402875 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.255495045 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257509961 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253191053 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25201293 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253421721 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253734579 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.253168847 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252861575 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.25294664 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.254289864 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254914703 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.253390501 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.254125409 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259790855 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273816736 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.254058855 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.253419931 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253670255 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.25370142 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255080025 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.253931738 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.258204858 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262070852 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.258445197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.262417905 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257564439 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264262061 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254859266 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.258651113 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.263115894 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252497235 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.254562294 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.254541921 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255304847 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262154131 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276153169 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.256873787 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.260211767 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255769381 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.256933914 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.256691822 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256020603 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256416349 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255830168 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265417588 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277716934 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.259652249 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258900147 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253522455 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256790607 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.256925525 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.255729387 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259145576 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.257853273 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256937456 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257331395 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257944285 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.258000892 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257817116 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.256971548 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255902523 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.257778434 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26433477 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280112663 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261627455 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.257126765 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264165743 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278114159 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264777519 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279571262 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258098752 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258599835 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.257367038 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259986595 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258238956 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258471687 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.257288213 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.260175936 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.262380352 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258567597 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.259755464 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258652942 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.259491772 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258589061 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268947925 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282416578 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.260977147 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262791383 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.2556205 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.260803731 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263168788 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.259237724 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257811632 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261114968 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269837697 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266650192 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.2594217 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.259893813 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259512738 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259899284 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.259281943 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260141795 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.260677523 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.260190611 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.259920837 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260810531 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262064346 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259753631 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260370689 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261890841 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.261127068 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.269137207 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.280477447 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.260115384 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261844187 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.261701899 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261592026 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.261416751 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.262335953 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262849281 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260195461 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262907374 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267960632 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.268592421 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.262704995 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261351042 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.26216461 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262249006 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.261676164 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262990629 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26176612 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263473719 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262438907 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261968495 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.262721209 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259936209 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.261693416 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.262873664 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261906573 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265692319 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269470048 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262938101 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.259318716 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.263466289 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262491992 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.262117528 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.262935631 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.26946183 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286474478 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273732941 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272859691 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266756873 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.262852969 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266707309 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271090396 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.263364483 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.26383609 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.263866053 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26359899 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26508298 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266356143 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264756991 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270122891 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.282838406 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.263233935 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27246982 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28430832 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265282789 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266136897 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272349092 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265699919 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26281495 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26359704 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.26482363 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270827216 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285293248 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264895591 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26697198 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.265298858 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266699607 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269766307 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264521191 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.264637545 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262429084 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.264951291 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266148295 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265014952 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.26278717 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265173858 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.265977595 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267732957 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27229919 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262701148 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26761186 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266074235 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266774508 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266417893 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26645914 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.264083378 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.262498255 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.265362842 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265927488 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266535629 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267738272 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.264963957 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.268673182 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268572239 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267994025 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271129491 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277678179 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274381308 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.264483056 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267674544 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.26769151 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.269001113 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268119019 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268414645 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267414622 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267316086 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.267584125 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268567209 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.26726432 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271852761 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282880288 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.288125195 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267624613 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268589393 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269558457 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.268999657 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.265109225 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.268704653 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270655064 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.271837137 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277507314 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269588686 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273914681 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288407152 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269463559 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.272532467 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.272395811 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277470275 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.270720313 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269264575 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.269309808 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.274037565 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284378966 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26890685 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280384632 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297246876 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289615166 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270333506 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269531994 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268788712 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.269084274 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271802848 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.27023303 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.270154894 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270346972 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270324235 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271766666 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275477333 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272543997 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.271592068 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271169058 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271162239 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271179043 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268114972 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.270298974 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270113219 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.270283314 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.271302131 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.271906095 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271010533 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284604901 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.299507568 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.270768823 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.271779714 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.26800157 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.27329446 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27389809 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282261278 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277518678 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.272210667 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271373979 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272924103 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271476332 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.271384479 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.273554241 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.271343236 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271820825 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.269947115 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285048564 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29903577 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276584704 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272488758 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274179658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273273073 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273898933 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271745814 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273592557 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272247008 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275896708 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277711388 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272971573 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273251609 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27627897 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.280425653 seconds)
  done (took 750.281581237 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271714918 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270412453 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27170851 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271054617 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270585335 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270765282 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270857741 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271086231 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270398552 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270759214 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269996992 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27034326 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272031475 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272594784 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271250855 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271101684 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272553357 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271748125 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271486986 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270889715 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271247564 seconds)
  done (took 27.885605674 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.275963588 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.272833575 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272632162 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27512007 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272458935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273998542 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.273411962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27430201 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275294251 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272722673 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276259994 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27582278 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.272608616 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273999765 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273711727 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275674536 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.274740898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272672945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276005446 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273023002 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27709265 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27410628 seconds)
  done (took 29.226139244 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275574181 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.276454018 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275320295 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272943199 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277063214 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.273916208 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276723636 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.275599449 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276541985 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.277257914 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.275676281 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.276816322 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283169341 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.281049172 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.277929093 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.276714211 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421339191 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.277771336 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277149652 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278393535 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.2756276 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.282457498 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.294807113 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.274760544 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.275500349 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.279102249 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278317538 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278101067 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.277913076 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.279270892 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281752337 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.278013946 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.278610782 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.2791494 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.278137609 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.280016155 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281943809 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279852932 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.274680137 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.278848946 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290174624 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.298786072 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.278644858 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284371775 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.297931291 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.278406608 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.282342187 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286576012 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.276168595 seconds)
  done (took 64.038147737 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.27891865 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.279333059 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.276354835 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278693215 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.279522978 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.279126166 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279103901 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277778296 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277566339 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.276707594 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.278358774 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27740898 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277198957 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.279471123 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280072552 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277003352 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278493591 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275862011 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277652829 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277173677 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.276485885 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.280898217 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27995095 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.277655953 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279233806 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277657876 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278047019 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281610689 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.278268169 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.278233575 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280426318 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279425474 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281291838 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279510405 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27874309 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281396825 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.280790859 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.278591953 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282037745 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.278867815 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.281388741 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280449922 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281815421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281317632 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279951797 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279605071 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278610772 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280242669 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.279100158 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.281352485 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283384329 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.280003088 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282684475 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.279673348 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283200244 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.282568862 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280023162 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280933112 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281718141 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.280249261 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280010106 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282683205 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281211568 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.282472402 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283418043 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.280948402 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.279575459 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283937659 seconds)
  done (took 88.220433087 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283269844 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283713558 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28341863 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282973867 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283546648 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282848212 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284917592 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.283296174 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283504666 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284556481 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284539225 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283574938 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285003879 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283325296 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283987392 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284039635 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284370285 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283986486 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283899317 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284445116 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285234548 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285483331 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284617272 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284869436 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284998149 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285629225 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284485731 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284741155 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28516496 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285132443 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285101159 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.285217075 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284833887 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285219473 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284669328 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285086651 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285920086 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285538071 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.285148269 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285971274 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285697943 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285468138 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285096148 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.28622725 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286439313 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28600596 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286661083 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.286770861 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286762977 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286451653 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.286589519 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285946815 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286029529 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287050851 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286664243 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.285517294 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287883114 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286954764 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286202234 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287313682 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287641513 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288618001 seconds)
  done (took 80.884892601 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287191361 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286569682 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286011903 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283703929 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287796737 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284615509 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288084041 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.2886389 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288023362 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.287953526 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28783545 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285573766 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285374974 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288118144 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286380372 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283790677 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285652843 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285903538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288232509 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286616032 seconds)
  done (took 26.935651118 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.285381524 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288409925 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.285584279 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285698034 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288575098 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286218473 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.287920273 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288898254 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28571872 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288401159 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288968658 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289222576 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287197851 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286838476 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288350995 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286236174 seconds)
  done (took 21.801583559 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.286423328 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291108191 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289725411 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.289702291 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.286473893 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28599758 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.288977572 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287016461 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287178026 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290421752 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290097057 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290362323 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.290079815 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289859136 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.286659689 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.290418794 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.286903069 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.287973716 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.290129708 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291371046 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.288342691 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.288170509 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.290227226 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.290529029 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288251914 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.289273798 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288320392 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.288163282 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.288637765 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291075247 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.288695149 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289302379 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288277806 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289597309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.292415333 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.288248432 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.291679609 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.291407939 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291493252 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.291962343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292274605 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288436449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.291935542 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.291708309 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287989219 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291303372 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289466901 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289829795 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.28836543 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289548066 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293228738 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29342213 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.293573664 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.292191053 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292741748 seconds)
  done (took 72.14417799 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291470689 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293102161 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290608743 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291863828 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292323525 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.289990951 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292734156 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292343305 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290218829 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293478882 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290967485 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294187338 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29028396 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292391666 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290992176 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292496469 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290810475 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292304155 seconds)
  done (took 24.45931977 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291317301 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291145792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293468915 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291378904 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29096548 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294850212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291546985 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294160276 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294083397 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291244387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291879431 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.294656043 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294223496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294464871 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292929499 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291720853 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29516293 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294470207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292671522 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292072702 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29523613 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294785639 seconds)
  done (took 29.657847233 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.294051634 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.294497328 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.293300622 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.311418091 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.311972317 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.318221133 seconds)
  done (took 9.033427715 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301370138 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295630064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29280329 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296093237 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294928629 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293885857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293514682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292754696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295390671 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293610604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294059919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296048472 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296631447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293311071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295816714 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29626249 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294119918 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294388644 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294622083 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298380175 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294960387 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296522756 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295731183 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295238051 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294754562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295432236 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296343017 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295460118 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294641003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297018568 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297000556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294685731 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296641672 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294483086 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298459066 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296937908 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295196963 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297812894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297904995 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294468435 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296374176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296955664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299097719 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295070112 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297051546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295015438 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295698773 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295943756 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29615149 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298679382 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297495894 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295813201 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29805222 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2982523 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299427046 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299202091 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296512477 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29630672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298767373 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296783422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297225488 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298950587 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296146086 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297309339 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299713074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296393903 seconds)
  done (took 86.785919154 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296613659 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297013699 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296910409 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298449543 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297766608 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298904975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297110359 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296987718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296268478 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295725721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298408261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296161766 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296407446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29766155 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295730765 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296012436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296130467 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296066504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296015731 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299056143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296275915 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29740104 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295943144 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296022295 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296252971 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300173724 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29705593 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297781778 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298771939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296233172 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29771775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296587387 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297079502 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296324784 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296800955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297959502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298380317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297358601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297514403 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300188584 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296386563 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299430672 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297870927 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297929674 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298780477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296992868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297584749 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297734579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298019818 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297615274 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298566293 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299283637 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296619525 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296956051 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297506358 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29824289 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297635272 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298952709 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298953223 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300708289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298734792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299071636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300580281 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298237559 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298943136 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298709045 seconds)
  done (took 86.860019198 seconds)
done (took 1750.027439842 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.355954241 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.389192358 seconds)
  done (took 13.961109342 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462729111 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416354705 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298539927 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.34486836 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298331192 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.301711834 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.291737527 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299296065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.297684917 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.298409114 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.298531656 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.504490063 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.305442452 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298721483 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296880615 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.392484149 seconds)
  done (took 42.622235412 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.326314886 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304892271 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423910945 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321642864 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.323156824 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.501300554 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.355340902 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305014203 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485249163 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345364283 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.954947387 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.326499254 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302174933 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.476430039 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.321918687 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.49869196 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561252788 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.95782975 seconds)
  done (took 30.306504426 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.783565087 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.336091503 seconds)
  done (took 9.334643783 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.322669318 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304230752 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304226729 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.3016679 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.299840259 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.294909299 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302236643 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297405964 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.242026422 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.436090235 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303693293 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310930992 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.322050696 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.303925828 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.301389171 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340682785 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462993977 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.30336597 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300034542 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308563087 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.303694897 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392538762 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347666102 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302645291 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.43639998 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.247651274 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306617668 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310013902 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44336866 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302487156 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304265576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.304211807 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306663904 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.922259024 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.844326635 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.317219559 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329530469 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.312245687 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.303076631 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.466917988 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305960894 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310773735 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.310377845 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.840318833 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.438798368 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423084073 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.604338698 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.324294259 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.306003257 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36963569 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306635009 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.306758342 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.335120177 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.082600736 seconds)
  done (took 110.654515108 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.300990956 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.6900705 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469934417 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.319243163 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.065564108 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.976982593 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317343034 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.60594068 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351002796 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297971735 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603731012 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831108896 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318250867 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.370740661 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.811589096 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314074738 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299505454 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.048643322 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317040097 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.29902075 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801814835 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300039203 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299636016 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.461753696 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338908378 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771312473 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.773761935 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.827294624 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.320616181 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300497019 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.797694187 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325650356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.313774461 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301361034 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.569623138 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.675751799 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665505041 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.322320031 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320109193 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303234282 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.320260654 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766677692 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676730628 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319130012 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313308367 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.772103754 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318616455 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.302508679 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.306098454 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512041797 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.945904897 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301731955 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.758694087 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.303391446 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.593340067 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.377026914 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368344209 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801167608 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318739575 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.412736415 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361284701 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303212899 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302534478 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306123835 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305362692 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665530859 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.578975053 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307944312 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665076088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800573873 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319226026 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848914405 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.141133327 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31500294 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.35665662 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303402822 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.898637909 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811517746 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.346949771 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302372498 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651100758 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322506134 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.589941027 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.332986729 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302276135 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815670242 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.308389866 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.34351369 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.303390213 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.303002128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.087166892 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307267215 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.598272502 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.328966611 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304476813 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.304949981 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323254769 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304093298 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305738107 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.308248942 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850703561 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.328316088 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.280784422 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321841676 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307195769 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302707501 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.306271557 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305515791 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531988711 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.757627362 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.32675182 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306877476 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.303868719 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.304213338 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.466125351 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.306998305 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.628908921 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.323090291 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304629293 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.307248035 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994579309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369907782 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304222043 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329932177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.228286997 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.511405339 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325420854 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.306546918 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307866606 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324323046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.611105417 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326283259 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.389004909 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.30645332 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032181807 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.326155747 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.340387585 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.608776041 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.306165297 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.231037371 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328272161 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30810725 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598220491 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.580447414 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.506505267 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310443473 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.325321682 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.010061687 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.34895841 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453830053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328062311 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309953229 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510991266 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.520845458 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307267943 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.906167329 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.308285905 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530251548 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.312298538 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612077795 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818269528 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325052955 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30750265 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.035391624 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.013069466 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.137094392 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.309706793 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.592723392 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.278720086 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.788351124 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.30828854 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.308605391 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.894804368 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310111538 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316651206 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.307885857 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.308030492 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376251006 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483180681 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.500459244 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311328873 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777139176 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.362884072 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308962964 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33041511 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313348273 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.656861947 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363251851 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.313880161 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.353829285 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.31139657 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319363713 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79796011 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.192910169 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.316588789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464522873 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962074347 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.327005461 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310276654 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.88170821 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.532605814 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880571749 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.384566665 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.637105051 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330273436 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.35057318 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.028019735 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328799484 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800663435 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327777616 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.310627592 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928986977 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328921323 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.390278205 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.311570326 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.312581948 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867023049 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329075359 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.313221332 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.61771205 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331743518 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568477055 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.311609417 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.336851188 seconds)
  done (took 1105.424869578 seconds)
done (took 1313.517942044 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313534416 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313412353 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299133422 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.321186342 seconds)
  done (took 26.479153261 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.322162038 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320151292 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.320706478 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.319068488 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321959319 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.319628855 seconds)
  done (took 9.158525215 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.40232843 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313480112 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319534878 seconds)
  done (took 19.268587569 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.534400427 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.68094627 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.704350343 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.689139204 seconds)
  done (took 10.844258081 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321321632 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321389533 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.320597698 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322584688 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.322643799 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.324837937 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322785509 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.322192741 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.324074007 seconds)
  done (took 13.134809577 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.324419465 seconds)
done (took 81.439252641 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.97086512 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.345714793 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.330905203 seconds)
    (4/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.800290869 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.182703204 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.601985413 seconds)
    (7/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.333711755 seconds)
    (8/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.548578336 seconds)
    (9/286) benchmarking ("sort", Float32, true)...
    done (took 6.333118231 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.355750281 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341006519 seconds)
    (12/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.576805606 seconds)
    (13/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.324968929 seconds)
    (14/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.317796811 seconds)
    (15/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.337291663 seconds)
    (16/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.94694338 seconds)
    (17/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.883618647 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.072959794 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.214514935 seconds)
    (20/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330502346 seconds)
    (21/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.36381577 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.343417229 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.684164646 seconds)
    (24/286) benchmarking ("sort", Int8, false)...
    done (took 4.375039573 seconds)
    (25/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.298300073 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 6.334865264 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.435056947 seconds)
    (28/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.119231249 seconds)
    (29/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.316848613 seconds)
    (30/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.529264026 seconds)
    (31/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.57861482 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.415185552 seconds)
    (33/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.992828731 seconds)
    (34/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.334244813 seconds)
    (35/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.932590674 seconds)
    (36/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.612058972 seconds)
    (37/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.299009125 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.156952893 seconds)
    (39/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.59684471 seconds)
    (40/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.832902598 seconds)
    (41/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.230483596 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341823132 seconds)
    (43/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.298561303 seconds)
    (44/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.172295198 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.428662218 seconds)
    (46/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.299520483 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.599631945 seconds)
    (48/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.30254617 seconds)
    (49/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.407894187 seconds)
    (50/286) benchmarking ("sort", BigInt, false)...
    done (took 6.317943067 seconds)
    (51/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.299150218 seconds)
    (52/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.442307556 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.816889545 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.375714315 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.280412253 seconds)
    (56/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.864174774 seconds)
    (57/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.003611671 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.316881008 seconds)
    (59/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.752345983 seconds)
    (60/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.34634442 seconds)
    (61/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.337771387 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.740033874 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.316004553 seconds)
    (64/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344663384 seconds)
    (65/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.854722591 seconds)
    (66/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.426597178 seconds)
    (67/286) benchmarking ("sort", BigInt, true)...
    done (took 6.323701047 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.317767378 seconds)
    (69/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.314315691 seconds)
    (70/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.714158661 seconds)
    (71/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.443788934 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.182505636 seconds)
    (73/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.353701969 seconds)
    (74/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.306692784 seconds)
    (75/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.464114701 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.318399027 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.56989621 seconds)
    (78/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.377825432 seconds)
    (79/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.306205318 seconds)
    (80/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.333364368 seconds)
    (81/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.637935523 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.36912737 seconds)
    (83/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.219473345 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.336153389 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.428858202 seconds)
    (86/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.731873915 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.121277706 seconds)
    (88/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.345840111 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.402725422 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186761697 seconds)
    (91/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.507061673 seconds)
    (92/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.340729227 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.340094209 seconds)
    (94/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.318359505 seconds)
    (95/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.324185142 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.300903451 seconds)
    (97/286) benchmarking ("sort", Float64, true)...
    done (took 6.320320293 seconds)
    (98/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.363108281 seconds)
    (99/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.299836395 seconds)
    (100/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.510756176 seconds)
    (101/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.5408079 seconds)
    (102/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.421920655 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.422007728 seconds)
    (104/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.319208552 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.543953524 seconds)
    (106/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.10502916 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.308474192 seconds)
    (108/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.327620285 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442204576 seconds)
    (110/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.75287091 seconds)
    (111/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.445103773 seconds)
    (112/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.689504992 seconds)
    (113/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.302535959 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.702882917 seconds)
    (115/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.353616313 seconds)
    (116/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.301982955 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.855743972 seconds)
    (118/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.433199954 seconds)
    (119/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.405288833 seconds)
    (120/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.14158075 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368380963 seconds)
    (122/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.302765586 seconds)
    (123/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.149752277 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 1.86265363 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.362084629 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.740885766 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596084557 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.321672326 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.322846102 seconds)
    (130/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.841752203 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.133792754 seconds)
    (132/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.405000741 seconds)
    (133/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.302491235 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.585858412 seconds)
    (135/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.410403201 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.303351089 seconds)
    (137/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.511696261 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.444432495 seconds)
    (139/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.702046068 seconds)
    (140/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.324147578 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.251488384 seconds)
    (142/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.338366072 seconds)
    (143/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.424024962 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.137483707 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.350145202 seconds)
    (146/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.028692311 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.640457566 seconds)
    (148/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.303726093 seconds)
    (149/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.3969477 seconds)
    (150/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.352403921 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.420260428 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.346784424 seconds)
    (153/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.30462278 seconds)
    (154/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.199520638 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.805636426 seconds)
    (156/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.700074578 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.849879657 seconds)
    (158/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351251945 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.59218501 seconds)
    (160/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.511884423 seconds)
    (161/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.305096944 seconds)
    (162/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.329194053 seconds)
    (163/286) benchmarking ("sort", Float64, false)...
    done (took 5.680779143 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.388633876 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.389651043 seconds)
    (166/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.305827408 seconds)
    (167/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.305861879 seconds)
    (168/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.214001652 seconds)
    (169/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.411011744 seconds)
    (170/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.005052423 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352624553 seconds)
    (172/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.327041567 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.089671646 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.367660904 seconds)
    (175/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.334894467 seconds)
    (176/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.336414932 seconds)
    (177/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.594814535 seconds)
    (178/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.920793434 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389905255 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.241710201 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.736613299 seconds)
    (182/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.439525148 seconds)
    (183/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35178887 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.878082899 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.43313553 seconds)
    (186/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.324563307 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.384235136 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.329329013 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.754507737 seconds)
    (190/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.33230177 seconds)
    (191/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.437048081 seconds)
    (192/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.779708768 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.306573984 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.984300664 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.542223173 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.34402704 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.328420845 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.778665182 seconds)
    (199/286) benchmarking ("sort", Int8, true)...
    done (took 6.327426027 seconds)
    (200/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.914188181 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.352083461 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.754778595 seconds)
    (203/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.157176008 seconds)
    (204/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.45828279 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.161630092 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.368691441 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.327568447 seconds)
    (208/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.371505601 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.063111617 seconds)
    (210/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.347884548 seconds)
    (211/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.350073228 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.307579607 seconds)
    (213/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.874361197 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.308114824 seconds)
    (215/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.407519796 seconds)
    (216/286) benchmarking ("sort", Float32, false)...
    done (took 5.371254275 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.309121072 seconds)
    (218/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.330946886 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.441419136 seconds)
    (220/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.310568357 seconds)
    (221/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.995894687 seconds)
    (222/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.453240553 seconds)
    (223/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.347263603 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.749330633 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.830663739 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.034934713 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.366359666 seconds)
    (228/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458163822 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.551006726 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.430933604 seconds)
    (231/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.309149726 seconds)
    (232/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.715296609 seconds)
    (233/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.311094366 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355544413 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.025549531 seconds)
    (236/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.720927937 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.000233163 seconds)
    (238/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.149328649 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.254256359 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.330179104 seconds)
    (241/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.45778056 seconds)
    (242/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.356519581 seconds)
    (243/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.108232279 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.327491276 seconds)
    (245/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.309819932 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.992019809 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.970658907 seconds)
    (248/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.330456469 seconds)
    (249/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.494149493 seconds)
    (250/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.439079512 seconds)
    (251/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.413723473 seconds)
    (252/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.383380111 seconds)
    (253/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.314671963 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.719266897 seconds)
    (255/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.40371259 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.200199968 seconds)
    (257/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.457007878 seconds)
    (258/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.732173791 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.025331626 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.417508126 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.412751166 seconds)
    (262/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.725135086 seconds)
    (263/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.946209784 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.455214488 seconds)
    (265/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.37454541 seconds)
    (266/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.083270012 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.944692159 seconds)
    (268/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.03418756 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.183645906 seconds)
    (270/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.70681014 seconds)
    (271/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.314582369 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.049249296 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.313265519 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.374624683 seconds)
    (275/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.357154982 seconds)
    (276/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.31226758 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.316786672 seconds)
    (278/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.312118778 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.866954262 seconds)
    (280/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.389889647 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.354825639 seconds)
    (282/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.052872248 seconds)
    (283/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.415020176 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.31335791 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.313175394 seconds)
    (286/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.621335752 seconds)
  done (took 944.877811724 seconds)
done (took 946.110271647 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.367270797 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361763555 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.344711849 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.366652992 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456078674 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.368784669 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.355477467 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.348781048 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.393242892 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.394447385 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.343658763 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.365265452 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34514913 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345493402 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.345697706 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359922542 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.464586587 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.345880606 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.361337015 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355882033 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.362213334 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344065514 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.395260127 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.36594115 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.350110684 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.349273913 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.348389625 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.365060271 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.457498005 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.347988231 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.348984097 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356899339 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.463069026 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346048131 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.341469959 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.366060527 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358552155 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.357054524 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.349946319 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.377798385 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.901292369 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.364517959 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.347948453 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.348348937 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347827041 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.353201647 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.347928351 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353525561 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360117894 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362337147 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.88901124 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.380374435 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.350028511 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349707999 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359412201 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.347283704 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.351321389 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365050986 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.367462856 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364758255 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.447680242 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.354133905 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.350624842 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.362928932 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354615152 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.923496976 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.361094951 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.352345528 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.896914419 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.373296625 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.923028587 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.374987357 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351272254 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.362586385 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.381953956 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.464636609 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.345996663 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349070697 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.356795598 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.348087048 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360485673 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364227103 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.355258458 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350751173 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363920503 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.372964941 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.360926454 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.350937676 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.359324465 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.36917022 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.357195592 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.361961566 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354680786 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346144897 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.361689717 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355306416 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.353134403 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.35282197 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.357232155 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.362604192 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.897881539 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387714216 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.346795365 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347357328 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.349684259 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.364509643 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.899531618 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.369669584 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.37355842 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.400078583 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352775538 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.452007894 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355103287 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368820884 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.362468441 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.35562083 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.348965803 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.450781156 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.890998996 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.383982651 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354695588 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.349827005 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369955355 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.355039969 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349566826 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.469498545 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.355059244 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367328471 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.473969417 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.362931628 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.384329911 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.35140363 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.356167063 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.375056166 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371355962 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.384411298 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356844792 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369492363 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.369424646 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350357946 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.364205827 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.364538655 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.356037483 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361087996 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349572405 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376596209 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369159422 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365543077 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.375036458 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.474576937 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353091547 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.453374256 seconds)
done (took 229.513195824 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.411777526 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.343467249 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.44343299 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350139274 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.452833425 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454301171 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.347724767 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.347350178 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.347747111 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.728686209 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.346801972 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348675401 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.345242451 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348987656 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436902674 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.35062765 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.348193017 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.69121543 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.351914271 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420942745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.34164617 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.348326302 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.351055328 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.735280163 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.352035588 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.350069125 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.422744402 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351005506 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.697790429 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.347906712 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.35219087 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.699565496 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.442146519 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.368492145 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361637305 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.35876954 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.454349888 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371677663 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.432431242 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.433597227 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445122226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.383078874 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.348395862 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.349320943 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35340238 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.35399581 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.350109074 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37976295 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353717998 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.349017327 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.693897873 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.362615167 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360214092 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.350685391 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.350494237 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372734626 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.350875255 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.353902702 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.445128405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353100421 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.415016163 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.736859173 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73674222 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.353977444 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.347989466 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351046917 seconds)
  done (took 149.653193346 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.421420898 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427557971 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.467955683 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371990873 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.405094963 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.473532607 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.37247963 seconds)
  done (took 11.204357912 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361321253 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.353912292 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.404741503 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.404877396 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353618535 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.502155073 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355634101 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36608768 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351560338 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.408236722 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355589546 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356068399 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.362021961 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.349565927 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.402231005 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.366398516 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47064988 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.356527643 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35559832 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.507768308 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353731106 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.36244455 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.40750855 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368063574 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.356515297 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.363409418 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923343289 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356139704 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35422791 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.355890337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354728263 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.39392816 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357196058 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.354045433 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353873856 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472452472 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.357589407 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354152813 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356761819 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.355434963 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356261961 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.356898091 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.357944345 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.354759759 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356685621 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380587157 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356356773 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358704709 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.358809797 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358908069 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.408770448 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357570522 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.354777174 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.35429593 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.413595813 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36509978 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358950423 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356554767 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357936555 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356115211 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.510260432 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406864653 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.357746406 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407040194 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359381702 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.359827562 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3607537 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358888108 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414335298 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.358580851 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.407029635 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.356462018 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.515599806 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.383227446 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360532626 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.362485326 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.361652983 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36015394 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.362004871 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.365217147 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356879732 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.360183549 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.364343735 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358278737 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357286913 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.461161675 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467847748 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357235079 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.372624888 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366628187 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.357263867 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415111606 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.359882067 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.356025528 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412402349 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47581589 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.414892472 seconds)
  done (took 155.545594511 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.364617821 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368298509 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361444895 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.376583178 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360633035 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.360820357 seconds)
  done (took 9.462445671 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.363716285 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.362476158 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35974901 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361530018 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361580285 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.360453484 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361421668 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363217854 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.365703126 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.360897456 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.362719949 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.361706233 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362362773 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362757078 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.362542152 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.361869812 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.361506527 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359366233 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362555453 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362529889 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.458376294 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362962865 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36175768 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.363373967 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364515436 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36198775 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370265808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362141046 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362404857 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371485765 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.383953754 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.363349733 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.364875063 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.370224646 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367625602 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.365040386 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367117174 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.365531921 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360171902 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.363618251 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.364152177 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363888967 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364484484 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.364187298 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.366635303 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.370298422 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.369291966 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372560003 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.36592535 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.365584582 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366078033 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.364939387 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.364110921 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365832475 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366401782 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387400724 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.369655136 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.365760576 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365901291 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367745623 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366284204 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.365063119 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367599214 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369798673 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.372757025 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.365513099 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.366765929 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368870355 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366042913 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.364742698 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.366469816 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.363044294 seconds)
  done (took 100.676982046 seconds)
done (took 427.800479744 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.413084404 seconds)
  done (took 7.688222931 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.546627779 seconds)
  done (took 7.822582956 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.484201907 seconds)
  done (took 23.7632461 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.380130931 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.419189645 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.37586623 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.386130409 seconds)
  done (took 26.835003789 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.416483602 seconds)
  done (took 7.691030725 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.358366179 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.378943734 seconds)
  done (took 14.013953114 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.47131473 seconds)
  done (took 7.745398221 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.852320322 seconds)
  done (took 8.133063701 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.366999657 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.382358126 seconds)
  done (took 14.289864144 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.338813647 seconds)
  done (took 7.613629471 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.461036683 seconds)
  done (took 8.736074491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.359303461 seconds)
  done (took 7.635117453 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.414018868 seconds)
  done (took 7.68847941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.966688182 seconds)
  done (took 10.240930756 seconds)
done (took 161.169648634 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.358216097 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.361150359 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.358329803 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.358073714 seconds)
  done (took 26.711356514 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399062649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.398326723 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.401343148 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.411272652 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401784237 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.397611729 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391685502 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391806653 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410848085 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.403155832 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400755483 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402714898 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.39984317 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.392601388 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.40256648 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.401478764 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.410660125 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.401704865 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392599385 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.401721563 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367070055 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410595406 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403466851 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.366578841 seconds)
  done (took 34.836741984 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.563681915 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437597605 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.520261719 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.419869097 seconds)
  done (took 7.217153583 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418814672 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.419964422 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.431743427 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.471012115 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.497564957 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.429431367 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.394223026 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388895512 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.374671723 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421924801 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494700739 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437087597 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506140824 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367060736 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.548790652 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367467601 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.369079079 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.420099381 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.472988564 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.485226074 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.369136798 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420646957 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.424274294 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436965514 seconds)
  done (took 35.644689348 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.368461429 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.38742521 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.368579982 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366855725 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.375867941 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.367157869 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.369496517 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.367712106 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.367346647 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.374648607 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.367622694 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.381827018 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.367215189 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368293892 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.375660088 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.370428221 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374753271 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.367643807 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.369465833 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.373980319 seconds)
  done (took 28.709049292 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.361707202 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.217903703 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71422236 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.618652308 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.363730861 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.370277242 seconds)
  done (took 27.924389167 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446096695 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.60436225 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.369668322 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.760411297 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.854398509 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388853293 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.371380692 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.63056622 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.982932149 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.983781638 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.43840926 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.442022295 seconds)
  done (took 20.554054662 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.377353319 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.364414867 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.388116276 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.386097156 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.429079918 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.392243272 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377645409 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.36410666 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.435783103 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452838035 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392311692 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431948008 seconds)
  done (took 38.07218654 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453541986 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417030177 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.463786627 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390097255 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093427828 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577497775 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.448122168 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.813938335 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.36994526 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638863614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375227313 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461002104 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623633692 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382681494 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373865449 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.380204655 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613370203 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912674136 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372261897 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155905232 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398742993 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366428588 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.77444163 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.405114864 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577382153 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.512967673 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627416085 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145557878 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6825477 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37840267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378330001 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366977041 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641467617 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071436937 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484757292 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377817616 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375896759 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.916119684 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.347469292 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.697167262 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381821452 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377079147 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378306117 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367243345 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301528812 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368047504 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830856614 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.374484698 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.078597353 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367698067 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378495015 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463081198 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368758912 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.941724196 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428114667 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394713107 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.366463375 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462713647 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957126982 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.116431129 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390342624 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.309734953 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370488912 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.566970303 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074883918 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.495044142 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.371957528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371822821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30344588 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.569465231 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39055542 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506332006 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.391681501 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030017402 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150930273 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40027405 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307943773 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953065061 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372278895 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.310772713 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597858817 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1467657 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309651222 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.312594085 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305082015 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12087957 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378501495 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.846415242 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392501889 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836966254 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382283916 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388560248 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393605764 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594949469 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.250272182 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369423983 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.382122904 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491561431 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391977599 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.815178146 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307612331 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.373137526 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627959908 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.582052712 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378337496 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41044936 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608087853 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387655976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386049364 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386808561 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.388727278 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.997575711 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407004605 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133227668 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394155727 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.151320337 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160529694 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37183681 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.478917328 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38145388 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636508153 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.176055563 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269301084 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439087216 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377199619 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372848329 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.669278727 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.976044095 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.269378042 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.369717952 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372683851 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.407071825 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.373474529 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332080494 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.369960188 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373286775 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.15902595 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59850582 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386758133 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656074931 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307748587 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511445936 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391411178 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.597606141 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.694195245 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.399835606 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635184737 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377549385 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389172104 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392129437 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392192326 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475991838 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395356253 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.374069158 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66049099 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.378222598 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.377193447 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.690648373 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161590179 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375286879 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.380924606 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38094753 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010463707 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377318388 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379557205 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270647198 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387796148 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443812207 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380095353 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.386498411 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.370099642 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399709819 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.405721817 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.377400577 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606919289 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387568859 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.595747318 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461744453 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.579719498 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012194949 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412375271 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311211205 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.087553143 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.068709424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375911469 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.556777291 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376365233 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386272464 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386161336 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395157861 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010404769 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400723881 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.596162827 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.390741848 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387720681 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.381403965 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37613104 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.366781138 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181643474 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387505358 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.394724496 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521344401 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.39207704 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311198375 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895483921 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381394445 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376992715 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.155587325 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412797621 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.607103568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88346169 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640611353 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378359477 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409558727 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.659279536 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.411830956 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.380334536 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381576254 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386389726 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.384386581 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388123208 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.388378642 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.699894676 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.757627806 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945552543 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150157214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974287287 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352132392 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.382972987 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.269074552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828892024 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315095902 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.039239778 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581033714 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.843565615 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336707184 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587356896 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.64178153 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239112917 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397402623 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609832285 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328779434 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.386248673 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391997688 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591055695 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412745163 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392430325 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316683236 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.662141651 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621140174 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386901637 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458231297 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82828658 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388549233 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159869311 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.437568623 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.808605359 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582119242 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.929846995 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.775283097 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380702225 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388375679 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894487054 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386032277 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911097949 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04178805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406688775 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.594212521 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322884399 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391697221 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391999247 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.378295508 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.891367512 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.386515775 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638338475 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393659704 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316588944 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38821257 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958626024 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257511759 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.386547579 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38067028 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175578604 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397259062 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705017912 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.395840671 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.366090893 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412036231 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317006706 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31652879 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.07522309 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393767542 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355318823 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917783796 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.395880096 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403483388 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385249015 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239462715 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642633187 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.398651617 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010042826 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630209226 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393713544 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40719791 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.482528676 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389653445 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.366305735 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272820888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.620761579 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403314885 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63017267 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.498263357 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.287963052 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394902051 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597611008 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.278309196 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400004634 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658650306 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.114753963 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.400950943 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140028416 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429006393 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394729188 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402283218 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387630404 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406355273 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477336862 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39714107 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.395753716 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.39706506 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565944907 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387213084 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405757037 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.399422877 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48109816 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052014795 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.325962106 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.161259185 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017965337 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185510328 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035184133 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418792029 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388699211 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38767705 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321813672 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538901887 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915826257 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660886901 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505851653 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.38835554 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410326745 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400782863 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390007838 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607638759 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66318169 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363108956 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388293235 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184521707 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.269533055 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398450781 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.599598296 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924994772 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992517263 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51291996 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390470812 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.862197084 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663627783 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481394971 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389342269 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982450501 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.396765945 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.825915892 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.41650661 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399190305 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53645943 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399171344 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101425609 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.42017948 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.549078403 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.16341865 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.69095865 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646777901 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.887091352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402443308 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024055302 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.164551518 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655788437 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460619646 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401940267 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.511767215 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536507985 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.387993457 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.274097481 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390036435 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239776926 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.099581458 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.400475516 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027325319 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674120556 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.38820118 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.389220962 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414111433 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.399995307 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615604934 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149008754 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618944931 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403352131 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402561016 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.964956695 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023735144 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422155288 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325657805 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.395473177 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662331724 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647762807 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41398835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.843687116 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.10187144 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984466603 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.368855797 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414843033 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405227102 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157243075 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029718342 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.361363914 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94216244 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.053264388 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408476823 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672483555 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397723886 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405857245 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675332542 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.396101403 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393519381 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410007194 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.023201659 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242656842 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.403570744 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.75395251 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.33796344 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.621864375 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418084422 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330237006 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393186076 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.579276863 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395928288 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513394058 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404722876 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.391093028 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421425495 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.155182742 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683986721 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.399092305 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.397144208 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.381864838 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402127745 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495290425 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637299041 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398778747 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.06699105 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.746985572 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65336213 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406137068 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.38216675 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.399339837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395265004 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121049663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413797107 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395278232 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001644296 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.396495054 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.430777997 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399501718 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61295298 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607674671 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405426669 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407499452 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39540175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435193594 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.298112394 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167940164 seconds)
  done (took 1672.577403206 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394060954 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.433568001 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.430625415 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.418493285 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.458030037 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451645181 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.457136467 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.461893686 seconds)
  done (took 52.815220271 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.394690182 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.56357483 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.429222659 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.411094265 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.414126947 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.408013283 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.890493792 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.429731231 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.406207523 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.406536237 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.403292128 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.399753076 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.088653812 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.406128907 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.404516232 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393098889 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.405904489 seconds)
  done (took 66.573035887 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.396167662 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.813567861 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.437087451 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.3993147 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.813095979 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.428005843 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.798004254 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.485009137 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.414823392 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.724539699 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.078416061 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.413604557 seconds)
  done (took 81.512523907 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41484767 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416242973 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.41650353 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416285636 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.41658199 seconds)
  done (took 8.391474775 seconds)
done (took 2102.812699623 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.405186357 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.156462905 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.055751652 seconds)
  done (took 5.523052943 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.548367802 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.596997631 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.717985617 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.72618023 seconds)
  done (took 7.902956623 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.697166783 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.798746301 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.592769177 seconds)
  done (took 6.401063518 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.71347517 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.408778847 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.400552994 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.401071251 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.405719148 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.406502183 seconds)
  done (took 20.529485467 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.403771398 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407112703 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.403070551 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.408545324 seconds)
  done (took 6.936401709 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.382031413 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.108065094 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.382598765 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.403103048 seconds)
  done (took 18.589487161 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.152514142 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.165178846 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.14867644 seconds)
  done (took 7.781193776 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.436143652 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.428114464 seconds)
  done (took 4.178960007 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.713331831 seconds)
  done (took 3.028444225 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.419375497 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.458467469 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.528441059 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.446026108 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.903273398 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.362851013 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.262326036 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.78759489 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.443004999 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.842237025 seconds)
  done (took 32.76938361 seconds)
done (took 130.877723458 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.52404211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405300467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.607830521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.499322862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.635122559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.607646535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.606773604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.465410837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.000501508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.991330119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.495717767 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.631898981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.762396446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.40562851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.763486451 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409786514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.631184144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.572600875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.178796642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409203523 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.608489747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.131504224 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.323337432 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.154401598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.633812656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.56004643 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.714749213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407524811 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.356205972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.738963748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.558759042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.408710009 seconds)
  done (took 196.51662553 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.404167356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403535571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418763218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414024509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.404157157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.425510748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.403548834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423341299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.412609091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.404243717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.440187631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405130545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405902169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.405142455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.42268319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.406224497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.431470896 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404746577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.422459241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.405406185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407739324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.405351037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.405789853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.423553397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.406441777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.405842191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.422769196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.415109145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405971217 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.424541324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.406600995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429469442 seconds)
  done (took 206.541763835 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.416485393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.41105271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.409030707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417903324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.406049981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.407987311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.40686332 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40541448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.41264166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.405353389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.422502249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407244628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.40742395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.419361238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408163618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.408040998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.406067654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.414113579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.422261958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407392697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411307061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.428714453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4074155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.42192559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.40708628 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408178332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.40841164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408077261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410219207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.415191746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.4079315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425625853 seconds)
  done (took 206.501636413 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.603720928 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.414610035 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.416227966 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.348447129 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.415513962 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.415217418 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.408484509 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.612916061 seconds)
  done (took 14.955167452 seconds)
done (took 625.829026229 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.818912031 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.521927341 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.62586662 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436370382 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.272001201 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.455840398 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.434032603 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.615945978 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.369351304 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.623720567 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.764939632 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.451933134 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.914392877 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.43538291 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.7019126 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.539396661 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.326196985 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.445071234 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.765067852 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.030902192 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.709966961 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.950027562 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.638068072 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.365908134 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.929533674 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.952794129 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.209767499 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.312828647 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.454323602 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.773588953 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.154599165 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.478442124 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.503694626 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502854649 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.562214636 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.539479051 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.445470137 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.500407747 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.643809963 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.710346076 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.041458205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.184734649 seconds)
  done (took 96.436181736 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.400838942 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.400618903 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.400054815 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.401169697 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.403652577 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.401276864 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.400356256 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.401114121 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.401494491 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.401187108 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.400808648 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.402749707 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.402336228 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.40304033 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.401075952 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.40184753 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.402448459 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.404151478 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.401452234 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.401361155 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.402185048 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.401846369 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.402624965 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.40220177 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.403386028 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.403837839 seconds)
  done (took 37.775029579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.420291684 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.687152232 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.851380165 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.426761736 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.42029056 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423479575 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.504632272 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.422891266 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.423600479 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422866274 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.579487524 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423308775 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457242259 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.882230844 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.424450798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.421572224 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.421074296 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.422307693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.696318868 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432776745 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.529829212 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.422714276 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.505416482 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.432131452 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.446910363 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421629161 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42586682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.980664491 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.443001711 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.580218805 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.302832808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.510292463 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.941965213 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.882346039 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.309766888 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.431972311 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422311814 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.585438117 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.423871661 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.422205376 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.505883136 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.422377236 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.86182796 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.07412854 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.442738802 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.423419451 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.000274686 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.605403229 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.692388049 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43201622 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.887130389 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.427891734 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.425126447 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.425451859 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.692863669 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.432472452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.424702105 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.02465066 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449214288 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.508529189 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.425826549 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.425463657 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.697761104 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.425075862 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.686029795 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426579198 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434198918 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.446010233 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.865171409 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.428753549 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.102357201 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.443935184 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.425616573 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.5819302 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.68755729 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.037845631 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.44853089 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.705796725 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958866402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.527336438 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432679773 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.971848229 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.531818053 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.430161214 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.428613749 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.427965984 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.426946073 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.472115474 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.507394542 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.029902281 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10615318 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.043422111 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.531820254 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.440004831 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428962311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.028239724 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.447154709 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426262748 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.862972772 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.100467718 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.446779053 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.435204931 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.104216712 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.446861994 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.51159142 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.433202616 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.874753275 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.428594046 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.474967602 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428893287 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.435185178 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.452211198 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.514291416 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.432858347 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.428505554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.072515755 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.612977438 seconds)
  done (took 187.863124288 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.42944215 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.420964375 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.440035483 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.421026729 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.421737118 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431305158 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.423293559 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.423279987 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.428620145 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.423266974 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.424300362 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.430814992 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.422443127 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.42658426 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.433776785 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.430482359 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.036641326 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424261985 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.422978524 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.442345611 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.23937254 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.424981282 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.425235466 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.440778677 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.425094337 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.424206962 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.430957793 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.426184178 seconds)
  done (took 154.729962755 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.430399811 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.046453812 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.451475741 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.577169426 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.457947841 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.428256692 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.57219892 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.492845636 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.450321462 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.429992021 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.429013655 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.758553009 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.431151018 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.991283822 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.641753038 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.590494183 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.991046526 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.450438718 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.429149857 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.429044842 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.577254735 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.437100396 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.760068891 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.045704039 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.451441051 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.047701612 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418098212 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.432686668 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43143258 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.048898352 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.448932847 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.76036389 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.515145756 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.497235121 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.06717072 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.012193082 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.010400944 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.591491963 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.433284614 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.430680221 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.430615395 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.4167459 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.05079674 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.452827331 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433357582 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.03805023 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.452642433 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.435525497 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.438949225 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.432503763 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.497713578 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.516498443 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.784476435 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.058768168 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.535577388 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.447234142 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576985565 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.825588878 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.436586176 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.996625228 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.417656085 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.056444274 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.453803414 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.418268031 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.434613976 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.439043023 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.597059694 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.576313424 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.997071602 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.452307102 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.996412697 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.615162908 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433076162 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.434552809 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.436764149 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057547561 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.016897361 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.61415106 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.581098038 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.647632881 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.420505921 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.433414383 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.419229655 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.518487525 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.434275579 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.057262947 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.016728497 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.454525016 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.436778852 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.43719772 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.436221438 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.629443968 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.076992692 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.538256746 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.985473633 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.787872871 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.769865829 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.439239894 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500986446 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.453579917 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.7724382 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438707265 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.497823112 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.894727925 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.771791251 seconds)
  done (took 171.793101158 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.697887638 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.737868644 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53387361 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.575084651 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.071747695 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.011341093 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.744314154 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.58563463 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.552451738 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.716488016 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.668306716 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.527511103 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.618804651 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.519446842 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.183509413 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.529883376 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.551373477 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.596332339 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.556781396 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.514444606 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.117597327 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.7361865 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.617110539 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.393342522 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.533247262 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.250446289 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.02154708 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.98056124 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.614483439 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.836346629 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.995427926 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.614512932 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.458506076 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.152890886 seconds)
  done (took 69.157927398 seconds)
done (took 719.074326109 seconds)
SAVING RESULT...
DONE!
